Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> statementList
Rule 3     statementList -> statement
Rule 4     statementList -> statementList statement
Rule 5     statement -> ID ASSIGN expression
Rule 6     statement -> using libreries
Rule 7     statement -> ID ASSIGN stringList
Rule 8     statement -> ID ASSIGN boolean
Rule 9     statement -> ID ASSIGN array
Rule 10    statement -> if conditionList statementList end
Rule 11    statement -> if conditionList statementList else statementList end
Rule 12    statement -> if conditionList statementList elseifList else statementList end
Rule 13    statement -> for iterable statementList end
Rule 14    statement -> while conditionList statementList end
Rule 15    statement -> printList LPARENT stringList RPARENT
Rule 16    statement -> printList LPARENT expression RPARENT
Rule 17    statement -> printList LPARENT boolean RPARENT
Rule 18    statement -> ID ASSIGN readline LPARENT RPARENT
Rule 19    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression
Rule 20    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
Rule 21    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
Rule 22    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array
Rule 23    statement -> ID
Rule 24    statement -> ID assigList expression
Rule 25    statement -> ID LSQUARE arrayIdList RSQUARE assigList expression
Rule 26    statement -> printList LPARENT array RPARENT
Rule 27    statement -> funcList LPARENT optionList RPARENT
Rule 28    statement -> funcVecList LPARENT optionList RPARENT
Rule 29    arrayIdList -> expression COMMA expression
Rule 30    arrayIdList -> expression
Rule 31    libreries -> Statistics
Rule 32    libreries -> StatsBase
Rule 33    iterable -> ID ASSIGN expression TWODOT expression
Rule 34    iterable -> expression in expression
Rule 35    elseifList -> elseif conditionList statementList
Rule 36    elseifList -> elseifList elseif conditionList statementList
Rule 37    conditionList -> condition
Rule 38    conditionList -> conditionList logicRelation condition
Rule 39    condition -> comparables relation comparables
Rule 40    condition -> NOT comparables
Rule 41    comparables -> expression
Rule 42    comparables -> stringList
Rule 43    comparables -> boolean
Rule 44    comparables -> array
Rule 45    relation -> EQUAL
Rule 46    relation -> NE
Rule 47    relation -> LT
Rule 48    relation -> GT
Rule 49    relation -> LTE
Rule 50    relation -> GTE
Rule 51    logicRelation -> AND
Rule 52    logicRelation -> OR
Rule 53    assigList -> ASSIGPLUS
Rule 54    assigList -> ASSIGMINUS
Rule 55    printList -> println
Rule 56    printList -> print
Rule 57    printList -> SHOW
Rule 58    expression -> term
Rule 59    expression -> addingOperator term
Rule 60    expression -> expression addingOperator term
Rule 61    addingOperator -> PLUS
Rule 62    addingOperator -> MINUS
Rule 63    term -> factor
Rule 64    term -> term multiplyingOperator factor
Rule 65    funcList -> sin
Rule 66    funcList -> cos
Rule 67    funcList -> exp
Rule 68    funcList -> log
Rule 69    funcList -> abs
Rule 70    funcList -> sqrt
Rule 71    funcList -> round
Rule 72    funcList -> sign
Rule 73    funcList -> rand
Rule 74    funcList -> zeros
Rule 75    funcList -> parse
Rule 76    funcList -> string
Rule 77    multiplyingOperator -> TIMES
Rule 78    multiplyingOperator -> DIVIDE
Rule 79    multiplyingOperator -> EXPO
Rule 80    multiplyingOperator -> MOD
Rule 81    factor -> ID
Rule 82    factor -> NUMBER
Rule 83    factor -> LPARENT optionList RPARENT
Rule 84    factor -> FLOAT
Rule 85    factor -> ID LSQUARE expression RSQUARE
Rule 86    factor -> funcList LPARENT optionList RPARENT
Rule 87    factor -> funcVecList LPARENT optionList RPARENT
Rule 88    optionList -> expression
Rule 89    optionList -> expression COMMA expression
Rule 90    optionList -> array
Rule 91    optionList -> expression COMMA expression TWODOT expression
Rule 92    optionList -> empty
Rule 93    stringList -> String
Rule 94    stringList -> stringList COMMA expression
Rule 95    stringList -> stringList COMMA String
Rule 96    stringList -> stringList COMMA boolean
Rule 97    stringList -> stringList COMMA array
Rule 98    stringList -> boolean COMMA String
Rule 99    stringList -> expression COMMA String
Rule 100   stringList -> array COMMA String
Rule 101   String -> TEXT
Rule 102   String -> String TIMES TEXT
Rule 103   String -> String TIMES ID
Rule 104   boolean -> true
Rule 105   boolean -> false
Rule 106   array -> LSQUARE arrayList RSQUARE
Rule 107   array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE
Rule 108   arrayList -> expression
Rule 109   arrayList -> String
Rule 110   arrayList -> boolean
Rule 111   arrayList -> LSQUARE arrayList RSQUARE
Rule 112   arrayList -> arrayList COMMA expression
Rule 113   arrayList -> arrayList COMMA String
Rule 114   arrayList -> arrayList COMMA boolean
Rule 115   arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE
Rule 116   numberList -> NUMBER
Rule 117   numberList -> numberList NUMBER
Rule 118   funcVecList -> maximum
Rule 119   funcVecList -> minimum
Rule 120   funcVecList -> findmax
Rule 121   funcVecList -> findmin
Rule 122   funcVecList -> length
Rule 123   funcVecList -> sort
Rule 124   funcVecList -> sortrows
Rule 125   funcVecList -> sum
Rule 126   funcVecList -> prod
Rule 127   funcVecList -> cumsum
Rule 128   funcVecList -> cumprod
Rule 129   funcVecList -> mean
Rule 130   funcVecList -> std
Rule 131   funcVecList -> median
Rule 132   funcVecList -> var
Rule 133   funcVecList -> cov
Rule 134   funcVecList -> mode
Rule 135   funcVecList -> PUSH
Rule 136   funcVecList -> APPEND
Rule 137   funcVecList -> POP
Rule 138   funcVecList -> SPLICE
Rule 139   empty -> <empty>

Terminals, with rules where they appear

AND                  : 51
APPEND               : 136
ASSIGMINUS           : 54
ASSIGN               : 5 7 8 9 18 19 20 21 22 33
ASSIGPLUS            : 53
COMMA                : 29 89 91 94 95 96 97 98 99 100 112 113 114 115
DIVIDE               : 78
EQUAL                : 45
EXPO                 : 79
FLOAT                : 84
GT                   : 48
GTE                  : 50
ID                   : 5 7 8 9 18 19 20 21 22 23 24 25 33 81 85 103
LPARENT              : 15 16 17 18 26 27 28 83 86 87
LSQUARE              : 19 20 21 22 25 85 106 107 111 115
LT                   : 47
LTE                  : 49
MINUS                : 62
MOD                  : 80
NE                   : 46
NOT                  : 40
NUMBER               : 82 116 117
OR                   : 52
PLUS                 : 61
POP                  : 137
PUSH                 : 135
RPARENT              : 15 16 17 18 26 27 28 83 86 87
RSQUARE              : 19 20 21 22 25 85 106 107 111 115
SEMMICOLOM           : 107
SHOW                 : 57
SPLICE               : 138
Statistics           : 31
StatsBase            : 32
TEXT                 : 101 102
TIMES                : 77 102 103
TWODOT               : 33 91
abs                  : 69
cos                  : 66
cov                  : 133
cumprod              : 128
cumsum               : 127
else                 : 11 12
elseif               : 35 36
end                  : 10 11 12 13 14
error                : 
exp                  : 67
false                : 105
findmax              : 120
findmin              : 121
for                  : 13
if                   : 10 11 12
in                   : 34
length               : 122
log                  : 68
maximum              : 118
mean                 : 129
median               : 131
minimum              : 119
mode                 : 134
parse                : 75
print                : 56
println              : 55
prod                 : 126
rand                 : 73
readline             : 18
round                : 71
sign                 : 72
sin                  : 65
sort                 : 123
sortrows             : 124
sqrt                 : 70
std                  : 130
string               : 76
sum                  : 125
true                 : 104
using                : 6
var                  : 132
while                : 14
zeros                : 74

Nonterminals, with rules where they appear

String               : 93 95 98 99 100 102 103 109 113
addingOperator       : 59 60
array                : 9 22 26 44 90 97 100
arrayIdList          : 19 20 21 22 25
arrayList            : 106 111 112 113 114 115 115
assigList            : 24 25
block                : 1
boolean              : 8 17 21 43 96 98 110 114
comparables          : 39 39 40
condition            : 37 38
conditionList        : 10 11 12 14 35 36 38
elseifList           : 12 36
empty                : 92
expression           : 5 16 19 24 25 29 29 30 33 33 34 34 41 60 85 88 89 89 91 91 91 94 99 108 112
factor               : 63 64
funcList             : 27 86
funcVecList          : 28 87
iterable             : 13
libreries            : 6
logicRelation        : 38
multiplyingOperator  : 64
numberList           : 107 107 117
optionList           : 27 28 83 86 87
printList            : 15 16 17 26
program              : 0
relation             : 39
statement            : 3 4
statementList        : 2 4 10 11 11 12 12 13 14 35 36
stringList           : 7 15 20 42 94 95 96 97
term                 : 58 59 60 64

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . statementList
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    program                        shift and go to state 1
    block                          shift and go to state 2
    statementList                  shift and go to state 3
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    $end            reduce using rule 2 (block -> statementList .)
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 4

    (3) statementList -> statement .

    ID              reduce using rule 3 (statementList -> statement .)
    using           reduce using rule 3 (statementList -> statement .)
    if              reduce using rule 3 (statementList -> statement .)
    for             reduce using rule 3 (statementList -> statement .)
    while           reduce using rule 3 (statementList -> statement .)
    println         reduce using rule 3 (statementList -> statement .)
    print           reduce using rule 3 (statementList -> statement .)
    SHOW            reduce using rule 3 (statementList -> statement .)
    sin             reduce using rule 3 (statementList -> statement .)
    cos             reduce using rule 3 (statementList -> statement .)
    exp             reduce using rule 3 (statementList -> statement .)
    log             reduce using rule 3 (statementList -> statement .)
    abs             reduce using rule 3 (statementList -> statement .)
    sqrt            reduce using rule 3 (statementList -> statement .)
    round           reduce using rule 3 (statementList -> statement .)
    sign            reduce using rule 3 (statementList -> statement .)
    rand            reduce using rule 3 (statementList -> statement .)
    zeros           reduce using rule 3 (statementList -> statement .)
    parse           reduce using rule 3 (statementList -> statement .)
    string          reduce using rule 3 (statementList -> statement .)
    maximum         reduce using rule 3 (statementList -> statement .)
    minimum         reduce using rule 3 (statementList -> statement .)
    findmax         reduce using rule 3 (statementList -> statement .)
    findmin         reduce using rule 3 (statementList -> statement .)
    length          reduce using rule 3 (statementList -> statement .)
    sort            reduce using rule 3 (statementList -> statement .)
    sortrows        reduce using rule 3 (statementList -> statement .)
    sum             reduce using rule 3 (statementList -> statement .)
    prod            reduce using rule 3 (statementList -> statement .)
    cumsum          reduce using rule 3 (statementList -> statement .)
    cumprod         reduce using rule 3 (statementList -> statement .)
    mean            reduce using rule 3 (statementList -> statement .)
    std             reduce using rule 3 (statementList -> statement .)
    median          reduce using rule 3 (statementList -> statement .)
    var             reduce using rule 3 (statementList -> statement .)
    cov             reduce using rule 3 (statementList -> statement .)
    mode            reduce using rule 3 (statementList -> statement .)
    PUSH            reduce using rule 3 (statementList -> statement .)
    APPEND          reduce using rule 3 (statementList -> statement .)
    POP             reduce using rule 3 (statementList -> statement .)
    SPLICE          reduce using rule 3 (statementList -> statement .)
    $end            reduce using rule 3 (statementList -> statement .)
    end             reduce using rule 3 (statementList -> statement .)
    else            reduce using rule 3 (statementList -> statement .)
    elseif          reduce using rule 3 (statementList -> statement .)


state 5

    (5) statement -> ID . ASSIGN expression
    (7) statement -> ID . ASSIGN stringList
    (8) statement -> ID . ASSIGN boolean
    (9) statement -> ID . ASSIGN array
    (18) statement -> ID . ASSIGN readline LPARENT RPARENT
    (19) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> ID .
    (24) statement -> ID . assigList expression
    (25) statement -> ID . LSQUARE arrayIdList RSQUARE assigList expression
    (53) assigList -> . ASSIGPLUS
    (54) assigList -> . ASSIGMINUS

    ASSIGN          shift and go to state 50
    LSQUARE         shift and go to state 51
    ID              reduce using rule 23 (statement -> ID .)
    using           reduce using rule 23 (statement -> ID .)
    if              reduce using rule 23 (statement -> ID .)
    for             reduce using rule 23 (statement -> ID .)
    while           reduce using rule 23 (statement -> ID .)
    println         reduce using rule 23 (statement -> ID .)
    print           reduce using rule 23 (statement -> ID .)
    SHOW            reduce using rule 23 (statement -> ID .)
    sin             reduce using rule 23 (statement -> ID .)
    cos             reduce using rule 23 (statement -> ID .)
    exp             reduce using rule 23 (statement -> ID .)
    log             reduce using rule 23 (statement -> ID .)
    abs             reduce using rule 23 (statement -> ID .)
    sqrt            reduce using rule 23 (statement -> ID .)
    round           reduce using rule 23 (statement -> ID .)
    sign            reduce using rule 23 (statement -> ID .)
    rand            reduce using rule 23 (statement -> ID .)
    zeros           reduce using rule 23 (statement -> ID .)
    parse           reduce using rule 23 (statement -> ID .)
    string          reduce using rule 23 (statement -> ID .)
    maximum         reduce using rule 23 (statement -> ID .)
    minimum         reduce using rule 23 (statement -> ID .)
    findmax         reduce using rule 23 (statement -> ID .)
    findmin         reduce using rule 23 (statement -> ID .)
    length          reduce using rule 23 (statement -> ID .)
    sort            reduce using rule 23 (statement -> ID .)
    sortrows        reduce using rule 23 (statement -> ID .)
    sum             reduce using rule 23 (statement -> ID .)
    prod            reduce using rule 23 (statement -> ID .)
    cumsum          reduce using rule 23 (statement -> ID .)
    cumprod         reduce using rule 23 (statement -> ID .)
    mean            reduce using rule 23 (statement -> ID .)
    std             reduce using rule 23 (statement -> ID .)
    median          reduce using rule 23 (statement -> ID .)
    var             reduce using rule 23 (statement -> ID .)
    cov             reduce using rule 23 (statement -> ID .)
    mode            reduce using rule 23 (statement -> ID .)
    PUSH            reduce using rule 23 (statement -> ID .)
    APPEND          reduce using rule 23 (statement -> ID .)
    POP             reduce using rule 23 (statement -> ID .)
    SPLICE          reduce using rule 23 (statement -> ID .)
    $end            reduce using rule 23 (statement -> ID .)
    end             reduce using rule 23 (statement -> ID .)
    else            reduce using rule 23 (statement -> ID .)
    elseif          reduce using rule 23 (statement -> ID .)
    ASSIGPLUS       shift and go to state 53
    ASSIGMINUS      shift and go to state 54

    assigList                      shift and go to state 52

state 6

    (6) statement -> using . libreries
    (31) libreries -> . Statistics
    (32) libreries -> . StatsBase

    Statistics      shift and go to state 56
    StatsBase       shift and go to state 57

    libreries                      shift and go to state 55

state 7

    (10) statement -> if . conditionList statementList end
    (11) statement -> if . conditionList statementList else statementList end
    (12) statement -> if . conditionList statementList elseifList else statementList end
    (37) conditionList -> . condition
    (38) conditionList -> . conditionList logicRelation condition
    (39) condition -> . comparables relation comparables
    (40) condition -> . NOT comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    NOT             shift and go to state 61
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    conditionList                  shift and go to state 58
    condition                      shift and go to state 59
    comparables                    shift and go to state 60
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 8

    (13) statement -> for . iterable statementList end
    (33) iterable -> . ID ASSIGN expression TWODOT expression
    (34) iterable -> . expression in expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 83
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    iterable                       shift and go to state 82
    expression                     shift and go to state 84
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 9

    (14) statement -> while . conditionList statementList end
    (37) conditionList -> . condition
    (38) conditionList -> . conditionList logicRelation condition
    (39) condition -> . comparables relation comparables
    (40) condition -> . NOT comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    NOT             shift and go to state 61
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    conditionList                  shift and go to state 85
    condition                      shift and go to state 59
    comparables                    shift and go to state 60
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 10

    (15) statement -> printList . LPARENT stringList RPARENT
    (16) statement -> printList . LPARENT expression RPARENT
    (17) statement -> printList . LPARENT boolean RPARENT
    (26) statement -> printList . LPARENT array RPARENT

    LPARENT         shift and go to state 86


state 11

    (27) statement -> funcList . LPARENT optionList RPARENT

    LPARENT         shift and go to state 87


state 12

    (28) statement -> funcVecList . LPARENT optionList RPARENT

    LPARENT         shift and go to state 88


state 13

    (55) printList -> println .

    LPARENT         reduce using rule 55 (printList -> println .)


state 14

    (56) printList -> print .

    LPARENT         reduce using rule 56 (printList -> print .)


state 15

    (57) printList -> SHOW .

    LPARENT         reduce using rule 57 (printList -> SHOW .)


state 16

    (65) funcList -> sin .

    LPARENT         reduce using rule 65 (funcList -> sin .)


state 17

    (66) funcList -> cos .

    LPARENT         reduce using rule 66 (funcList -> cos .)


state 18

    (67) funcList -> exp .

    LPARENT         reduce using rule 67 (funcList -> exp .)


state 19

    (68) funcList -> log .

    LPARENT         reduce using rule 68 (funcList -> log .)


state 20

    (69) funcList -> abs .

    LPARENT         reduce using rule 69 (funcList -> abs .)


state 21

    (70) funcList -> sqrt .

    LPARENT         reduce using rule 70 (funcList -> sqrt .)


state 22

    (71) funcList -> round .

    LPARENT         reduce using rule 71 (funcList -> round .)


state 23

    (72) funcList -> sign .

    LPARENT         reduce using rule 72 (funcList -> sign .)


state 24

    (73) funcList -> rand .

    LPARENT         reduce using rule 73 (funcList -> rand .)


state 25

    (74) funcList -> zeros .

    LPARENT         reduce using rule 74 (funcList -> zeros .)


state 26

    (75) funcList -> parse .

    LPARENT         reduce using rule 75 (funcList -> parse .)


state 27

    (76) funcList -> string .

    LPARENT         reduce using rule 76 (funcList -> string .)


state 28

    (118) funcVecList -> maximum .

    LPARENT         reduce using rule 118 (funcVecList -> maximum .)


state 29

    (119) funcVecList -> minimum .

    LPARENT         reduce using rule 119 (funcVecList -> minimum .)


state 30

    (120) funcVecList -> findmax .

    LPARENT         reduce using rule 120 (funcVecList -> findmax .)


state 31

    (121) funcVecList -> findmin .

    LPARENT         reduce using rule 121 (funcVecList -> findmin .)


state 32

    (122) funcVecList -> length .

    LPARENT         reduce using rule 122 (funcVecList -> length .)


state 33

    (123) funcVecList -> sort .

    LPARENT         reduce using rule 123 (funcVecList -> sort .)


state 34

    (124) funcVecList -> sortrows .

    LPARENT         reduce using rule 124 (funcVecList -> sortrows .)


state 35

    (125) funcVecList -> sum .

    LPARENT         reduce using rule 125 (funcVecList -> sum .)


state 36

    (126) funcVecList -> prod .

    LPARENT         reduce using rule 126 (funcVecList -> prod .)


state 37

    (127) funcVecList -> cumsum .

    LPARENT         reduce using rule 127 (funcVecList -> cumsum .)


state 38

    (128) funcVecList -> cumprod .

    LPARENT         reduce using rule 128 (funcVecList -> cumprod .)


state 39

    (129) funcVecList -> mean .

    LPARENT         reduce using rule 129 (funcVecList -> mean .)


state 40

    (130) funcVecList -> std .

    LPARENT         reduce using rule 130 (funcVecList -> std .)


state 41

    (131) funcVecList -> median .

    LPARENT         reduce using rule 131 (funcVecList -> median .)


state 42

    (132) funcVecList -> var .

    LPARENT         reduce using rule 132 (funcVecList -> var .)


state 43

    (133) funcVecList -> cov .

    LPARENT         reduce using rule 133 (funcVecList -> cov .)


state 44

    (134) funcVecList -> mode .

    LPARENT         reduce using rule 134 (funcVecList -> mode .)


state 45

    (135) funcVecList -> PUSH .

    LPARENT         reduce using rule 135 (funcVecList -> PUSH .)


state 46

    (136) funcVecList -> APPEND .

    LPARENT         reduce using rule 136 (funcVecList -> APPEND .)


state 47

    (137) funcVecList -> POP .

    LPARENT         reduce using rule 137 (funcVecList -> POP .)


state 48

    (138) funcVecList -> SPLICE .

    LPARENT         reduce using rule 138 (funcVecList -> SPLICE .)


state 49

    (4) statementList -> statementList statement .

    ID              reduce using rule 4 (statementList -> statementList statement .)
    using           reduce using rule 4 (statementList -> statementList statement .)
    if              reduce using rule 4 (statementList -> statementList statement .)
    for             reduce using rule 4 (statementList -> statementList statement .)
    while           reduce using rule 4 (statementList -> statementList statement .)
    println         reduce using rule 4 (statementList -> statementList statement .)
    print           reduce using rule 4 (statementList -> statementList statement .)
    SHOW            reduce using rule 4 (statementList -> statementList statement .)
    sin             reduce using rule 4 (statementList -> statementList statement .)
    cos             reduce using rule 4 (statementList -> statementList statement .)
    exp             reduce using rule 4 (statementList -> statementList statement .)
    log             reduce using rule 4 (statementList -> statementList statement .)
    abs             reduce using rule 4 (statementList -> statementList statement .)
    sqrt            reduce using rule 4 (statementList -> statementList statement .)
    round           reduce using rule 4 (statementList -> statementList statement .)
    sign            reduce using rule 4 (statementList -> statementList statement .)
    rand            reduce using rule 4 (statementList -> statementList statement .)
    zeros           reduce using rule 4 (statementList -> statementList statement .)
    parse           reduce using rule 4 (statementList -> statementList statement .)
    string          reduce using rule 4 (statementList -> statementList statement .)
    maximum         reduce using rule 4 (statementList -> statementList statement .)
    minimum         reduce using rule 4 (statementList -> statementList statement .)
    findmax         reduce using rule 4 (statementList -> statementList statement .)
    findmin         reduce using rule 4 (statementList -> statementList statement .)
    length          reduce using rule 4 (statementList -> statementList statement .)
    sort            reduce using rule 4 (statementList -> statementList statement .)
    sortrows        reduce using rule 4 (statementList -> statementList statement .)
    sum             reduce using rule 4 (statementList -> statementList statement .)
    prod            reduce using rule 4 (statementList -> statementList statement .)
    cumsum          reduce using rule 4 (statementList -> statementList statement .)
    cumprod         reduce using rule 4 (statementList -> statementList statement .)
    mean            reduce using rule 4 (statementList -> statementList statement .)
    std             reduce using rule 4 (statementList -> statementList statement .)
    median          reduce using rule 4 (statementList -> statementList statement .)
    var             reduce using rule 4 (statementList -> statementList statement .)
    cov             reduce using rule 4 (statementList -> statementList statement .)
    mode            reduce using rule 4 (statementList -> statementList statement .)
    PUSH            reduce using rule 4 (statementList -> statementList statement .)
    APPEND          reduce using rule 4 (statementList -> statementList statement .)
    POP             reduce using rule 4 (statementList -> statementList statement .)
    SPLICE          reduce using rule 4 (statementList -> statementList statement .)
    $end            reduce using rule 4 (statementList -> statementList statement .)
    end             reduce using rule 4 (statementList -> statementList statement .)
    else            reduce using rule 4 (statementList -> statementList statement .)
    elseif          reduce using rule 4 (statementList -> statementList statement .)


state 50

    (5) statement -> ID ASSIGN . expression
    (7) statement -> ID ASSIGN . stringList
    (8) statement -> ID ASSIGN . boolean
    (9) statement -> ID ASSIGN . array
    (18) statement -> ID ASSIGN . readline LPARENT RPARENT
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    readline        shift and go to state 93
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 89
    stringList                     shift and go to state 90
    boolean                        shift and go to state 91
    array                          shift and go to state 92
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 51

    (19) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN expression
    (20) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN array
    (25) statement -> ID LSQUARE . arrayIdList RSQUARE assigList expression
    (29) arrayIdList -> . expression COMMA expression
    (30) arrayIdList -> . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    arrayIdList                    shift and go to state 94
    expression                     shift and go to state 95
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 52

    (24) statement -> ID assigList . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 96
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 53

    (53) assigList -> ASSIGPLUS .

    PLUS            reduce using rule 53 (assigList -> ASSIGPLUS .)
    MINUS           reduce using rule 53 (assigList -> ASSIGPLUS .)
    ID              reduce using rule 53 (assigList -> ASSIGPLUS .)
    NUMBER          reduce using rule 53 (assigList -> ASSIGPLUS .)
    LPARENT         reduce using rule 53 (assigList -> ASSIGPLUS .)
    FLOAT           reduce using rule 53 (assigList -> ASSIGPLUS .)
    sin             reduce using rule 53 (assigList -> ASSIGPLUS .)
    cos             reduce using rule 53 (assigList -> ASSIGPLUS .)
    exp             reduce using rule 53 (assigList -> ASSIGPLUS .)
    log             reduce using rule 53 (assigList -> ASSIGPLUS .)
    abs             reduce using rule 53 (assigList -> ASSIGPLUS .)
    sqrt            reduce using rule 53 (assigList -> ASSIGPLUS .)
    round           reduce using rule 53 (assigList -> ASSIGPLUS .)
    sign            reduce using rule 53 (assigList -> ASSIGPLUS .)
    rand            reduce using rule 53 (assigList -> ASSIGPLUS .)
    zeros           reduce using rule 53 (assigList -> ASSIGPLUS .)
    parse           reduce using rule 53 (assigList -> ASSIGPLUS .)
    string          reduce using rule 53 (assigList -> ASSIGPLUS .)
    maximum         reduce using rule 53 (assigList -> ASSIGPLUS .)
    minimum         reduce using rule 53 (assigList -> ASSIGPLUS .)
    findmax         reduce using rule 53 (assigList -> ASSIGPLUS .)
    findmin         reduce using rule 53 (assigList -> ASSIGPLUS .)
    length          reduce using rule 53 (assigList -> ASSIGPLUS .)
    sort            reduce using rule 53 (assigList -> ASSIGPLUS .)
    sortrows        reduce using rule 53 (assigList -> ASSIGPLUS .)
    sum             reduce using rule 53 (assigList -> ASSIGPLUS .)
    prod            reduce using rule 53 (assigList -> ASSIGPLUS .)
    cumsum          reduce using rule 53 (assigList -> ASSIGPLUS .)
    cumprod         reduce using rule 53 (assigList -> ASSIGPLUS .)
    mean            reduce using rule 53 (assigList -> ASSIGPLUS .)
    std             reduce using rule 53 (assigList -> ASSIGPLUS .)
    median          reduce using rule 53 (assigList -> ASSIGPLUS .)
    var             reduce using rule 53 (assigList -> ASSIGPLUS .)
    cov             reduce using rule 53 (assigList -> ASSIGPLUS .)
    mode            reduce using rule 53 (assigList -> ASSIGPLUS .)
    PUSH            reduce using rule 53 (assigList -> ASSIGPLUS .)
    APPEND          reduce using rule 53 (assigList -> ASSIGPLUS .)
    POP             reduce using rule 53 (assigList -> ASSIGPLUS .)
    SPLICE          reduce using rule 53 (assigList -> ASSIGPLUS .)


state 54

    (54) assigList -> ASSIGMINUS .

    PLUS            reduce using rule 54 (assigList -> ASSIGMINUS .)
    MINUS           reduce using rule 54 (assigList -> ASSIGMINUS .)
    ID              reduce using rule 54 (assigList -> ASSIGMINUS .)
    NUMBER          reduce using rule 54 (assigList -> ASSIGMINUS .)
    LPARENT         reduce using rule 54 (assigList -> ASSIGMINUS .)
    FLOAT           reduce using rule 54 (assigList -> ASSIGMINUS .)
    sin             reduce using rule 54 (assigList -> ASSIGMINUS .)
    cos             reduce using rule 54 (assigList -> ASSIGMINUS .)
    exp             reduce using rule 54 (assigList -> ASSIGMINUS .)
    log             reduce using rule 54 (assigList -> ASSIGMINUS .)
    abs             reduce using rule 54 (assigList -> ASSIGMINUS .)
    sqrt            reduce using rule 54 (assigList -> ASSIGMINUS .)
    round           reduce using rule 54 (assigList -> ASSIGMINUS .)
    sign            reduce using rule 54 (assigList -> ASSIGMINUS .)
    rand            reduce using rule 54 (assigList -> ASSIGMINUS .)
    zeros           reduce using rule 54 (assigList -> ASSIGMINUS .)
    parse           reduce using rule 54 (assigList -> ASSIGMINUS .)
    string          reduce using rule 54 (assigList -> ASSIGMINUS .)
    maximum         reduce using rule 54 (assigList -> ASSIGMINUS .)
    minimum         reduce using rule 54 (assigList -> ASSIGMINUS .)
    findmax         reduce using rule 54 (assigList -> ASSIGMINUS .)
    findmin         reduce using rule 54 (assigList -> ASSIGMINUS .)
    length          reduce using rule 54 (assigList -> ASSIGMINUS .)
    sort            reduce using rule 54 (assigList -> ASSIGMINUS .)
    sortrows        reduce using rule 54 (assigList -> ASSIGMINUS .)
    sum             reduce using rule 54 (assigList -> ASSIGMINUS .)
    prod            reduce using rule 54 (assigList -> ASSIGMINUS .)
    cumsum          reduce using rule 54 (assigList -> ASSIGMINUS .)
    cumprod         reduce using rule 54 (assigList -> ASSIGMINUS .)
    mean            reduce using rule 54 (assigList -> ASSIGMINUS .)
    std             reduce using rule 54 (assigList -> ASSIGMINUS .)
    median          reduce using rule 54 (assigList -> ASSIGMINUS .)
    var             reduce using rule 54 (assigList -> ASSIGMINUS .)
    cov             reduce using rule 54 (assigList -> ASSIGMINUS .)
    mode            reduce using rule 54 (assigList -> ASSIGMINUS .)
    PUSH            reduce using rule 54 (assigList -> ASSIGMINUS .)
    APPEND          reduce using rule 54 (assigList -> ASSIGMINUS .)
    POP             reduce using rule 54 (assigList -> ASSIGMINUS .)
    SPLICE          reduce using rule 54 (assigList -> ASSIGMINUS .)


state 55

    (6) statement -> using libreries .

    ID              reduce using rule 6 (statement -> using libreries .)
    using           reduce using rule 6 (statement -> using libreries .)
    if              reduce using rule 6 (statement -> using libreries .)
    for             reduce using rule 6 (statement -> using libreries .)
    while           reduce using rule 6 (statement -> using libreries .)
    println         reduce using rule 6 (statement -> using libreries .)
    print           reduce using rule 6 (statement -> using libreries .)
    SHOW            reduce using rule 6 (statement -> using libreries .)
    sin             reduce using rule 6 (statement -> using libreries .)
    cos             reduce using rule 6 (statement -> using libreries .)
    exp             reduce using rule 6 (statement -> using libreries .)
    log             reduce using rule 6 (statement -> using libreries .)
    abs             reduce using rule 6 (statement -> using libreries .)
    sqrt            reduce using rule 6 (statement -> using libreries .)
    round           reduce using rule 6 (statement -> using libreries .)
    sign            reduce using rule 6 (statement -> using libreries .)
    rand            reduce using rule 6 (statement -> using libreries .)
    zeros           reduce using rule 6 (statement -> using libreries .)
    parse           reduce using rule 6 (statement -> using libreries .)
    string          reduce using rule 6 (statement -> using libreries .)
    maximum         reduce using rule 6 (statement -> using libreries .)
    minimum         reduce using rule 6 (statement -> using libreries .)
    findmax         reduce using rule 6 (statement -> using libreries .)
    findmin         reduce using rule 6 (statement -> using libreries .)
    length          reduce using rule 6 (statement -> using libreries .)
    sort            reduce using rule 6 (statement -> using libreries .)
    sortrows        reduce using rule 6 (statement -> using libreries .)
    sum             reduce using rule 6 (statement -> using libreries .)
    prod            reduce using rule 6 (statement -> using libreries .)
    cumsum          reduce using rule 6 (statement -> using libreries .)
    cumprod         reduce using rule 6 (statement -> using libreries .)
    mean            reduce using rule 6 (statement -> using libreries .)
    std             reduce using rule 6 (statement -> using libreries .)
    median          reduce using rule 6 (statement -> using libreries .)
    var             reduce using rule 6 (statement -> using libreries .)
    cov             reduce using rule 6 (statement -> using libreries .)
    mode            reduce using rule 6 (statement -> using libreries .)
    PUSH            reduce using rule 6 (statement -> using libreries .)
    APPEND          reduce using rule 6 (statement -> using libreries .)
    POP             reduce using rule 6 (statement -> using libreries .)
    SPLICE          reduce using rule 6 (statement -> using libreries .)
    $end            reduce using rule 6 (statement -> using libreries .)
    end             reduce using rule 6 (statement -> using libreries .)
    else            reduce using rule 6 (statement -> using libreries .)
    elseif          reduce using rule 6 (statement -> using libreries .)


state 56

    (31) libreries -> Statistics .

    ID              reduce using rule 31 (libreries -> Statistics .)
    using           reduce using rule 31 (libreries -> Statistics .)
    if              reduce using rule 31 (libreries -> Statistics .)
    for             reduce using rule 31 (libreries -> Statistics .)
    while           reduce using rule 31 (libreries -> Statistics .)
    println         reduce using rule 31 (libreries -> Statistics .)
    print           reduce using rule 31 (libreries -> Statistics .)
    SHOW            reduce using rule 31 (libreries -> Statistics .)
    sin             reduce using rule 31 (libreries -> Statistics .)
    cos             reduce using rule 31 (libreries -> Statistics .)
    exp             reduce using rule 31 (libreries -> Statistics .)
    log             reduce using rule 31 (libreries -> Statistics .)
    abs             reduce using rule 31 (libreries -> Statistics .)
    sqrt            reduce using rule 31 (libreries -> Statistics .)
    round           reduce using rule 31 (libreries -> Statistics .)
    sign            reduce using rule 31 (libreries -> Statistics .)
    rand            reduce using rule 31 (libreries -> Statistics .)
    zeros           reduce using rule 31 (libreries -> Statistics .)
    parse           reduce using rule 31 (libreries -> Statistics .)
    string          reduce using rule 31 (libreries -> Statistics .)
    maximum         reduce using rule 31 (libreries -> Statistics .)
    minimum         reduce using rule 31 (libreries -> Statistics .)
    findmax         reduce using rule 31 (libreries -> Statistics .)
    findmin         reduce using rule 31 (libreries -> Statistics .)
    length          reduce using rule 31 (libreries -> Statistics .)
    sort            reduce using rule 31 (libreries -> Statistics .)
    sortrows        reduce using rule 31 (libreries -> Statistics .)
    sum             reduce using rule 31 (libreries -> Statistics .)
    prod            reduce using rule 31 (libreries -> Statistics .)
    cumsum          reduce using rule 31 (libreries -> Statistics .)
    cumprod         reduce using rule 31 (libreries -> Statistics .)
    mean            reduce using rule 31 (libreries -> Statistics .)
    std             reduce using rule 31 (libreries -> Statistics .)
    median          reduce using rule 31 (libreries -> Statistics .)
    var             reduce using rule 31 (libreries -> Statistics .)
    cov             reduce using rule 31 (libreries -> Statistics .)
    mode            reduce using rule 31 (libreries -> Statistics .)
    PUSH            reduce using rule 31 (libreries -> Statistics .)
    APPEND          reduce using rule 31 (libreries -> Statistics .)
    POP             reduce using rule 31 (libreries -> Statistics .)
    SPLICE          reduce using rule 31 (libreries -> Statistics .)
    $end            reduce using rule 31 (libreries -> Statistics .)
    end             reduce using rule 31 (libreries -> Statistics .)
    else            reduce using rule 31 (libreries -> Statistics .)
    elseif          reduce using rule 31 (libreries -> Statistics .)


state 57

    (32) libreries -> StatsBase .

    ID              reduce using rule 32 (libreries -> StatsBase .)
    using           reduce using rule 32 (libreries -> StatsBase .)
    if              reduce using rule 32 (libreries -> StatsBase .)
    for             reduce using rule 32 (libreries -> StatsBase .)
    while           reduce using rule 32 (libreries -> StatsBase .)
    println         reduce using rule 32 (libreries -> StatsBase .)
    print           reduce using rule 32 (libreries -> StatsBase .)
    SHOW            reduce using rule 32 (libreries -> StatsBase .)
    sin             reduce using rule 32 (libreries -> StatsBase .)
    cos             reduce using rule 32 (libreries -> StatsBase .)
    exp             reduce using rule 32 (libreries -> StatsBase .)
    log             reduce using rule 32 (libreries -> StatsBase .)
    abs             reduce using rule 32 (libreries -> StatsBase .)
    sqrt            reduce using rule 32 (libreries -> StatsBase .)
    round           reduce using rule 32 (libreries -> StatsBase .)
    sign            reduce using rule 32 (libreries -> StatsBase .)
    rand            reduce using rule 32 (libreries -> StatsBase .)
    zeros           reduce using rule 32 (libreries -> StatsBase .)
    parse           reduce using rule 32 (libreries -> StatsBase .)
    string          reduce using rule 32 (libreries -> StatsBase .)
    maximum         reduce using rule 32 (libreries -> StatsBase .)
    minimum         reduce using rule 32 (libreries -> StatsBase .)
    findmax         reduce using rule 32 (libreries -> StatsBase .)
    findmin         reduce using rule 32 (libreries -> StatsBase .)
    length          reduce using rule 32 (libreries -> StatsBase .)
    sort            reduce using rule 32 (libreries -> StatsBase .)
    sortrows        reduce using rule 32 (libreries -> StatsBase .)
    sum             reduce using rule 32 (libreries -> StatsBase .)
    prod            reduce using rule 32 (libreries -> StatsBase .)
    cumsum          reduce using rule 32 (libreries -> StatsBase .)
    cumprod         reduce using rule 32 (libreries -> StatsBase .)
    mean            reduce using rule 32 (libreries -> StatsBase .)
    std             reduce using rule 32 (libreries -> StatsBase .)
    median          reduce using rule 32 (libreries -> StatsBase .)
    var             reduce using rule 32 (libreries -> StatsBase .)
    cov             reduce using rule 32 (libreries -> StatsBase .)
    mode            reduce using rule 32 (libreries -> StatsBase .)
    PUSH            reduce using rule 32 (libreries -> StatsBase .)
    APPEND          reduce using rule 32 (libreries -> StatsBase .)
    POP             reduce using rule 32 (libreries -> StatsBase .)
    SPLICE          reduce using rule 32 (libreries -> StatsBase .)
    $end            reduce using rule 32 (libreries -> StatsBase .)
    end             reduce using rule 32 (libreries -> StatsBase .)
    else            reduce using rule 32 (libreries -> StatsBase .)
    elseif          reduce using rule 32 (libreries -> StatsBase .)


state 58

    (10) statement -> if conditionList . statementList end
    (11) statement -> if conditionList . statementList else statementList end
    (12) statement -> if conditionList . statementList elseifList else statementList end
    (38) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (51) logicRelation -> . AND
    (52) logicRelation -> . OR
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    AND             shift and go to state 99
    OR              shift and go to state 100
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 97
    logicRelation                  shift and go to state 98
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 59

    (37) conditionList -> condition .

    AND             reduce using rule 37 (conditionList -> condition .)
    OR              reduce using rule 37 (conditionList -> condition .)
    ID              reduce using rule 37 (conditionList -> condition .)
    using           reduce using rule 37 (conditionList -> condition .)
    if              reduce using rule 37 (conditionList -> condition .)
    for             reduce using rule 37 (conditionList -> condition .)
    while           reduce using rule 37 (conditionList -> condition .)
    println         reduce using rule 37 (conditionList -> condition .)
    print           reduce using rule 37 (conditionList -> condition .)
    SHOW            reduce using rule 37 (conditionList -> condition .)
    sin             reduce using rule 37 (conditionList -> condition .)
    cos             reduce using rule 37 (conditionList -> condition .)
    exp             reduce using rule 37 (conditionList -> condition .)
    log             reduce using rule 37 (conditionList -> condition .)
    abs             reduce using rule 37 (conditionList -> condition .)
    sqrt            reduce using rule 37 (conditionList -> condition .)
    round           reduce using rule 37 (conditionList -> condition .)
    sign            reduce using rule 37 (conditionList -> condition .)
    rand            reduce using rule 37 (conditionList -> condition .)
    zeros           reduce using rule 37 (conditionList -> condition .)
    parse           reduce using rule 37 (conditionList -> condition .)
    string          reduce using rule 37 (conditionList -> condition .)
    maximum         reduce using rule 37 (conditionList -> condition .)
    minimum         reduce using rule 37 (conditionList -> condition .)
    findmax         reduce using rule 37 (conditionList -> condition .)
    findmin         reduce using rule 37 (conditionList -> condition .)
    length          reduce using rule 37 (conditionList -> condition .)
    sort            reduce using rule 37 (conditionList -> condition .)
    sortrows        reduce using rule 37 (conditionList -> condition .)
    sum             reduce using rule 37 (conditionList -> condition .)
    prod            reduce using rule 37 (conditionList -> condition .)
    cumsum          reduce using rule 37 (conditionList -> condition .)
    cumprod         reduce using rule 37 (conditionList -> condition .)
    mean            reduce using rule 37 (conditionList -> condition .)
    std             reduce using rule 37 (conditionList -> condition .)
    median          reduce using rule 37 (conditionList -> condition .)
    var             reduce using rule 37 (conditionList -> condition .)
    cov             reduce using rule 37 (conditionList -> condition .)
    mode            reduce using rule 37 (conditionList -> condition .)
    PUSH            reduce using rule 37 (conditionList -> condition .)
    APPEND          reduce using rule 37 (conditionList -> condition .)
    POP             reduce using rule 37 (conditionList -> condition .)
    SPLICE          reduce using rule 37 (conditionList -> condition .)


state 60

    (39) condition -> comparables . relation comparables
    (45) relation -> . EQUAL
    (46) relation -> . NE
    (47) relation -> . LT
    (48) relation -> . GT
    (49) relation -> . LTE
    (50) relation -> . GTE

    EQUAL           shift and go to state 102
    NE              shift and go to state 103
    LT              shift and go to state 104
    GT              shift and go to state 105
    LTE             shift and go to state 106
    GTE             shift and go to state 107

    relation                       shift and go to state 101

state 61

    (40) condition -> NOT . comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    comparables                    shift and go to state 108
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 62

    (41) comparables -> expression .
    (60) expression -> expression . addingOperator term
    (99) stringList -> expression . COMMA String
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    EQUAL           reduce using rule 41 (comparables -> expression .)
    NE              reduce using rule 41 (comparables -> expression .)
    LT              reduce using rule 41 (comparables -> expression .)
    GT              reduce using rule 41 (comparables -> expression .)
    LTE             reduce using rule 41 (comparables -> expression .)
    GTE             reduce using rule 41 (comparables -> expression .)
    AND             reduce using rule 41 (comparables -> expression .)
    OR              reduce using rule 41 (comparables -> expression .)
    ID              reduce using rule 41 (comparables -> expression .)
    using           reduce using rule 41 (comparables -> expression .)
    if              reduce using rule 41 (comparables -> expression .)
    for             reduce using rule 41 (comparables -> expression .)
    while           reduce using rule 41 (comparables -> expression .)
    println         reduce using rule 41 (comparables -> expression .)
    print           reduce using rule 41 (comparables -> expression .)
    SHOW            reduce using rule 41 (comparables -> expression .)
    sin             reduce using rule 41 (comparables -> expression .)
    cos             reduce using rule 41 (comparables -> expression .)
    exp             reduce using rule 41 (comparables -> expression .)
    log             reduce using rule 41 (comparables -> expression .)
    abs             reduce using rule 41 (comparables -> expression .)
    sqrt            reduce using rule 41 (comparables -> expression .)
    round           reduce using rule 41 (comparables -> expression .)
    sign            reduce using rule 41 (comparables -> expression .)
    rand            reduce using rule 41 (comparables -> expression .)
    zeros           reduce using rule 41 (comparables -> expression .)
    parse           reduce using rule 41 (comparables -> expression .)
    string          reduce using rule 41 (comparables -> expression .)
    maximum         reduce using rule 41 (comparables -> expression .)
    minimum         reduce using rule 41 (comparables -> expression .)
    findmax         reduce using rule 41 (comparables -> expression .)
    findmin         reduce using rule 41 (comparables -> expression .)
    length          reduce using rule 41 (comparables -> expression .)
    sort            reduce using rule 41 (comparables -> expression .)
    sortrows        reduce using rule 41 (comparables -> expression .)
    sum             reduce using rule 41 (comparables -> expression .)
    prod            reduce using rule 41 (comparables -> expression .)
    cumsum          reduce using rule 41 (comparables -> expression .)
    cumprod         reduce using rule 41 (comparables -> expression .)
    mean            reduce using rule 41 (comparables -> expression .)
    std             reduce using rule 41 (comparables -> expression .)
    median          reduce using rule 41 (comparables -> expression .)
    var             reduce using rule 41 (comparables -> expression .)
    cov             reduce using rule 41 (comparables -> expression .)
    mode            reduce using rule 41 (comparables -> expression .)
    PUSH            reduce using rule 41 (comparables -> expression .)
    APPEND          reduce using rule 41 (comparables -> expression .)
    POP             reduce using rule 41 (comparables -> expression .)
    SPLICE          reduce using rule 41 (comparables -> expression .)
    COMMA           shift and go to state 110
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 63

    (42) comparables -> stringList .
    (94) stringList -> stringList . COMMA expression
    (95) stringList -> stringList . COMMA String
    (96) stringList -> stringList . COMMA boolean
    (97) stringList -> stringList . COMMA array

    EQUAL           reduce using rule 42 (comparables -> stringList .)
    NE              reduce using rule 42 (comparables -> stringList .)
    LT              reduce using rule 42 (comparables -> stringList .)
    GT              reduce using rule 42 (comparables -> stringList .)
    LTE             reduce using rule 42 (comparables -> stringList .)
    GTE             reduce using rule 42 (comparables -> stringList .)
    AND             reduce using rule 42 (comparables -> stringList .)
    OR              reduce using rule 42 (comparables -> stringList .)
    ID              reduce using rule 42 (comparables -> stringList .)
    using           reduce using rule 42 (comparables -> stringList .)
    if              reduce using rule 42 (comparables -> stringList .)
    for             reduce using rule 42 (comparables -> stringList .)
    while           reduce using rule 42 (comparables -> stringList .)
    println         reduce using rule 42 (comparables -> stringList .)
    print           reduce using rule 42 (comparables -> stringList .)
    SHOW            reduce using rule 42 (comparables -> stringList .)
    sin             reduce using rule 42 (comparables -> stringList .)
    cos             reduce using rule 42 (comparables -> stringList .)
    exp             reduce using rule 42 (comparables -> stringList .)
    log             reduce using rule 42 (comparables -> stringList .)
    abs             reduce using rule 42 (comparables -> stringList .)
    sqrt            reduce using rule 42 (comparables -> stringList .)
    round           reduce using rule 42 (comparables -> stringList .)
    sign            reduce using rule 42 (comparables -> stringList .)
    rand            reduce using rule 42 (comparables -> stringList .)
    zeros           reduce using rule 42 (comparables -> stringList .)
    parse           reduce using rule 42 (comparables -> stringList .)
    string          reduce using rule 42 (comparables -> stringList .)
    maximum         reduce using rule 42 (comparables -> stringList .)
    minimum         reduce using rule 42 (comparables -> stringList .)
    findmax         reduce using rule 42 (comparables -> stringList .)
    findmin         reduce using rule 42 (comparables -> stringList .)
    length          reduce using rule 42 (comparables -> stringList .)
    sort            reduce using rule 42 (comparables -> stringList .)
    sortrows        reduce using rule 42 (comparables -> stringList .)
    sum             reduce using rule 42 (comparables -> stringList .)
    prod            reduce using rule 42 (comparables -> stringList .)
    cumsum          reduce using rule 42 (comparables -> stringList .)
    cumprod         reduce using rule 42 (comparables -> stringList .)
    mean            reduce using rule 42 (comparables -> stringList .)
    std             reduce using rule 42 (comparables -> stringList .)
    median          reduce using rule 42 (comparables -> stringList .)
    var             reduce using rule 42 (comparables -> stringList .)
    cov             reduce using rule 42 (comparables -> stringList .)
    mode            reduce using rule 42 (comparables -> stringList .)
    PUSH            reduce using rule 42 (comparables -> stringList .)
    APPEND          reduce using rule 42 (comparables -> stringList .)
    POP             reduce using rule 42 (comparables -> stringList .)
    SPLICE          reduce using rule 42 (comparables -> stringList .)
    COMMA           shift and go to state 111


state 64

    (43) comparables -> boolean .
    (98) stringList -> boolean . COMMA String

    EQUAL           reduce using rule 43 (comparables -> boolean .)
    NE              reduce using rule 43 (comparables -> boolean .)
    LT              reduce using rule 43 (comparables -> boolean .)
    GT              reduce using rule 43 (comparables -> boolean .)
    LTE             reduce using rule 43 (comparables -> boolean .)
    GTE             reduce using rule 43 (comparables -> boolean .)
    AND             reduce using rule 43 (comparables -> boolean .)
    OR              reduce using rule 43 (comparables -> boolean .)
    ID              reduce using rule 43 (comparables -> boolean .)
    using           reduce using rule 43 (comparables -> boolean .)
    if              reduce using rule 43 (comparables -> boolean .)
    for             reduce using rule 43 (comparables -> boolean .)
    while           reduce using rule 43 (comparables -> boolean .)
    println         reduce using rule 43 (comparables -> boolean .)
    print           reduce using rule 43 (comparables -> boolean .)
    SHOW            reduce using rule 43 (comparables -> boolean .)
    sin             reduce using rule 43 (comparables -> boolean .)
    cos             reduce using rule 43 (comparables -> boolean .)
    exp             reduce using rule 43 (comparables -> boolean .)
    log             reduce using rule 43 (comparables -> boolean .)
    abs             reduce using rule 43 (comparables -> boolean .)
    sqrt            reduce using rule 43 (comparables -> boolean .)
    round           reduce using rule 43 (comparables -> boolean .)
    sign            reduce using rule 43 (comparables -> boolean .)
    rand            reduce using rule 43 (comparables -> boolean .)
    zeros           reduce using rule 43 (comparables -> boolean .)
    parse           reduce using rule 43 (comparables -> boolean .)
    string          reduce using rule 43 (comparables -> boolean .)
    maximum         reduce using rule 43 (comparables -> boolean .)
    minimum         reduce using rule 43 (comparables -> boolean .)
    findmax         reduce using rule 43 (comparables -> boolean .)
    findmin         reduce using rule 43 (comparables -> boolean .)
    length          reduce using rule 43 (comparables -> boolean .)
    sort            reduce using rule 43 (comparables -> boolean .)
    sortrows        reduce using rule 43 (comparables -> boolean .)
    sum             reduce using rule 43 (comparables -> boolean .)
    prod            reduce using rule 43 (comparables -> boolean .)
    cumsum          reduce using rule 43 (comparables -> boolean .)
    cumprod         reduce using rule 43 (comparables -> boolean .)
    mean            reduce using rule 43 (comparables -> boolean .)
    std             reduce using rule 43 (comparables -> boolean .)
    median          reduce using rule 43 (comparables -> boolean .)
    var             reduce using rule 43 (comparables -> boolean .)
    cov             reduce using rule 43 (comparables -> boolean .)
    mode            reduce using rule 43 (comparables -> boolean .)
    PUSH            reduce using rule 43 (comparables -> boolean .)
    APPEND          reduce using rule 43 (comparables -> boolean .)
    POP             reduce using rule 43 (comparables -> boolean .)
    SPLICE          reduce using rule 43 (comparables -> boolean .)
    COMMA           shift and go to state 112


state 65

    (44) comparables -> array .
    (100) stringList -> array . COMMA String

    EQUAL           reduce using rule 44 (comparables -> array .)
    NE              reduce using rule 44 (comparables -> array .)
    LT              reduce using rule 44 (comparables -> array .)
    GT              reduce using rule 44 (comparables -> array .)
    LTE             reduce using rule 44 (comparables -> array .)
    GTE             reduce using rule 44 (comparables -> array .)
    AND             reduce using rule 44 (comparables -> array .)
    OR              reduce using rule 44 (comparables -> array .)
    ID              reduce using rule 44 (comparables -> array .)
    using           reduce using rule 44 (comparables -> array .)
    if              reduce using rule 44 (comparables -> array .)
    for             reduce using rule 44 (comparables -> array .)
    while           reduce using rule 44 (comparables -> array .)
    println         reduce using rule 44 (comparables -> array .)
    print           reduce using rule 44 (comparables -> array .)
    SHOW            reduce using rule 44 (comparables -> array .)
    sin             reduce using rule 44 (comparables -> array .)
    cos             reduce using rule 44 (comparables -> array .)
    exp             reduce using rule 44 (comparables -> array .)
    log             reduce using rule 44 (comparables -> array .)
    abs             reduce using rule 44 (comparables -> array .)
    sqrt            reduce using rule 44 (comparables -> array .)
    round           reduce using rule 44 (comparables -> array .)
    sign            reduce using rule 44 (comparables -> array .)
    rand            reduce using rule 44 (comparables -> array .)
    zeros           reduce using rule 44 (comparables -> array .)
    parse           reduce using rule 44 (comparables -> array .)
    string          reduce using rule 44 (comparables -> array .)
    maximum         reduce using rule 44 (comparables -> array .)
    minimum         reduce using rule 44 (comparables -> array .)
    findmax         reduce using rule 44 (comparables -> array .)
    findmin         reduce using rule 44 (comparables -> array .)
    length          reduce using rule 44 (comparables -> array .)
    sort            reduce using rule 44 (comparables -> array .)
    sortrows        reduce using rule 44 (comparables -> array .)
    sum             reduce using rule 44 (comparables -> array .)
    prod            reduce using rule 44 (comparables -> array .)
    cumsum          reduce using rule 44 (comparables -> array .)
    cumprod         reduce using rule 44 (comparables -> array .)
    mean            reduce using rule 44 (comparables -> array .)
    std             reduce using rule 44 (comparables -> array .)
    median          reduce using rule 44 (comparables -> array .)
    var             reduce using rule 44 (comparables -> array .)
    cov             reduce using rule 44 (comparables -> array .)
    mode            reduce using rule 44 (comparables -> array .)
    PUSH            reduce using rule 44 (comparables -> array .)
    APPEND          reduce using rule 44 (comparables -> array .)
    POP             reduce using rule 44 (comparables -> array .)
    SPLICE          reduce using rule 44 (comparables -> array .)
    COMMA           shift and go to state 113


state 66

    (58) expression -> term .
    (64) term -> term . multiplyingOperator factor
    (77) multiplyingOperator -> . TIMES
    (78) multiplyingOperator -> . DIVIDE
    (79) multiplyingOperator -> . EXPO
    (80) multiplyingOperator -> . MOD

    COMMA           reduce using rule 58 (expression -> term .)
    PLUS            reduce using rule 58 (expression -> term .)
    MINUS           reduce using rule 58 (expression -> term .)
    EQUAL           reduce using rule 58 (expression -> term .)
    NE              reduce using rule 58 (expression -> term .)
    LT              reduce using rule 58 (expression -> term .)
    GT              reduce using rule 58 (expression -> term .)
    LTE             reduce using rule 58 (expression -> term .)
    GTE             reduce using rule 58 (expression -> term .)
    in              reduce using rule 58 (expression -> term .)
    ID              reduce using rule 58 (expression -> term .)
    using           reduce using rule 58 (expression -> term .)
    if              reduce using rule 58 (expression -> term .)
    for             reduce using rule 58 (expression -> term .)
    while           reduce using rule 58 (expression -> term .)
    println         reduce using rule 58 (expression -> term .)
    print           reduce using rule 58 (expression -> term .)
    SHOW            reduce using rule 58 (expression -> term .)
    sin             reduce using rule 58 (expression -> term .)
    cos             reduce using rule 58 (expression -> term .)
    exp             reduce using rule 58 (expression -> term .)
    log             reduce using rule 58 (expression -> term .)
    abs             reduce using rule 58 (expression -> term .)
    sqrt            reduce using rule 58 (expression -> term .)
    round           reduce using rule 58 (expression -> term .)
    sign            reduce using rule 58 (expression -> term .)
    rand            reduce using rule 58 (expression -> term .)
    zeros           reduce using rule 58 (expression -> term .)
    parse           reduce using rule 58 (expression -> term .)
    string          reduce using rule 58 (expression -> term .)
    maximum         reduce using rule 58 (expression -> term .)
    minimum         reduce using rule 58 (expression -> term .)
    findmax         reduce using rule 58 (expression -> term .)
    findmin         reduce using rule 58 (expression -> term .)
    length          reduce using rule 58 (expression -> term .)
    sort            reduce using rule 58 (expression -> term .)
    sortrows        reduce using rule 58 (expression -> term .)
    sum             reduce using rule 58 (expression -> term .)
    prod            reduce using rule 58 (expression -> term .)
    cumsum          reduce using rule 58 (expression -> term .)
    cumprod         reduce using rule 58 (expression -> term .)
    mean            reduce using rule 58 (expression -> term .)
    std             reduce using rule 58 (expression -> term .)
    median          reduce using rule 58 (expression -> term .)
    var             reduce using rule 58 (expression -> term .)
    cov             reduce using rule 58 (expression -> term .)
    mode            reduce using rule 58 (expression -> term .)
    PUSH            reduce using rule 58 (expression -> term .)
    APPEND          reduce using rule 58 (expression -> term .)
    POP             reduce using rule 58 (expression -> term .)
    SPLICE          reduce using rule 58 (expression -> term .)
    $end            reduce using rule 58 (expression -> term .)
    end             reduce using rule 58 (expression -> term .)
    else            reduce using rule 58 (expression -> term .)
    elseif          reduce using rule 58 (expression -> term .)
    RSQUARE         reduce using rule 58 (expression -> term .)
    AND             reduce using rule 58 (expression -> term .)
    OR              reduce using rule 58 (expression -> term .)
    RPARENT         reduce using rule 58 (expression -> term .)
    TWODOT          reduce using rule 58 (expression -> term .)
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    EXPO            shift and go to state 117
    MOD             shift and go to state 118

    multiplyingOperator            shift and go to state 114

state 67

    (59) expression -> addingOperator . term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    term                           shift and go to state 119
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 68

    (93) stringList -> String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    COMMA           reduce using rule 93 (stringList -> String .)
    EQUAL           reduce using rule 93 (stringList -> String .)
    NE              reduce using rule 93 (stringList -> String .)
    LT              reduce using rule 93 (stringList -> String .)
    GT              reduce using rule 93 (stringList -> String .)
    LTE             reduce using rule 93 (stringList -> String .)
    GTE             reduce using rule 93 (stringList -> String .)
    ID              reduce using rule 93 (stringList -> String .)
    using           reduce using rule 93 (stringList -> String .)
    if              reduce using rule 93 (stringList -> String .)
    for             reduce using rule 93 (stringList -> String .)
    while           reduce using rule 93 (stringList -> String .)
    println         reduce using rule 93 (stringList -> String .)
    print           reduce using rule 93 (stringList -> String .)
    SHOW            reduce using rule 93 (stringList -> String .)
    sin             reduce using rule 93 (stringList -> String .)
    cos             reduce using rule 93 (stringList -> String .)
    exp             reduce using rule 93 (stringList -> String .)
    log             reduce using rule 93 (stringList -> String .)
    abs             reduce using rule 93 (stringList -> String .)
    sqrt            reduce using rule 93 (stringList -> String .)
    round           reduce using rule 93 (stringList -> String .)
    sign            reduce using rule 93 (stringList -> String .)
    rand            reduce using rule 93 (stringList -> String .)
    zeros           reduce using rule 93 (stringList -> String .)
    parse           reduce using rule 93 (stringList -> String .)
    string          reduce using rule 93 (stringList -> String .)
    maximum         reduce using rule 93 (stringList -> String .)
    minimum         reduce using rule 93 (stringList -> String .)
    findmax         reduce using rule 93 (stringList -> String .)
    findmin         reduce using rule 93 (stringList -> String .)
    length          reduce using rule 93 (stringList -> String .)
    sort            reduce using rule 93 (stringList -> String .)
    sortrows        reduce using rule 93 (stringList -> String .)
    sum             reduce using rule 93 (stringList -> String .)
    prod            reduce using rule 93 (stringList -> String .)
    cumsum          reduce using rule 93 (stringList -> String .)
    cumprod         reduce using rule 93 (stringList -> String .)
    mean            reduce using rule 93 (stringList -> String .)
    std             reduce using rule 93 (stringList -> String .)
    median          reduce using rule 93 (stringList -> String .)
    var             reduce using rule 93 (stringList -> String .)
    cov             reduce using rule 93 (stringList -> String .)
    mode            reduce using rule 93 (stringList -> String .)
    PUSH            reduce using rule 93 (stringList -> String .)
    APPEND          reduce using rule 93 (stringList -> String .)
    POP             reduce using rule 93 (stringList -> String .)
    SPLICE          reduce using rule 93 (stringList -> String .)
    $end            reduce using rule 93 (stringList -> String .)
    end             reduce using rule 93 (stringList -> String .)
    else            reduce using rule 93 (stringList -> String .)
    elseif          reduce using rule 93 (stringList -> String .)
    AND             reduce using rule 93 (stringList -> String .)
    OR              reduce using rule 93 (stringList -> String .)
    RPARENT         reduce using rule 93 (stringList -> String .)
    TIMES           shift and go to state 120


state 69

    (104) boolean -> true .

    COMMA           reduce using rule 104 (boolean -> true .)
    EQUAL           reduce using rule 104 (boolean -> true .)
    NE              reduce using rule 104 (boolean -> true .)
    LT              reduce using rule 104 (boolean -> true .)
    GT              reduce using rule 104 (boolean -> true .)
    LTE             reduce using rule 104 (boolean -> true .)
    GTE             reduce using rule 104 (boolean -> true .)
    ID              reduce using rule 104 (boolean -> true .)
    using           reduce using rule 104 (boolean -> true .)
    if              reduce using rule 104 (boolean -> true .)
    for             reduce using rule 104 (boolean -> true .)
    while           reduce using rule 104 (boolean -> true .)
    println         reduce using rule 104 (boolean -> true .)
    print           reduce using rule 104 (boolean -> true .)
    SHOW            reduce using rule 104 (boolean -> true .)
    sin             reduce using rule 104 (boolean -> true .)
    cos             reduce using rule 104 (boolean -> true .)
    exp             reduce using rule 104 (boolean -> true .)
    log             reduce using rule 104 (boolean -> true .)
    abs             reduce using rule 104 (boolean -> true .)
    sqrt            reduce using rule 104 (boolean -> true .)
    round           reduce using rule 104 (boolean -> true .)
    sign            reduce using rule 104 (boolean -> true .)
    rand            reduce using rule 104 (boolean -> true .)
    zeros           reduce using rule 104 (boolean -> true .)
    parse           reduce using rule 104 (boolean -> true .)
    string          reduce using rule 104 (boolean -> true .)
    maximum         reduce using rule 104 (boolean -> true .)
    minimum         reduce using rule 104 (boolean -> true .)
    findmax         reduce using rule 104 (boolean -> true .)
    findmin         reduce using rule 104 (boolean -> true .)
    length          reduce using rule 104 (boolean -> true .)
    sort            reduce using rule 104 (boolean -> true .)
    sortrows        reduce using rule 104 (boolean -> true .)
    sum             reduce using rule 104 (boolean -> true .)
    prod            reduce using rule 104 (boolean -> true .)
    cumsum          reduce using rule 104 (boolean -> true .)
    cumprod         reduce using rule 104 (boolean -> true .)
    mean            reduce using rule 104 (boolean -> true .)
    std             reduce using rule 104 (boolean -> true .)
    median          reduce using rule 104 (boolean -> true .)
    var             reduce using rule 104 (boolean -> true .)
    cov             reduce using rule 104 (boolean -> true .)
    mode            reduce using rule 104 (boolean -> true .)
    PUSH            reduce using rule 104 (boolean -> true .)
    APPEND          reduce using rule 104 (boolean -> true .)
    POP             reduce using rule 104 (boolean -> true .)
    SPLICE          reduce using rule 104 (boolean -> true .)
    $end            reduce using rule 104 (boolean -> true .)
    end             reduce using rule 104 (boolean -> true .)
    else            reduce using rule 104 (boolean -> true .)
    elseif          reduce using rule 104 (boolean -> true .)
    AND             reduce using rule 104 (boolean -> true .)
    OR              reduce using rule 104 (boolean -> true .)
    RSQUARE         reduce using rule 104 (boolean -> true .)
    RPARENT         reduce using rule 104 (boolean -> true .)


state 70

    (105) boolean -> false .

    COMMA           reduce using rule 105 (boolean -> false .)
    EQUAL           reduce using rule 105 (boolean -> false .)
    NE              reduce using rule 105 (boolean -> false .)
    LT              reduce using rule 105 (boolean -> false .)
    GT              reduce using rule 105 (boolean -> false .)
    LTE             reduce using rule 105 (boolean -> false .)
    GTE             reduce using rule 105 (boolean -> false .)
    ID              reduce using rule 105 (boolean -> false .)
    using           reduce using rule 105 (boolean -> false .)
    if              reduce using rule 105 (boolean -> false .)
    for             reduce using rule 105 (boolean -> false .)
    while           reduce using rule 105 (boolean -> false .)
    println         reduce using rule 105 (boolean -> false .)
    print           reduce using rule 105 (boolean -> false .)
    SHOW            reduce using rule 105 (boolean -> false .)
    sin             reduce using rule 105 (boolean -> false .)
    cos             reduce using rule 105 (boolean -> false .)
    exp             reduce using rule 105 (boolean -> false .)
    log             reduce using rule 105 (boolean -> false .)
    abs             reduce using rule 105 (boolean -> false .)
    sqrt            reduce using rule 105 (boolean -> false .)
    round           reduce using rule 105 (boolean -> false .)
    sign            reduce using rule 105 (boolean -> false .)
    rand            reduce using rule 105 (boolean -> false .)
    zeros           reduce using rule 105 (boolean -> false .)
    parse           reduce using rule 105 (boolean -> false .)
    string          reduce using rule 105 (boolean -> false .)
    maximum         reduce using rule 105 (boolean -> false .)
    minimum         reduce using rule 105 (boolean -> false .)
    findmax         reduce using rule 105 (boolean -> false .)
    findmin         reduce using rule 105 (boolean -> false .)
    length          reduce using rule 105 (boolean -> false .)
    sort            reduce using rule 105 (boolean -> false .)
    sortrows        reduce using rule 105 (boolean -> false .)
    sum             reduce using rule 105 (boolean -> false .)
    prod            reduce using rule 105 (boolean -> false .)
    cumsum          reduce using rule 105 (boolean -> false .)
    cumprod         reduce using rule 105 (boolean -> false .)
    mean            reduce using rule 105 (boolean -> false .)
    std             reduce using rule 105 (boolean -> false .)
    median          reduce using rule 105 (boolean -> false .)
    var             reduce using rule 105 (boolean -> false .)
    cov             reduce using rule 105 (boolean -> false .)
    mode            reduce using rule 105 (boolean -> false .)
    PUSH            reduce using rule 105 (boolean -> false .)
    APPEND          reduce using rule 105 (boolean -> false .)
    POP             reduce using rule 105 (boolean -> false .)
    SPLICE          reduce using rule 105 (boolean -> false .)
    $end            reduce using rule 105 (boolean -> false .)
    end             reduce using rule 105 (boolean -> false .)
    else            reduce using rule 105 (boolean -> false .)
    elseif          reduce using rule 105 (boolean -> false .)
    AND             reduce using rule 105 (boolean -> false .)
    OR              reduce using rule 105 (boolean -> false .)
    RSQUARE         reduce using rule 105 (boolean -> false .)
    RPARENT         reduce using rule 105 (boolean -> false .)


state 71

    (106) array -> LSQUARE . arrayList RSQUARE
    (107) array -> LSQUARE . numberList SEMMICOLOM numberList RSQUARE
    (108) arrayList -> . expression
    (109) arrayList -> . String
    (110) arrayList -> . boolean
    (111) arrayList -> . LSQUARE arrayList RSQUARE
    (112) arrayList -> . arrayList COMMA expression
    (113) arrayList -> . arrayList COMMA String
    (114) arrayList -> . arrayList COMMA boolean
    (115) arrayList -> . arrayList COMMA LSQUARE arrayList RSQUARE
    (116) numberList -> . NUMBER
    (117) numberList -> . numberList NUMBER
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (104) boolean -> . true
    (105) boolean -> . false
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 121
    NUMBER          shift and go to state 127
    TEXT            shift and go to state 75
    true            shift and go to state 69
    false           shift and go to state 70
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    arrayList                      shift and go to state 122
    numberList                     shift and go to state 123
    expression                     shift and go to state 124
    String                         shift and go to state 125
    boolean                        shift and go to state 126
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 72

    (63) term -> factor .

    TIMES           reduce using rule 63 (term -> factor .)
    DIVIDE          reduce using rule 63 (term -> factor .)
    EXPO            reduce using rule 63 (term -> factor .)
    MOD             reduce using rule 63 (term -> factor .)
    COMMA           reduce using rule 63 (term -> factor .)
    PLUS            reduce using rule 63 (term -> factor .)
    MINUS           reduce using rule 63 (term -> factor .)
    EQUAL           reduce using rule 63 (term -> factor .)
    NE              reduce using rule 63 (term -> factor .)
    LT              reduce using rule 63 (term -> factor .)
    GT              reduce using rule 63 (term -> factor .)
    LTE             reduce using rule 63 (term -> factor .)
    GTE             reduce using rule 63 (term -> factor .)
    in              reduce using rule 63 (term -> factor .)
    ID              reduce using rule 63 (term -> factor .)
    using           reduce using rule 63 (term -> factor .)
    if              reduce using rule 63 (term -> factor .)
    for             reduce using rule 63 (term -> factor .)
    while           reduce using rule 63 (term -> factor .)
    println         reduce using rule 63 (term -> factor .)
    print           reduce using rule 63 (term -> factor .)
    SHOW            reduce using rule 63 (term -> factor .)
    sin             reduce using rule 63 (term -> factor .)
    cos             reduce using rule 63 (term -> factor .)
    exp             reduce using rule 63 (term -> factor .)
    log             reduce using rule 63 (term -> factor .)
    abs             reduce using rule 63 (term -> factor .)
    sqrt            reduce using rule 63 (term -> factor .)
    round           reduce using rule 63 (term -> factor .)
    sign            reduce using rule 63 (term -> factor .)
    rand            reduce using rule 63 (term -> factor .)
    zeros           reduce using rule 63 (term -> factor .)
    parse           reduce using rule 63 (term -> factor .)
    string          reduce using rule 63 (term -> factor .)
    maximum         reduce using rule 63 (term -> factor .)
    minimum         reduce using rule 63 (term -> factor .)
    findmax         reduce using rule 63 (term -> factor .)
    findmin         reduce using rule 63 (term -> factor .)
    length          reduce using rule 63 (term -> factor .)
    sort            reduce using rule 63 (term -> factor .)
    sortrows        reduce using rule 63 (term -> factor .)
    sum             reduce using rule 63 (term -> factor .)
    prod            reduce using rule 63 (term -> factor .)
    cumsum          reduce using rule 63 (term -> factor .)
    cumprod         reduce using rule 63 (term -> factor .)
    mean            reduce using rule 63 (term -> factor .)
    std             reduce using rule 63 (term -> factor .)
    median          reduce using rule 63 (term -> factor .)
    var             reduce using rule 63 (term -> factor .)
    cov             reduce using rule 63 (term -> factor .)
    mode            reduce using rule 63 (term -> factor .)
    PUSH            reduce using rule 63 (term -> factor .)
    APPEND          reduce using rule 63 (term -> factor .)
    POP             reduce using rule 63 (term -> factor .)
    SPLICE          reduce using rule 63 (term -> factor .)
    $end            reduce using rule 63 (term -> factor .)
    end             reduce using rule 63 (term -> factor .)
    else            reduce using rule 63 (term -> factor .)
    elseif          reduce using rule 63 (term -> factor .)
    RSQUARE         reduce using rule 63 (term -> factor .)
    AND             reduce using rule 63 (term -> factor .)
    OR              reduce using rule 63 (term -> factor .)
    RPARENT         reduce using rule 63 (term -> factor .)
    TWODOT          reduce using rule 63 (term -> factor .)


state 73

    (61) addingOperator -> PLUS .

    ID              reduce using rule 61 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 61 (addingOperator -> PLUS .)
    LPARENT         reduce using rule 61 (addingOperator -> PLUS .)
    FLOAT           reduce using rule 61 (addingOperator -> PLUS .)
    sin             reduce using rule 61 (addingOperator -> PLUS .)
    cos             reduce using rule 61 (addingOperator -> PLUS .)
    exp             reduce using rule 61 (addingOperator -> PLUS .)
    log             reduce using rule 61 (addingOperator -> PLUS .)
    abs             reduce using rule 61 (addingOperator -> PLUS .)
    sqrt            reduce using rule 61 (addingOperator -> PLUS .)
    round           reduce using rule 61 (addingOperator -> PLUS .)
    sign            reduce using rule 61 (addingOperator -> PLUS .)
    rand            reduce using rule 61 (addingOperator -> PLUS .)
    zeros           reduce using rule 61 (addingOperator -> PLUS .)
    parse           reduce using rule 61 (addingOperator -> PLUS .)
    string          reduce using rule 61 (addingOperator -> PLUS .)
    maximum         reduce using rule 61 (addingOperator -> PLUS .)
    minimum         reduce using rule 61 (addingOperator -> PLUS .)
    findmax         reduce using rule 61 (addingOperator -> PLUS .)
    findmin         reduce using rule 61 (addingOperator -> PLUS .)
    length          reduce using rule 61 (addingOperator -> PLUS .)
    sort            reduce using rule 61 (addingOperator -> PLUS .)
    sortrows        reduce using rule 61 (addingOperator -> PLUS .)
    sum             reduce using rule 61 (addingOperator -> PLUS .)
    prod            reduce using rule 61 (addingOperator -> PLUS .)
    cumsum          reduce using rule 61 (addingOperator -> PLUS .)
    cumprod         reduce using rule 61 (addingOperator -> PLUS .)
    mean            reduce using rule 61 (addingOperator -> PLUS .)
    std             reduce using rule 61 (addingOperator -> PLUS .)
    median          reduce using rule 61 (addingOperator -> PLUS .)
    var             reduce using rule 61 (addingOperator -> PLUS .)
    cov             reduce using rule 61 (addingOperator -> PLUS .)
    mode            reduce using rule 61 (addingOperator -> PLUS .)
    PUSH            reduce using rule 61 (addingOperator -> PLUS .)
    APPEND          reduce using rule 61 (addingOperator -> PLUS .)
    POP             reduce using rule 61 (addingOperator -> PLUS .)
    SPLICE          reduce using rule 61 (addingOperator -> PLUS .)


state 74

    (62) addingOperator -> MINUS .

    ID              reduce using rule 62 (addingOperator -> MINUS .)
    NUMBER          reduce using rule 62 (addingOperator -> MINUS .)
    LPARENT         reduce using rule 62 (addingOperator -> MINUS .)
    FLOAT           reduce using rule 62 (addingOperator -> MINUS .)
    sin             reduce using rule 62 (addingOperator -> MINUS .)
    cos             reduce using rule 62 (addingOperator -> MINUS .)
    exp             reduce using rule 62 (addingOperator -> MINUS .)
    log             reduce using rule 62 (addingOperator -> MINUS .)
    abs             reduce using rule 62 (addingOperator -> MINUS .)
    sqrt            reduce using rule 62 (addingOperator -> MINUS .)
    round           reduce using rule 62 (addingOperator -> MINUS .)
    sign            reduce using rule 62 (addingOperator -> MINUS .)
    rand            reduce using rule 62 (addingOperator -> MINUS .)
    zeros           reduce using rule 62 (addingOperator -> MINUS .)
    parse           reduce using rule 62 (addingOperator -> MINUS .)
    string          reduce using rule 62 (addingOperator -> MINUS .)
    maximum         reduce using rule 62 (addingOperator -> MINUS .)
    minimum         reduce using rule 62 (addingOperator -> MINUS .)
    findmax         reduce using rule 62 (addingOperator -> MINUS .)
    findmin         reduce using rule 62 (addingOperator -> MINUS .)
    length          reduce using rule 62 (addingOperator -> MINUS .)
    sort            reduce using rule 62 (addingOperator -> MINUS .)
    sortrows        reduce using rule 62 (addingOperator -> MINUS .)
    sum             reduce using rule 62 (addingOperator -> MINUS .)
    prod            reduce using rule 62 (addingOperator -> MINUS .)
    cumsum          reduce using rule 62 (addingOperator -> MINUS .)
    cumprod         reduce using rule 62 (addingOperator -> MINUS .)
    mean            reduce using rule 62 (addingOperator -> MINUS .)
    std             reduce using rule 62 (addingOperator -> MINUS .)
    median          reduce using rule 62 (addingOperator -> MINUS .)
    var             reduce using rule 62 (addingOperator -> MINUS .)
    cov             reduce using rule 62 (addingOperator -> MINUS .)
    mode            reduce using rule 62 (addingOperator -> MINUS .)
    PUSH            reduce using rule 62 (addingOperator -> MINUS .)
    APPEND          reduce using rule 62 (addingOperator -> MINUS .)
    POP             reduce using rule 62 (addingOperator -> MINUS .)
    SPLICE          reduce using rule 62 (addingOperator -> MINUS .)


state 75

    (101) String -> TEXT .

    TIMES           reduce using rule 101 (String -> TEXT .)
    COMMA           reduce using rule 101 (String -> TEXT .)
    EQUAL           reduce using rule 101 (String -> TEXT .)
    NE              reduce using rule 101 (String -> TEXT .)
    LT              reduce using rule 101 (String -> TEXT .)
    GT              reduce using rule 101 (String -> TEXT .)
    LTE             reduce using rule 101 (String -> TEXT .)
    GTE             reduce using rule 101 (String -> TEXT .)
    ID              reduce using rule 101 (String -> TEXT .)
    using           reduce using rule 101 (String -> TEXT .)
    if              reduce using rule 101 (String -> TEXT .)
    for             reduce using rule 101 (String -> TEXT .)
    while           reduce using rule 101 (String -> TEXT .)
    println         reduce using rule 101 (String -> TEXT .)
    print           reduce using rule 101 (String -> TEXT .)
    SHOW            reduce using rule 101 (String -> TEXT .)
    sin             reduce using rule 101 (String -> TEXT .)
    cos             reduce using rule 101 (String -> TEXT .)
    exp             reduce using rule 101 (String -> TEXT .)
    log             reduce using rule 101 (String -> TEXT .)
    abs             reduce using rule 101 (String -> TEXT .)
    sqrt            reduce using rule 101 (String -> TEXT .)
    round           reduce using rule 101 (String -> TEXT .)
    sign            reduce using rule 101 (String -> TEXT .)
    rand            reduce using rule 101 (String -> TEXT .)
    zeros           reduce using rule 101 (String -> TEXT .)
    parse           reduce using rule 101 (String -> TEXT .)
    string          reduce using rule 101 (String -> TEXT .)
    maximum         reduce using rule 101 (String -> TEXT .)
    minimum         reduce using rule 101 (String -> TEXT .)
    findmax         reduce using rule 101 (String -> TEXT .)
    findmin         reduce using rule 101 (String -> TEXT .)
    length          reduce using rule 101 (String -> TEXT .)
    sort            reduce using rule 101 (String -> TEXT .)
    sortrows        reduce using rule 101 (String -> TEXT .)
    sum             reduce using rule 101 (String -> TEXT .)
    prod            reduce using rule 101 (String -> TEXT .)
    cumsum          reduce using rule 101 (String -> TEXT .)
    cumprod         reduce using rule 101 (String -> TEXT .)
    mean            reduce using rule 101 (String -> TEXT .)
    std             reduce using rule 101 (String -> TEXT .)
    median          reduce using rule 101 (String -> TEXT .)
    var             reduce using rule 101 (String -> TEXT .)
    cov             reduce using rule 101 (String -> TEXT .)
    mode            reduce using rule 101 (String -> TEXT .)
    PUSH            reduce using rule 101 (String -> TEXT .)
    APPEND          reduce using rule 101 (String -> TEXT .)
    POP             reduce using rule 101 (String -> TEXT .)
    SPLICE          reduce using rule 101 (String -> TEXT .)
    $end            reduce using rule 101 (String -> TEXT .)
    end             reduce using rule 101 (String -> TEXT .)
    else            reduce using rule 101 (String -> TEXT .)
    elseif          reduce using rule 101 (String -> TEXT .)
    AND             reduce using rule 101 (String -> TEXT .)
    OR              reduce using rule 101 (String -> TEXT .)
    RSQUARE         reduce using rule 101 (String -> TEXT .)
    RPARENT         reduce using rule 101 (String -> TEXT .)


state 76

    (81) factor -> ID .
    (85) factor -> ID . LSQUARE expression RSQUARE

    TIMES           reduce using rule 81 (factor -> ID .)
    DIVIDE          reduce using rule 81 (factor -> ID .)
    EXPO            reduce using rule 81 (factor -> ID .)
    MOD             reduce using rule 81 (factor -> ID .)
    COMMA           reduce using rule 81 (factor -> ID .)
    PLUS            reduce using rule 81 (factor -> ID .)
    MINUS           reduce using rule 81 (factor -> ID .)
    EQUAL           reduce using rule 81 (factor -> ID .)
    NE              reduce using rule 81 (factor -> ID .)
    LT              reduce using rule 81 (factor -> ID .)
    GT              reduce using rule 81 (factor -> ID .)
    LTE             reduce using rule 81 (factor -> ID .)
    GTE             reduce using rule 81 (factor -> ID .)
    ID              reduce using rule 81 (factor -> ID .)
    using           reduce using rule 81 (factor -> ID .)
    if              reduce using rule 81 (factor -> ID .)
    for             reduce using rule 81 (factor -> ID .)
    while           reduce using rule 81 (factor -> ID .)
    println         reduce using rule 81 (factor -> ID .)
    print           reduce using rule 81 (factor -> ID .)
    SHOW            reduce using rule 81 (factor -> ID .)
    sin             reduce using rule 81 (factor -> ID .)
    cos             reduce using rule 81 (factor -> ID .)
    exp             reduce using rule 81 (factor -> ID .)
    log             reduce using rule 81 (factor -> ID .)
    abs             reduce using rule 81 (factor -> ID .)
    sqrt            reduce using rule 81 (factor -> ID .)
    round           reduce using rule 81 (factor -> ID .)
    sign            reduce using rule 81 (factor -> ID .)
    rand            reduce using rule 81 (factor -> ID .)
    zeros           reduce using rule 81 (factor -> ID .)
    parse           reduce using rule 81 (factor -> ID .)
    string          reduce using rule 81 (factor -> ID .)
    maximum         reduce using rule 81 (factor -> ID .)
    minimum         reduce using rule 81 (factor -> ID .)
    findmax         reduce using rule 81 (factor -> ID .)
    findmin         reduce using rule 81 (factor -> ID .)
    length          reduce using rule 81 (factor -> ID .)
    sort            reduce using rule 81 (factor -> ID .)
    sortrows        reduce using rule 81 (factor -> ID .)
    sum             reduce using rule 81 (factor -> ID .)
    prod            reduce using rule 81 (factor -> ID .)
    cumsum          reduce using rule 81 (factor -> ID .)
    cumprod         reduce using rule 81 (factor -> ID .)
    mean            reduce using rule 81 (factor -> ID .)
    std             reduce using rule 81 (factor -> ID .)
    median          reduce using rule 81 (factor -> ID .)
    var             reduce using rule 81 (factor -> ID .)
    cov             reduce using rule 81 (factor -> ID .)
    mode            reduce using rule 81 (factor -> ID .)
    PUSH            reduce using rule 81 (factor -> ID .)
    APPEND          reduce using rule 81 (factor -> ID .)
    POP             reduce using rule 81 (factor -> ID .)
    SPLICE          reduce using rule 81 (factor -> ID .)
    $end            reduce using rule 81 (factor -> ID .)
    end             reduce using rule 81 (factor -> ID .)
    else            reduce using rule 81 (factor -> ID .)
    elseif          reduce using rule 81 (factor -> ID .)
    RSQUARE         reduce using rule 81 (factor -> ID .)
    AND             reduce using rule 81 (factor -> ID .)
    OR              reduce using rule 81 (factor -> ID .)
    in              reduce using rule 81 (factor -> ID .)
    RPARENT         reduce using rule 81 (factor -> ID .)
    TWODOT          reduce using rule 81 (factor -> ID .)
    LSQUARE         shift and go to state 128


state 77

    (82) factor -> NUMBER .

    TIMES           reduce using rule 82 (factor -> NUMBER .)
    DIVIDE          reduce using rule 82 (factor -> NUMBER .)
    EXPO            reduce using rule 82 (factor -> NUMBER .)
    MOD             reduce using rule 82 (factor -> NUMBER .)
    COMMA           reduce using rule 82 (factor -> NUMBER .)
    PLUS            reduce using rule 82 (factor -> NUMBER .)
    MINUS           reduce using rule 82 (factor -> NUMBER .)
    EQUAL           reduce using rule 82 (factor -> NUMBER .)
    NE              reduce using rule 82 (factor -> NUMBER .)
    LT              reduce using rule 82 (factor -> NUMBER .)
    GT              reduce using rule 82 (factor -> NUMBER .)
    LTE             reduce using rule 82 (factor -> NUMBER .)
    GTE             reduce using rule 82 (factor -> NUMBER .)
    in              reduce using rule 82 (factor -> NUMBER .)
    ID              reduce using rule 82 (factor -> NUMBER .)
    using           reduce using rule 82 (factor -> NUMBER .)
    if              reduce using rule 82 (factor -> NUMBER .)
    for             reduce using rule 82 (factor -> NUMBER .)
    while           reduce using rule 82 (factor -> NUMBER .)
    println         reduce using rule 82 (factor -> NUMBER .)
    print           reduce using rule 82 (factor -> NUMBER .)
    SHOW            reduce using rule 82 (factor -> NUMBER .)
    sin             reduce using rule 82 (factor -> NUMBER .)
    cos             reduce using rule 82 (factor -> NUMBER .)
    exp             reduce using rule 82 (factor -> NUMBER .)
    log             reduce using rule 82 (factor -> NUMBER .)
    abs             reduce using rule 82 (factor -> NUMBER .)
    sqrt            reduce using rule 82 (factor -> NUMBER .)
    round           reduce using rule 82 (factor -> NUMBER .)
    sign            reduce using rule 82 (factor -> NUMBER .)
    rand            reduce using rule 82 (factor -> NUMBER .)
    zeros           reduce using rule 82 (factor -> NUMBER .)
    parse           reduce using rule 82 (factor -> NUMBER .)
    string          reduce using rule 82 (factor -> NUMBER .)
    maximum         reduce using rule 82 (factor -> NUMBER .)
    minimum         reduce using rule 82 (factor -> NUMBER .)
    findmax         reduce using rule 82 (factor -> NUMBER .)
    findmin         reduce using rule 82 (factor -> NUMBER .)
    length          reduce using rule 82 (factor -> NUMBER .)
    sort            reduce using rule 82 (factor -> NUMBER .)
    sortrows        reduce using rule 82 (factor -> NUMBER .)
    sum             reduce using rule 82 (factor -> NUMBER .)
    prod            reduce using rule 82 (factor -> NUMBER .)
    cumsum          reduce using rule 82 (factor -> NUMBER .)
    cumprod         reduce using rule 82 (factor -> NUMBER .)
    mean            reduce using rule 82 (factor -> NUMBER .)
    std             reduce using rule 82 (factor -> NUMBER .)
    median          reduce using rule 82 (factor -> NUMBER .)
    var             reduce using rule 82 (factor -> NUMBER .)
    cov             reduce using rule 82 (factor -> NUMBER .)
    mode            reduce using rule 82 (factor -> NUMBER .)
    PUSH            reduce using rule 82 (factor -> NUMBER .)
    APPEND          reduce using rule 82 (factor -> NUMBER .)
    POP             reduce using rule 82 (factor -> NUMBER .)
    SPLICE          reduce using rule 82 (factor -> NUMBER .)
    $end            reduce using rule 82 (factor -> NUMBER .)
    end             reduce using rule 82 (factor -> NUMBER .)
    else            reduce using rule 82 (factor -> NUMBER .)
    elseif          reduce using rule 82 (factor -> NUMBER .)
    RSQUARE         reduce using rule 82 (factor -> NUMBER .)
    AND             reduce using rule 82 (factor -> NUMBER .)
    OR              reduce using rule 82 (factor -> NUMBER .)
    RPARENT         reduce using rule 82 (factor -> NUMBER .)
    TWODOT          reduce using rule 82 (factor -> NUMBER .)


state 78

    (83) factor -> LPARENT . optionList RPARENT
    (88) optionList -> . expression
    (89) optionList -> . expression COMMA expression
    (90) optionList -> . array
    (91) optionList -> . expression COMMA expression TWODOT expression
    (92) optionList -> . empty
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (139) empty -> .
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 71
    RPARENT         reduce using rule 139 (empty -> .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    optionList                     shift and go to state 129
    expression                     shift and go to state 130
    array                          shift and go to state 131
    empty                          shift and go to state 132
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 79

    (84) factor -> FLOAT .

    TIMES           reduce using rule 84 (factor -> FLOAT .)
    DIVIDE          reduce using rule 84 (factor -> FLOAT .)
    EXPO            reduce using rule 84 (factor -> FLOAT .)
    MOD             reduce using rule 84 (factor -> FLOAT .)
    COMMA           reduce using rule 84 (factor -> FLOAT .)
    PLUS            reduce using rule 84 (factor -> FLOAT .)
    MINUS           reduce using rule 84 (factor -> FLOAT .)
    EQUAL           reduce using rule 84 (factor -> FLOAT .)
    NE              reduce using rule 84 (factor -> FLOAT .)
    LT              reduce using rule 84 (factor -> FLOAT .)
    GT              reduce using rule 84 (factor -> FLOAT .)
    LTE             reduce using rule 84 (factor -> FLOAT .)
    GTE             reduce using rule 84 (factor -> FLOAT .)
    in              reduce using rule 84 (factor -> FLOAT .)
    ID              reduce using rule 84 (factor -> FLOAT .)
    using           reduce using rule 84 (factor -> FLOAT .)
    if              reduce using rule 84 (factor -> FLOAT .)
    for             reduce using rule 84 (factor -> FLOAT .)
    while           reduce using rule 84 (factor -> FLOAT .)
    println         reduce using rule 84 (factor -> FLOAT .)
    print           reduce using rule 84 (factor -> FLOAT .)
    SHOW            reduce using rule 84 (factor -> FLOAT .)
    sin             reduce using rule 84 (factor -> FLOAT .)
    cos             reduce using rule 84 (factor -> FLOAT .)
    exp             reduce using rule 84 (factor -> FLOAT .)
    log             reduce using rule 84 (factor -> FLOAT .)
    abs             reduce using rule 84 (factor -> FLOAT .)
    sqrt            reduce using rule 84 (factor -> FLOAT .)
    round           reduce using rule 84 (factor -> FLOAT .)
    sign            reduce using rule 84 (factor -> FLOAT .)
    rand            reduce using rule 84 (factor -> FLOAT .)
    zeros           reduce using rule 84 (factor -> FLOAT .)
    parse           reduce using rule 84 (factor -> FLOAT .)
    string          reduce using rule 84 (factor -> FLOAT .)
    maximum         reduce using rule 84 (factor -> FLOAT .)
    minimum         reduce using rule 84 (factor -> FLOAT .)
    findmax         reduce using rule 84 (factor -> FLOAT .)
    findmin         reduce using rule 84 (factor -> FLOAT .)
    length          reduce using rule 84 (factor -> FLOAT .)
    sort            reduce using rule 84 (factor -> FLOAT .)
    sortrows        reduce using rule 84 (factor -> FLOAT .)
    sum             reduce using rule 84 (factor -> FLOAT .)
    prod            reduce using rule 84 (factor -> FLOAT .)
    cumsum          reduce using rule 84 (factor -> FLOAT .)
    cumprod         reduce using rule 84 (factor -> FLOAT .)
    mean            reduce using rule 84 (factor -> FLOAT .)
    std             reduce using rule 84 (factor -> FLOAT .)
    median          reduce using rule 84 (factor -> FLOAT .)
    var             reduce using rule 84 (factor -> FLOAT .)
    cov             reduce using rule 84 (factor -> FLOAT .)
    mode            reduce using rule 84 (factor -> FLOAT .)
    PUSH            reduce using rule 84 (factor -> FLOAT .)
    APPEND          reduce using rule 84 (factor -> FLOAT .)
    POP             reduce using rule 84 (factor -> FLOAT .)
    SPLICE          reduce using rule 84 (factor -> FLOAT .)
    $end            reduce using rule 84 (factor -> FLOAT .)
    end             reduce using rule 84 (factor -> FLOAT .)
    else            reduce using rule 84 (factor -> FLOAT .)
    elseif          reduce using rule 84 (factor -> FLOAT .)
    RSQUARE         reduce using rule 84 (factor -> FLOAT .)
    AND             reduce using rule 84 (factor -> FLOAT .)
    OR              reduce using rule 84 (factor -> FLOAT .)
    RPARENT         reduce using rule 84 (factor -> FLOAT .)
    TWODOT          reduce using rule 84 (factor -> FLOAT .)


state 80

    (86) factor -> funcList . LPARENT optionList RPARENT

    LPARENT         shift and go to state 133


state 81

    (87) factor -> funcVecList . LPARENT optionList RPARENT

    LPARENT         shift and go to state 134


state 82

    (13) statement -> for iterable . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 135
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 83

    (33) iterable -> ID . ASSIGN expression TWODOT expression
    (81) factor -> ID .
    (85) factor -> ID . LSQUARE expression RSQUARE

    ASSIGN          shift and go to state 136
    TIMES           reduce using rule 81 (factor -> ID .)
    DIVIDE          reduce using rule 81 (factor -> ID .)
    EXPO            reduce using rule 81 (factor -> ID .)
    MOD             reduce using rule 81 (factor -> ID .)
    in              reduce using rule 81 (factor -> ID .)
    PLUS            reduce using rule 81 (factor -> ID .)
    MINUS           reduce using rule 81 (factor -> ID .)
    LSQUARE         shift and go to state 128


state 84

    (34) iterable -> expression . in expression
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    in              shift and go to state 137
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 85

    (14) statement -> while conditionList . statementList end
    (38) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (51) logicRelation -> . AND
    (52) logicRelation -> . OR
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    AND             shift and go to state 99
    OR              shift and go to state 100
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 138
    logicRelation                  shift and go to state 98
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 86

    (15) statement -> printList LPARENT . stringList RPARENT
    (16) statement -> printList LPARENT . expression RPARENT
    (17) statement -> printList LPARENT . boolean RPARENT
    (26) statement -> printList LPARENT . array RPARENT
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    TEXT            shift and go to state 75
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    stringList                     shift and go to state 139
    expression                     shift and go to state 140
    boolean                        shift and go to state 141
    array                          shift and go to state 142
    String                         shift and go to state 68
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 87

    (27) statement -> funcList LPARENT . optionList RPARENT
    (88) optionList -> . expression
    (89) optionList -> . expression COMMA expression
    (90) optionList -> . array
    (91) optionList -> . expression COMMA expression TWODOT expression
    (92) optionList -> . empty
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (139) empty -> .
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 71
    RPARENT         reduce using rule 139 (empty -> .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    funcList                       shift and go to state 80
    optionList                     shift and go to state 143
    expression                     shift and go to state 130
    array                          shift and go to state 131
    empty                          shift and go to state 132
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcVecList                    shift and go to state 81

state 88

    (28) statement -> funcVecList LPARENT . optionList RPARENT
    (88) optionList -> . expression
    (89) optionList -> . expression COMMA expression
    (90) optionList -> . array
    (91) optionList -> . expression COMMA expression TWODOT expression
    (92) optionList -> . empty
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (139) empty -> .
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 71
    RPARENT         reduce using rule 139 (empty -> .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    funcVecList                    shift and go to state 81
    optionList                     shift and go to state 144
    expression                     shift and go to state 130
    array                          shift and go to state 131
    empty                          shift and go to state 132
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80

state 89

    (5) statement -> ID ASSIGN expression .
    (60) expression -> expression . addingOperator term
    (99) stringList -> expression . COMMA String
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    ID              reduce using rule 5 (statement -> ID ASSIGN expression .)
    using           reduce using rule 5 (statement -> ID ASSIGN expression .)
    if              reduce using rule 5 (statement -> ID ASSIGN expression .)
    for             reduce using rule 5 (statement -> ID ASSIGN expression .)
    while           reduce using rule 5 (statement -> ID ASSIGN expression .)
    println         reduce using rule 5 (statement -> ID ASSIGN expression .)
    print           reduce using rule 5 (statement -> ID ASSIGN expression .)
    SHOW            reduce using rule 5 (statement -> ID ASSIGN expression .)
    sin             reduce using rule 5 (statement -> ID ASSIGN expression .)
    cos             reduce using rule 5 (statement -> ID ASSIGN expression .)
    exp             reduce using rule 5 (statement -> ID ASSIGN expression .)
    log             reduce using rule 5 (statement -> ID ASSIGN expression .)
    abs             reduce using rule 5 (statement -> ID ASSIGN expression .)
    sqrt            reduce using rule 5 (statement -> ID ASSIGN expression .)
    round           reduce using rule 5 (statement -> ID ASSIGN expression .)
    sign            reduce using rule 5 (statement -> ID ASSIGN expression .)
    rand            reduce using rule 5 (statement -> ID ASSIGN expression .)
    zeros           reduce using rule 5 (statement -> ID ASSIGN expression .)
    parse           reduce using rule 5 (statement -> ID ASSIGN expression .)
    string          reduce using rule 5 (statement -> ID ASSIGN expression .)
    maximum         reduce using rule 5 (statement -> ID ASSIGN expression .)
    minimum         reduce using rule 5 (statement -> ID ASSIGN expression .)
    findmax         reduce using rule 5 (statement -> ID ASSIGN expression .)
    findmin         reduce using rule 5 (statement -> ID ASSIGN expression .)
    length          reduce using rule 5 (statement -> ID ASSIGN expression .)
    sort            reduce using rule 5 (statement -> ID ASSIGN expression .)
    sortrows        reduce using rule 5 (statement -> ID ASSIGN expression .)
    sum             reduce using rule 5 (statement -> ID ASSIGN expression .)
    prod            reduce using rule 5 (statement -> ID ASSIGN expression .)
    cumsum          reduce using rule 5 (statement -> ID ASSIGN expression .)
    cumprod         reduce using rule 5 (statement -> ID ASSIGN expression .)
    mean            reduce using rule 5 (statement -> ID ASSIGN expression .)
    std             reduce using rule 5 (statement -> ID ASSIGN expression .)
    median          reduce using rule 5 (statement -> ID ASSIGN expression .)
    var             reduce using rule 5 (statement -> ID ASSIGN expression .)
    cov             reduce using rule 5 (statement -> ID ASSIGN expression .)
    mode            reduce using rule 5 (statement -> ID ASSIGN expression .)
    PUSH            reduce using rule 5 (statement -> ID ASSIGN expression .)
    APPEND          reduce using rule 5 (statement -> ID ASSIGN expression .)
    POP             reduce using rule 5 (statement -> ID ASSIGN expression .)
    SPLICE          reduce using rule 5 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 5 (statement -> ID ASSIGN expression .)
    end             reduce using rule 5 (statement -> ID ASSIGN expression .)
    else            reduce using rule 5 (statement -> ID ASSIGN expression .)
    elseif          reduce using rule 5 (statement -> ID ASSIGN expression .)
    COMMA           shift and go to state 110
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 90

    (7) statement -> ID ASSIGN stringList .
    (94) stringList -> stringList . COMMA expression
    (95) stringList -> stringList . COMMA String
    (96) stringList -> stringList . COMMA boolean
    (97) stringList -> stringList . COMMA array

    ID              reduce using rule 7 (statement -> ID ASSIGN stringList .)
    using           reduce using rule 7 (statement -> ID ASSIGN stringList .)
    if              reduce using rule 7 (statement -> ID ASSIGN stringList .)
    for             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    while           reduce using rule 7 (statement -> ID ASSIGN stringList .)
    println         reduce using rule 7 (statement -> ID ASSIGN stringList .)
    print           reduce using rule 7 (statement -> ID ASSIGN stringList .)
    SHOW            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    sin             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    cos             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    exp             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    log             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    abs             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    sqrt            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    round           reduce using rule 7 (statement -> ID ASSIGN stringList .)
    sign            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    rand            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    zeros           reduce using rule 7 (statement -> ID ASSIGN stringList .)
    parse           reduce using rule 7 (statement -> ID ASSIGN stringList .)
    string          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    maximum         reduce using rule 7 (statement -> ID ASSIGN stringList .)
    minimum         reduce using rule 7 (statement -> ID ASSIGN stringList .)
    findmax         reduce using rule 7 (statement -> ID ASSIGN stringList .)
    findmin         reduce using rule 7 (statement -> ID ASSIGN stringList .)
    length          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    sort            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    sortrows        reduce using rule 7 (statement -> ID ASSIGN stringList .)
    sum             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    prod            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    cumsum          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    cumprod         reduce using rule 7 (statement -> ID ASSIGN stringList .)
    mean            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    std             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    median          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    var             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    cov             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    mode            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    PUSH            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    APPEND          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    POP             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    SPLICE          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    $end            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    end             reduce using rule 7 (statement -> ID ASSIGN stringList .)
    else            reduce using rule 7 (statement -> ID ASSIGN stringList .)
    elseif          reduce using rule 7 (statement -> ID ASSIGN stringList .)
    COMMA           shift and go to state 111


state 91

    (8) statement -> ID ASSIGN boolean .
    (98) stringList -> boolean . COMMA String

    ID              reduce using rule 8 (statement -> ID ASSIGN boolean .)
    using           reduce using rule 8 (statement -> ID ASSIGN boolean .)
    if              reduce using rule 8 (statement -> ID ASSIGN boolean .)
    for             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    while           reduce using rule 8 (statement -> ID ASSIGN boolean .)
    println         reduce using rule 8 (statement -> ID ASSIGN boolean .)
    print           reduce using rule 8 (statement -> ID ASSIGN boolean .)
    SHOW            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    sin             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    cos             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    exp             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    log             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    abs             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    sqrt            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    round           reduce using rule 8 (statement -> ID ASSIGN boolean .)
    sign            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    rand            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    zeros           reduce using rule 8 (statement -> ID ASSIGN boolean .)
    parse           reduce using rule 8 (statement -> ID ASSIGN boolean .)
    string          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    maximum         reduce using rule 8 (statement -> ID ASSIGN boolean .)
    minimum         reduce using rule 8 (statement -> ID ASSIGN boolean .)
    findmax         reduce using rule 8 (statement -> ID ASSIGN boolean .)
    findmin         reduce using rule 8 (statement -> ID ASSIGN boolean .)
    length          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    sort            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    sortrows        reduce using rule 8 (statement -> ID ASSIGN boolean .)
    sum             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    prod            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    cumsum          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    cumprod         reduce using rule 8 (statement -> ID ASSIGN boolean .)
    mean            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    std             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    median          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    var             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    cov             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    mode            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    PUSH            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    APPEND          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    POP             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    SPLICE          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    $end            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    end             reduce using rule 8 (statement -> ID ASSIGN boolean .)
    else            reduce using rule 8 (statement -> ID ASSIGN boolean .)
    elseif          reduce using rule 8 (statement -> ID ASSIGN boolean .)
    COMMA           shift and go to state 112


state 92

    (9) statement -> ID ASSIGN array .
    (100) stringList -> array . COMMA String

    ID              reduce using rule 9 (statement -> ID ASSIGN array .)
    using           reduce using rule 9 (statement -> ID ASSIGN array .)
    if              reduce using rule 9 (statement -> ID ASSIGN array .)
    for             reduce using rule 9 (statement -> ID ASSIGN array .)
    while           reduce using rule 9 (statement -> ID ASSIGN array .)
    println         reduce using rule 9 (statement -> ID ASSIGN array .)
    print           reduce using rule 9 (statement -> ID ASSIGN array .)
    SHOW            reduce using rule 9 (statement -> ID ASSIGN array .)
    sin             reduce using rule 9 (statement -> ID ASSIGN array .)
    cos             reduce using rule 9 (statement -> ID ASSIGN array .)
    exp             reduce using rule 9 (statement -> ID ASSIGN array .)
    log             reduce using rule 9 (statement -> ID ASSIGN array .)
    abs             reduce using rule 9 (statement -> ID ASSIGN array .)
    sqrt            reduce using rule 9 (statement -> ID ASSIGN array .)
    round           reduce using rule 9 (statement -> ID ASSIGN array .)
    sign            reduce using rule 9 (statement -> ID ASSIGN array .)
    rand            reduce using rule 9 (statement -> ID ASSIGN array .)
    zeros           reduce using rule 9 (statement -> ID ASSIGN array .)
    parse           reduce using rule 9 (statement -> ID ASSIGN array .)
    string          reduce using rule 9 (statement -> ID ASSIGN array .)
    maximum         reduce using rule 9 (statement -> ID ASSIGN array .)
    minimum         reduce using rule 9 (statement -> ID ASSIGN array .)
    findmax         reduce using rule 9 (statement -> ID ASSIGN array .)
    findmin         reduce using rule 9 (statement -> ID ASSIGN array .)
    length          reduce using rule 9 (statement -> ID ASSIGN array .)
    sort            reduce using rule 9 (statement -> ID ASSIGN array .)
    sortrows        reduce using rule 9 (statement -> ID ASSIGN array .)
    sum             reduce using rule 9 (statement -> ID ASSIGN array .)
    prod            reduce using rule 9 (statement -> ID ASSIGN array .)
    cumsum          reduce using rule 9 (statement -> ID ASSIGN array .)
    cumprod         reduce using rule 9 (statement -> ID ASSIGN array .)
    mean            reduce using rule 9 (statement -> ID ASSIGN array .)
    std             reduce using rule 9 (statement -> ID ASSIGN array .)
    median          reduce using rule 9 (statement -> ID ASSIGN array .)
    var             reduce using rule 9 (statement -> ID ASSIGN array .)
    cov             reduce using rule 9 (statement -> ID ASSIGN array .)
    mode            reduce using rule 9 (statement -> ID ASSIGN array .)
    PUSH            reduce using rule 9 (statement -> ID ASSIGN array .)
    APPEND          reduce using rule 9 (statement -> ID ASSIGN array .)
    POP             reduce using rule 9 (statement -> ID ASSIGN array .)
    SPLICE          reduce using rule 9 (statement -> ID ASSIGN array .)
    $end            reduce using rule 9 (statement -> ID ASSIGN array .)
    end             reduce using rule 9 (statement -> ID ASSIGN array .)
    else            reduce using rule 9 (statement -> ID ASSIGN array .)
    elseif          reduce using rule 9 (statement -> ID ASSIGN array .)
    COMMA           shift and go to state 113


state 93

    (18) statement -> ID ASSIGN readline . LPARENT RPARENT

    LPARENT         shift and go to state 145


state 94

    (19) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN expression
    (20) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN stringList
    (21) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN boolean
    (22) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN array
    (25) statement -> ID LSQUARE arrayIdList . RSQUARE assigList expression

    RSQUARE         shift and go to state 146


state 95

    (29) arrayIdList -> expression . COMMA expression
    (30) arrayIdList -> expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    COMMA           shift and go to state 147
    RSQUARE         reduce using rule 30 (arrayIdList -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 96

    (24) statement -> ID assigList expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    ID              reduce using rule 24 (statement -> ID assigList expression .)
    using           reduce using rule 24 (statement -> ID assigList expression .)
    if              reduce using rule 24 (statement -> ID assigList expression .)
    for             reduce using rule 24 (statement -> ID assigList expression .)
    while           reduce using rule 24 (statement -> ID assigList expression .)
    println         reduce using rule 24 (statement -> ID assigList expression .)
    print           reduce using rule 24 (statement -> ID assigList expression .)
    SHOW            reduce using rule 24 (statement -> ID assigList expression .)
    sin             reduce using rule 24 (statement -> ID assigList expression .)
    cos             reduce using rule 24 (statement -> ID assigList expression .)
    exp             reduce using rule 24 (statement -> ID assigList expression .)
    log             reduce using rule 24 (statement -> ID assigList expression .)
    abs             reduce using rule 24 (statement -> ID assigList expression .)
    sqrt            reduce using rule 24 (statement -> ID assigList expression .)
    round           reduce using rule 24 (statement -> ID assigList expression .)
    sign            reduce using rule 24 (statement -> ID assigList expression .)
    rand            reduce using rule 24 (statement -> ID assigList expression .)
    zeros           reduce using rule 24 (statement -> ID assigList expression .)
    parse           reduce using rule 24 (statement -> ID assigList expression .)
    string          reduce using rule 24 (statement -> ID assigList expression .)
    maximum         reduce using rule 24 (statement -> ID assigList expression .)
    minimum         reduce using rule 24 (statement -> ID assigList expression .)
    findmax         reduce using rule 24 (statement -> ID assigList expression .)
    findmin         reduce using rule 24 (statement -> ID assigList expression .)
    length          reduce using rule 24 (statement -> ID assigList expression .)
    sort            reduce using rule 24 (statement -> ID assigList expression .)
    sortrows        reduce using rule 24 (statement -> ID assigList expression .)
    sum             reduce using rule 24 (statement -> ID assigList expression .)
    prod            reduce using rule 24 (statement -> ID assigList expression .)
    cumsum          reduce using rule 24 (statement -> ID assigList expression .)
    cumprod         reduce using rule 24 (statement -> ID assigList expression .)
    mean            reduce using rule 24 (statement -> ID assigList expression .)
    std             reduce using rule 24 (statement -> ID assigList expression .)
    median          reduce using rule 24 (statement -> ID assigList expression .)
    var             reduce using rule 24 (statement -> ID assigList expression .)
    cov             reduce using rule 24 (statement -> ID assigList expression .)
    mode            reduce using rule 24 (statement -> ID assigList expression .)
    PUSH            reduce using rule 24 (statement -> ID assigList expression .)
    APPEND          reduce using rule 24 (statement -> ID assigList expression .)
    POP             reduce using rule 24 (statement -> ID assigList expression .)
    SPLICE          reduce using rule 24 (statement -> ID assigList expression .)
    $end            reduce using rule 24 (statement -> ID assigList expression .)
    end             reduce using rule 24 (statement -> ID assigList expression .)
    else            reduce using rule 24 (statement -> ID assigList expression .)
    elseif          reduce using rule 24 (statement -> ID assigList expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 97

    (10) statement -> if conditionList statementList . end
    (11) statement -> if conditionList statementList . else statementList end
    (12) statement -> if conditionList statementList . elseifList else statementList end
    (4) statementList -> statementList . statement
    (35) elseifList -> . elseif conditionList statementList
    (36) elseifList -> . elseifList elseif conditionList statementList
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    end             shift and go to state 148
    else            shift and go to state 149
    elseif          shift and go to state 151
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    elseifList                     shift and go to state 150
    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 98

    (38) conditionList -> conditionList logicRelation . condition
    (39) condition -> . comparables relation comparables
    (40) condition -> . NOT comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    NOT             shift and go to state 61
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    condition                      shift and go to state 152
    comparables                    shift and go to state 60
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 99

    (51) logicRelation -> AND .

    NOT             reduce using rule 51 (logicRelation -> AND .)
    true            reduce using rule 51 (logicRelation -> AND .)
    false           reduce using rule 51 (logicRelation -> AND .)
    LSQUARE         reduce using rule 51 (logicRelation -> AND .)
    PLUS            reduce using rule 51 (logicRelation -> AND .)
    MINUS           reduce using rule 51 (logicRelation -> AND .)
    TEXT            reduce using rule 51 (logicRelation -> AND .)
    ID              reduce using rule 51 (logicRelation -> AND .)
    NUMBER          reduce using rule 51 (logicRelation -> AND .)
    LPARENT         reduce using rule 51 (logicRelation -> AND .)
    FLOAT           reduce using rule 51 (logicRelation -> AND .)
    sin             reduce using rule 51 (logicRelation -> AND .)
    cos             reduce using rule 51 (logicRelation -> AND .)
    exp             reduce using rule 51 (logicRelation -> AND .)
    log             reduce using rule 51 (logicRelation -> AND .)
    abs             reduce using rule 51 (logicRelation -> AND .)
    sqrt            reduce using rule 51 (logicRelation -> AND .)
    round           reduce using rule 51 (logicRelation -> AND .)
    sign            reduce using rule 51 (logicRelation -> AND .)
    rand            reduce using rule 51 (logicRelation -> AND .)
    zeros           reduce using rule 51 (logicRelation -> AND .)
    parse           reduce using rule 51 (logicRelation -> AND .)
    string          reduce using rule 51 (logicRelation -> AND .)
    maximum         reduce using rule 51 (logicRelation -> AND .)
    minimum         reduce using rule 51 (logicRelation -> AND .)
    findmax         reduce using rule 51 (logicRelation -> AND .)
    findmin         reduce using rule 51 (logicRelation -> AND .)
    length          reduce using rule 51 (logicRelation -> AND .)
    sort            reduce using rule 51 (logicRelation -> AND .)
    sortrows        reduce using rule 51 (logicRelation -> AND .)
    sum             reduce using rule 51 (logicRelation -> AND .)
    prod            reduce using rule 51 (logicRelation -> AND .)
    cumsum          reduce using rule 51 (logicRelation -> AND .)
    cumprod         reduce using rule 51 (logicRelation -> AND .)
    mean            reduce using rule 51 (logicRelation -> AND .)
    std             reduce using rule 51 (logicRelation -> AND .)
    median          reduce using rule 51 (logicRelation -> AND .)
    var             reduce using rule 51 (logicRelation -> AND .)
    cov             reduce using rule 51 (logicRelation -> AND .)
    mode            reduce using rule 51 (logicRelation -> AND .)
    PUSH            reduce using rule 51 (logicRelation -> AND .)
    APPEND          reduce using rule 51 (logicRelation -> AND .)
    POP             reduce using rule 51 (logicRelation -> AND .)
    SPLICE          reduce using rule 51 (logicRelation -> AND .)


state 100

    (52) logicRelation -> OR .

    NOT             reduce using rule 52 (logicRelation -> OR .)
    true            reduce using rule 52 (logicRelation -> OR .)
    false           reduce using rule 52 (logicRelation -> OR .)
    LSQUARE         reduce using rule 52 (logicRelation -> OR .)
    PLUS            reduce using rule 52 (logicRelation -> OR .)
    MINUS           reduce using rule 52 (logicRelation -> OR .)
    TEXT            reduce using rule 52 (logicRelation -> OR .)
    ID              reduce using rule 52 (logicRelation -> OR .)
    NUMBER          reduce using rule 52 (logicRelation -> OR .)
    LPARENT         reduce using rule 52 (logicRelation -> OR .)
    FLOAT           reduce using rule 52 (logicRelation -> OR .)
    sin             reduce using rule 52 (logicRelation -> OR .)
    cos             reduce using rule 52 (logicRelation -> OR .)
    exp             reduce using rule 52 (logicRelation -> OR .)
    log             reduce using rule 52 (logicRelation -> OR .)
    abs             reduce using rule 52 (logicRelation -> OR .)
    sqrt            reduce using rule 52 (logicRelation -> OR .)
    round           reduce using rule 52 (logicRelation -> OR .)
    sign            reduce using rule 52 (logicRelation -> OR .)
    rand            reduce using rule 52 (logicRelation -> OR .)
    zeros           reduce using rule 52 (logicRelation -> OR .)
    parse           reduce using rule 52 (logicRelation -> OR .)
    string          reduce using rule 52 (logicRelation -> OR .)
    maximum         reduce using rule 52 (logicRelation -> OR .)
    minimum         reduce using rule 52 (logicRelation -> OR .)
    findmax         reduce using rule 52 (logicRelation -> OR .)
    findmin         reduce using rule 52 (logicRelation -> OR .)
    length          reduce using rule 52 (logicRelation -> OR .)
    sort            reduce using rule 52 (logicRelation -> OR .)
    sortrows        reduce using rule 52 (logicRelation -> OR .)
    sum             reduce using rule 52 (logicRelation -> OR .)
    prod            reduce using rule 52 (logicRelation -> OR .)
    cumsum          reduce using rule 52 (logicRelation -> OR .)
    cumprod         reduce using rule 52 (logicRelation -> OR .)
    mean            reduce using rule 52 (logicRelation -> OR .)
    std             reduce using rule 52 (logicRelation -> OR .)
    median          reduce using rule 52 (logicRelation -> OR .)
    var             reduce using rule 52 (logicRelation -> OR .)
    cov             reduce using rule 52 (logicRelation -> OR .)
    mode            reduce using rule 52 (logicRelation -> OR .)
    PUSH            reduce using rule 52 (logicRelation -> OR .)
    APPEND          reduce using rule 52 (logicRelation -> OR .)
    POP             reduce using rule 52 (logicRelation -> OR .)
    SPLICE          reduce using rule 52 (logicRelation -> OR .)


state 101

    (39) condition -> comparables relation . comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    comparables                    shift and go to state 153
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 102

    (45) relation -> EQUAL .

    true            reduce using rule 45 (relation -> EQUAL .)
    false           reduce using rule 45 (relation -> EQUAL .)
    LSQUARE         reduce using rule 45 (relation -> EQUAL .)
    PLUS            reduce using rule 45 (relation -> EQUAL .)
    MINUS           reduce using rule 45 (relation -> EQUAL .)
    TEXT            reduce using rule 45 (relation -> EQUAL .)
    ID              reduce using rule 45 (relation -> EQUAL .)
    NUMBER          reduce using rule 45 (relation -> EQUAL .)
    LPARENT         reduce using rule 45 (relation -> EQUAL .)
    FLOAT           reduce using rule 45 (relation -> EQUAL .)
    sin             reduce using rule 45 (relation -> EQUAL .)
    cos             reduce using rule 45 (relation -> EQUAL .)
    exp             reduce using rule 45 (relation -> EQUAL .)
    log             reduce using rule 45 (relation -> EQUAL .)
    abs             reduce using rule 45 (relation -> EQUAL .)
    sqrt            reduce using rule 45 (relation -> EQUAL .)
    round           reduce using rule 45 (relation -> EQUAL .)
    sign            reduce using rule 45 (relation -> EQUAL .)
    rand            reduce using rule 45 (relation -> EQUAL .)
    zeros           reduce using rule 45 (relation -> EQUAL .)
    parse           reduce using rule 45 (relation -> EQUAL .)
    string          reduce using rule 45 (relation -> EQUAL .)
    maximum         reduce using rule 45 (relation -> EQUAL .)
    minimum         reduce using rule 45 (relation -> EQUAL .)
    findmax         reduce using rule 45 (relation -> EQUAL .)
    findmin         reduce using rule 45 (relation -> EQUAL .)
    length          reduce using rule 45 (relation -> EQUAL .)
    sort            reduce using rule 45 (relation -> EQUAL .)
    sortrows        reduce using rule 45 (relation -> EQUAL .)
    sum             reduce using rule 45 (relation -> EQUAL .)
    prod            reduce using rule 45 (relation -> EQUAL .)
    cumsum          reduce using rule 45 (relation -> EQUAL .)
    cumprod         reduce using rule 45 (relation -> EQUAL .)
    mean            reduce using rule 45 (relation -> EQUAL .)
    std             reduce using rule 45 (relation -> EQUAL .)
    median          reduce using rule 45 (relation -> EQUAL .)
    var             reduce using rule 45 (relation -> EQUAL .)
    cov             reduce using rule 45 (relation -> EQUAL .)
    mode            reduce using rule 45 (relation -> EQUAL .)
    PUSH            reduce using rule 45 (relation -> EQUAL .)
    APPEND          reduce using rule 45 (relation -> EQUAL .)
    POP             reduce using rule 45 (relation -> EQUAL .)
    SPLICE          reduce using rule 45 (relation -> EQUAL .)


state 103

    (46) relation -> NE .

    true            reduce using rule 46 (relation -> NE .)
    false           reduce using rule 46 (relation -> NE .)
    LSQUARE         reduce using rule 46 (relation -> NE .)
    PLUS            reduce using rule 46 (relation -> NE .)
    MINUS           reduce using rule 46 (relation -> NE .)
    TEXT            reduce using rule 46 (relation -> NE .)
    ID              reduce using rule 46 (relation -> NE .)
    NUMBER          reduce using rule 46 (relation -> NE .)
    LPARENT         reduce using rule 46 (relation -> NE .)
    FLOAT           reduce using rule 46 (relation -> NE .)
    sin             reduce using rule 46 (relation -> NE .)
    cos             reduce using rule 46 (relation -> NE .)
    exp             reduce using rule 46 (relation -> NE .)
    log             reduce using rule 46 (relation -> NE .)
    abs             reduce using rule 46 (relation -> NE .)
    sqrt            reduce using rule 46 (relation -> NE .)
    round           reduce using rule 46 (relation -> NE .)
    sign            reduce using rule 46 (relation -> NE .)
    rand            reduce using rule 46 (relation -> NE .)
    zeros           reduce using rule 46 (relation -> NE .)
    parse           reduce using rule 46 (relation -> NE .)
    string          reduce using rule 46 (relation -> NE .)
    maximum         reduce using rule 46 (relation -> NE .)
    minimum         reduce using rule 46 (relation -> NE .)
    findmax         reduce using rule 46 (relation -> NE .)
    findmin         reduce using rule 46 (relation -> NE .)
    length          reduce using rule 46 (relation -> NE .)
    sort            reduce using rule 46 (relation -> NE .)
    sortrows        reduce using rule 46 (relation -> NE .)
    sum             reduce using rule 46 (relation -> NE .)
    prod            reduce using rule 46 (relation -> NE .)
    cumsum          reduce using rule 46 (relation -> NE .)
    cumprod         reduce using rule 46 (relation -> NE .)
    mean            reduce using rule 46 (relation -> NE .)
    std             reduce using rule 46 (relation -> NE .)
    median          reduce using rule 46 (relation -> NE .)
    var             reduce using rule 46 (relation -> NE .)
    cov             reduce using rule 46 (relation -> NE .)
    mode            reduce using rule 46 (relation -> NE .)
    PUSH            reduce using rule 46 (relation -> NE .)
    APPEND          reduce using rule 46 (relation -> NE .)
    POP             reduce using rule 46 (relation -> NE .)
    SPLICE          reduce using rule 46 (relation -> NE .)


state 104

    (47) relation -> LT .

    true            reduce using rule 47 (relation -> LT .)
    false           reduce using rule 47 (relation -> LT .)
    LSQUARE         reduce using rule 47 (relation -> LT .)
    PLUS            reduce using rule 47 (relation -> LT .)
    MINUS           reduce using rule 47 (relation -> LT .)
    TEXT            reduce using rule 47 (relation -> LT .)
    ID              reduce using rule 47 (relation -> LT .)
    NUMBER          reduce using rule 47 (relation -> LT .)
    LPARENT         reduce using rule 47 (relation -> LT .)
    FLOAT           reduce using rule 47 (relation -> LT .)
    sin             reduce using rule 47 (relation -> LT .)
    cos             reduce using rule 47 (relation -> LT .)
    exp             reduce using rule 47 (relation -> LT .)
    log             reduce using rule 47 (relation -> LT .)
    abs             reduce using rule 47 (relation -> LT .)
    sqrt            reduce using rule 47 (relation -> LT .)
    round           reduce using rule 47 (relation -> LT .)
    sign            reduce using rule 47 (relation -> LT .)
    rand            reduce using rule 47 (relation -> LT .)
    zeros           reduce using rule 47 (relation -> LT .)
    parse           reduce using rule 47 (relation -> LT .)
    string          reduce using rule 47 (relation -> LT .)
    maximum         reduce using rule 47 (relation -> LT .)
    minimum         reduce using rule 47 (relation -> LT .)
    findmax         reduce using rule 47 (relation -> LT .)
    findmin         reduce using rule 47 (relation -> LT .)
    length          reduce using rule 47 (relation -> LT .)
    sort            reduce using rule 47 (relation -> LT .)
    sortrows        reduce using rule 47 (relation -> LT .)
    sum             reduce using rule 47 (relation -> LT .)
    prod            reduce using rule 47 (relation -> LT .)
    cumsum          reduce using rule 47 (relation -> LT .)
    cumprod         reduce using rule 47 (relation -> LT .)
    mean            reduce using rule 47 (relation -> LT .)
    std             reduce using rule 47 (relation -> LT .)
    median          reduce using rule 47 (relation -> LT .)
    var             reduce using rule 47 (relation -> LT .)
    cov             reduce using rule 47 (relation -> LT .)
    mode            reduce using rule 47 (relation -> LT .)
    PUSH            reduce using rule 47 (relation -> LT .)
    APPEND          reduce using rule 47 (relation -> LT .)
    POP             reduce using rule 47 (relation -> LT .)
    SPLICE          reduce using rule 47 (relation -> LT .)


state 105

    (48) relation -> GT .

    true            reduce using rule 48 (relation -> GT .)
    false           reduce using rule 48 (relation -> GT .)
    LSQUARE         reduce using rule 48 (relation -> GT .)
    PLUS            reduce using rule 48 (relation -> GT .)
    MINUS           reduce using rule 48 (relation -> GT .)
    TEXT            reduce using rule 48 (relation -> GT .)
    ID              reduce using rule 48 (relation -> GT .)
    NUMBER          reduce using rule 48 (relation -> GT .)
    LPARENT         reduce using rule 48 (relation -> GT .)
    FLOAT           reduce using rule 48 (relation -> GT .)
    sin             reduce using rule 48 (relation -> GT .)
    cos             reduce using rule 48 (relation -> GT .)
    exp             reduce using rule 48 (relation -> GT .)
    log             reduce using rule 48 (relation -> GT .)
    abs             reduce using rule 48 (relation -> GT .)
    sqrt            reduce using rule 48 (relation -> GT .)
    round           reduce using rule 48 (relation -> GT .)
    sign            reduce using rule 48 (relation -> GT .)
    rand            reduce using rule 48 (relation -> GT .)
    zeros           reduce using rule 48 (relation -> GT .)
    parse           reduce using rule 48 (relation -> GT .)
    string          reduce using rule 48 (relation -> GT .)
    maximum         reduce using rule 48 (relation -> GT .)
    minimum         reduce using rule 48 (relation -> GT .)
    findmax         reduce using rule 48 (relation -> GT .)
    findmin         reduce using rule 48 (relation -> GT .)
    length          reduce using rule 48 (relation -> GT .)
    sort            reduce using rule 48 (relation -> GT .)
    sortrows        reduce using rule 48 (relation -> GT .)
    sum             reduce using rule 48 (relation -> GT .)
    prod            reduce using rule 48 (relation -> GT .)
    cumsum          reduce using rule 48 (relation -> GT .)
    cumprod         reduce using rule 48 (relation -> GT .)
    mean            reduce using rule 48 (relation -> GT .)
    std             reduce using rule 48 (relation -> GT .)
    median          reduce using rule 48 (relation -> GT .)
    var             reduce using rule 48 (relation -> GT .)
    cov             reduce using rule 48 (relation -> GT .)
    mode            reduce using rule 48 (relation -> GT .)
    PUSH            reduce using rule 48 (relation -> GT .)
    APPEND          reduce using rule 48 (relation -> GT .)
    POP             reduce using rule 48 (relation -> GT .)
    SPLICE          reduce using rule 48 (relation -> GT .)


state 106

    (49) relation -> LTE .

    true            reduce using rule 49 (relation -> LTE .)
    false           reduce using rule 49 (relation -> LTE .)
    LSQUARE         reduce using rule 49 (relation -> LTE .)
    PLUS            reduce using rule 49 (relation -> LTE .)
    MINUS           reduce using rule 49 (relation -> LTE .)
    TEXT            reduce using rule 49 (relation -> LTE .)
    ID              reduce using rule 49 (relation -> LTE .)
    NUMBER          reduce using rule 49 (relation -> LTE .)
    LPARENT         reduce using rule 49 (relation -> LTE .)
    FLOAT           reduce using rule 49 (relation -> LTE .)
    sin             reduce using rule 49 (relation -> LTE .)
    cos             reduce using rule 49 (relation -> LTE .)
    exp             reduce using rule 49 (relation -> LTE .)
    log             reduce using rule 49 (relation -> LTE .)
    abs             reduce using rule 49 (relation -> LTE .)
    sqrt            reduce using rule 49 (relation -> LTE .)
    round           reduce using rule 49 (relation -> LTE .)
    sign            reduce using rule 49 (relation -> LTE .)
    rand            reduce using rule 49 (relation -> LTE .)
    zeros           reduce using rule 49 (relation -> LTE .)
    parse           reduce using rule 49 (relation -> LTE .)
    string          reduce using rule 49 (relation -> LTE .)
    maximum         reduce using rule 49 (relation -> LTE .)
    minimum         reduce using rule 49 (relation -> LTE .)
    findmax         reduce using rule 49 (relation -> LTE .)
    findmin         reduce using rule 49 (relation -> LTE .)
    length          reduce using rule 49 (relation -> LTE .)
    sort            reduce using rule 49 (relation -> LTE .)
    sortrows        reduce using rule 49 (relation -> LTE .)
    sum             reduce using rule 49 (relation -> LTE .)
    prod            reduce using rule 49 (relation -> LTE .)
    cumsum          reduce using rule 49 (relation -> LTE .)
    cumprod         reduce using rule 49 (relation -> LTE .)
    mean            reduce using rule 49 (relation -> LTE .)
    std             reduce using rule 49 (relation -> LTE .)
    median          reduce using rule 49 (relation -> LTE .)
    var             reduce using rule 49 (relation -> LTE .)
    cov             reduce using rule 49 (relation -> LTE .)
    mode            reduce using rule 49 (relation -> LTE .)
    PUSH            reduce using rule 49 (relation -> LTE .)
    APPEND          reduce using rule 49 (relation -> LTE .)
    POP             reduce using rule 49 (relation -> LTE .)
    SPLICE          reduce using rule 49 (relation -> LTE .)


state 107

    (50) relation -> GTE .

    true            reduce using rule 50 (relation -> GTE .)
    false           reduce using rule 50 (relation -> GTE .)
    LSQUARE         reduce using rule 50 (relation -> GTE .)
    PLUS            reduce using rule 50 (relation -> GTE .)
    MINUS           reduce using rule 50 (relation -> GTE .)
    TEXT            reduce using rule 50 (relation -> GTE .)
    ID              reduce using rule 50 (relation -> GTE .)
    NUMBER          reduce using rule 50 (relation -> GTE .)
    LPARENT         reduce using rule 50 (relation -> GTE .)
    FLOAT           reduce using rule 50 (relation -> GTE .)
    sin             reduce using rule 50 (relation -> GTE .)
    cos             reduce using rule 50 (relation -> GTE .)
    exp             reduce using rule 50 (relation -> GTE .)
    log             reduce using rule 50 (relation -> GTE .)
    abs             reduce using rule 50 (relation -> GTE .)
    sqrt            reduce using rule 50 (relation -> GTE .)
    round           reduce using rule 50 (relation -> GTE .)
    sign            reduce using rule 50 (relation -> GTE .)
    rand            reduce using rule 50 (relation -> GTE .)
    zeros           reduce using rule 50 (relation -> GTE .)
    parse           reduce using rule 50 (relation -> GTE .)
    string          reduce using rule 50 (relation -> GTE .)
    maximum         reduce using rule 50 (relation -> GTE .)
    minimum         reduce using rule 50 (relation -> GTE .)
    findmax         reduce using rule 50 (relation -> GTE .)
    findmin         reduce using rule 50 (relation -> GTE .)
    length          reduce using rule 50 (relation -> GTE .)
    sort            reduce using rule 50 (relation -> GTE .)
    sortrows        reduce using rule 50 (relation -> GTE .)
    sum             reduce using rule 50 (relation -> GTE .)
    prod            reduce using rule 50 (relation -> GTE .)
    cumsum          reduce using rule 50 (relation -> GTE .)
    cumprod         reduce using rule 50 (relation -> GTE .)
    mean            reduce using rule 50 (relation -> GTE .)
    std             reduce using rule 50 (relation -> GTE .)
    median          reduce using rule 50 (relation -> GTE .)
    var             reduce using rule 50 (relation -> GTE .)
    cov             reduce using rule 50 (relation -> GTE .)
    mode            reduce using rule 50 (relation -> GTE .)
    PUSH            reduce using rule 50 (relation -> GTE .)
    APPEND          reduce using rule 50 (relation -> GTE .)
    POP             reduce using rule 50 (relation -> GTE .)
    SPLICE          reduce using rule 50 (relation -> GTE .)


state 108

    (40) condition -> NOT comparables .

    AND             reduce using rule 40 (condition -> NOT comparables .)
    OR              reduce using rule 40 (condition -> NOT comparables .)
    ID              reduce using rule 40 (condition -> NOT comparables .)
    using           reduce using rule 40 (condition -> NOT comparables .)
    if              reduce using rule 40 (condition -> NOT comparables .)
    for             reduce using rule 40 (condition -> NOT comparables .)
    while           reduce using rule 40 (condition -> NOT comparables .)
    println         reduce using rule 40 (condition -> NOT comparables .)
    print           reduce using rule 40 (condition -> NOT comparables .)
    SHOW            reduce using rule 40 (condition -> NOT comparables .)
    sin             reduce using rule 40 (condition -> NOT comparables .)
    cos             reduce using rule 40 (condition -> NOT comparables .)
    exp             reduce using rule 40 (condition -> NOT comparables .)
    log             reduce using rule 40 (condition -> NOT comparables .)
    abs             reduce using rule 40 (condition -> NOT comparables .)
    sqrt            reduce using rule 40 (condition -> NOT comparables .)
    round           reduce using rule 40 (condition -> NOT comparables .)
    sign            reduce using rule 40 (condition -> NOT comparables .)
    rand            reduce using rule 40 (condition -> NOT comparables .)
    zeros           reduce using rule 40 (condition -> NOT comparables .)
    parse           reduce using rule 40 (condition -> NOT comparables .)
    string          reduce using rule 40 (condition -> NOT comparables .)
    maximum         reduce using rule 40 (condition -> NOT comparables .)
    minimum         reduce using rule 40 (condition -> NOT comparables .)
    findmax         reduce using rule 40 (condition -> NOT comparables .)
    findmin         reduce using rule 40 (condition -> NOT comparables .)
    length          reduce using rule 40 (condition -> NOT comparables .)
    sort            reduce using rule 40 (condition -> NOT comparables .)
    sortrows        reduce using rule 40 (condition -> NOT comparables .)
    sum             reduce using rule 40 (condition -> NOT comparables .)
    prod            reduce using rule 40 (condition -> NOT comparables .)
    cumsum          reduce using rule 40 (condition -> NOT comparables .)
    cumprod         reduce using rule 40 (condition -> NOT comparables .)
    mean            reduce using rule 40 (condition -> NOT comparables .)
    std             reduce using rule 40 (condition -> NOT comparables .)
    median          reduce using rule 40 (condition -> NOT comparables .)
    var             reduce using rule 40 (condition -> NOT comparables .)
    cov             reduce using rule 40 (condition -> NOT comparables .)
    mode            reduce using rule 40 (condition -> NOT comparables .)
    PUSH            reduce using rule 40 (condition -> NOT comparables .)
    APPEND          reduce using rule 40 (condition -> NOT comparables .)
    POP             reduce using rule 40 (condition -> NOT comparables .)
    SPLICE          reduce using rule 40 (condition -> NOT comparables .)


state 109

    (60) expression -> expression addingOperator . term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    term                           shift and go to state 154
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 110

    (99) stringList -> expression COMMA . String
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID

    TEXT            shift and go to state 75

    String                         shift and go to state 155

state 111

    (94) stringList -> stringList COMMA . expression
    (95) stringList -> stringList COMMA . String
    (96) stringList -> stringList COMMA . boolean
    (97) stringList -> stringList COMMA . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    TEXT            shift and go to state 75
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 156
    String                         shift and go to state 157
    boolean                        shift and go to state 158
    array                          shift and go to state 159
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 112

    (98) stringList -> boolean COMMA . String
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID

    TEXT            shift and go to state 75

    String                         shift and go to state 160

state 113

    (100) stringList -> array COMMA . String
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID

    TEXT            shift and go to state 75

    String                         shift and go to state 161

state 114

    (64) term -> term multiplyingOperator . factor
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    factor                         shift and go to state 162
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 115

    (77) multiplyingOperator -> TIMES .

    ID              reduce using rule 77 (multiplyingOperator -> TIMES .)
    NUMBER          reduce using rule 77 (multiplyingOperator -> TIMES .)
    LPARENT         reduce using rule 77 (multiplyingOperator -> TIMES .)
    FLOAT           reduce using rule 77 (multiplyingOperator -> TIMES .)
    sin             reduce using rule 77 (multiplyingOperator -> TIMES .)
    cos             reduce using rule 77 (multiplyingOperator -> TIMES .)
    exp             reduce using rule 77 (multiplyingOperator -> TIMES .)
    log             reduce using rule 77 (multiplyingOperator -> TIMES .)
    abs             reduce using rule 77 (multiplyingOperator -> TIMES .)
    sqrt            reduce using rule 77 (multiplyingOperator -> TIMES .)
    round           reduce using rule 77 (multiplyingOperator -> TIMES .)
    sign            reduce using rule 77 (multiplyingOperator -> TIMES .)
    rand            reduce using rule 77 (multiplyingOperator -> TIMES .)
    zeros           reduce using rule 77 (multiplyingOperator -> TIMES .)
    parse           reduce using rule 77 (multiplyingOperator -> TIMES .)
    string          reduce using rule 77 (multiplyingOperator -> TIMES .)
    maximum         reduce using rule 77 (multiplyingOperator -> TIMES .)
    minimum         reduce using rule 77 (multiplyingOperator -> TIMES .)
    findmax         reduce using rule 77 (multiplyingOperator -> TIMES .)
    findmin         reduce using rule 77 (multiplyingOperator -> TIMES .)
    length          reduce using rule 77 (multiplyingOperator -> TIMES .)
    sort            reduce using rule 77 (multiplyingOperator -> TIMES .)
    sortrows        reduce using rule 77 (multiplyingOperator -> TIMES .)
    sum             reduce using rule 77 (multiplyingOperator -> TIMES .)
    prod            reduce using rule 77 (multiplyingOperator -> TIMES .)
    cumsum          reduce using rule 77 (multiplyingOperator -> TIMES .)
    cumprod         reduce using rule 77 (multiplyingOperator -> TIMES .)
    mean            reduce using rule 77 (multiplyingOperator -> TIMES .)
    std             reduce using rule 77 (multiplyingOperator -> TIMES .)
    median          reduce using rule 77 (multiplyingOperator -> TIMES .)
    var             reduce using rule 77 (multiplyingOperator -> TIMES .)
    cov             reduce using rule 77 (multiplyingOperator -> TIMES .)
    mode            reduce using rule 77 (multiplyingOperator -> TIMES .)
    PUSH            reduce using rule 77 (multiplyingOperator -> TIMES .)
    APPEND          reduce using rule 77 (multiplyingOperator -> TIMES .)
    POP             reduce using rule 77 (multiplyingOperator -> TIMES .)
    SPLICE          reduce using rule 77 (multiplyingOperator -> TIMES .)


state 116

    (78) multiplyingOperator -> DIVIDE .

    ID              reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    NUMBER          reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    LPARENT         reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    FLOAT           reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    sin             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    cos             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    exp             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    log             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    abs             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    sqrt            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    round           reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    sign            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    rand            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    zeros           reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    parse           reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    string          reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    maximum         reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    minimum         reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    findmax         reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    findmin         reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    length          reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    sort            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    sortrows        reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    sum             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    prod            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    cumsum          reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    cumprod         reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    mean            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    std             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    median          reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    var             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    cov             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    mode            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    PUSH            reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    APPEND          reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    POP             reduce using rule 78 (multiplyingOperator -> DIVIDE .)
    SPLICE          reduce using rule 78 (multiplyingOperator -> DIVIDE .)


state 117

    (79) multiplyingOperator -> EXPO .

    ID              reduce using rule 79 (multiplyingOperator -> EXPO .)
    NUMBER          reduce using rule 79 (multiplyingOperator -> EXPO .)
    LPARENT         reduce using rule 79 (multiplyingOperator -> EXPO .)
    FLOAT           reduce using rule 79 (multiplyingOperator -> EXPO .)
    sin             reduce using rule 79 (multiplyingOperator -> EXPO .)
    cos             reduce using rule 79 (multiplyingOperator -> EXPO .)
    exp             reduce using rule 79 (multiplyingOperator -> EXPO .)
    log             reduce using rule 79 (multiplyingOperator -> EXPO .)
    abs             reduce using rule 79 (multiplyingOperator -> EXPO .)
    sqrt            reduce using rule 79 (multiplyingOperator -> EXPO .)
    round           reduce using rule 79 (multiplyingOperator -> EXPO .)
    sign            reduce using rule 79 (multiplyingOperator -> EXPO .)
    rand            reduce using rule 79 (multiplyingOperator -> EXPO .)
    zeros           reduce using rule 79 (multiplyingOperator -> EXPO .)
    parse           reduce using rule 79 (multiplyingOperator -> EXPO .)
    string          reduce using rule 79 (multiplyingOperator -> EXPO .)
    maximum         reduce using rule 79 (multiplyingOperator -> EXPO .)
    minimum         reduce using rule 79 (multiplyingOperator -> EXPO .)
    findmax         reduce using rule 79 (multiplyingOperator -> EXPO .)
    findmin         reduce using rule 79 (multiplyingOperator -> EXPO .)
    length          reduce using rule 79 (multiplyingOperator -> EXPO .)
    sort            reduce using rule 79 (multiplyingOperator -> EXPO .)
    sortrows        reduce using rule 79 (multiplyingOperator -> EXPO .)
    sum             reduce using rule 79 (multiplyingOperator -> EXPO .)
    prod            reduce using rule 79 (multiplyingOperator -> EXPO .)
    cumsum          reduce using rule 79 (multiplyingOperator -> EXPO .)
    cumprod         reduce using rule 79 (multiplyingOperator -> EXPO .)
    mean            reduce using rule 79 (multiplyingOperator -> EXPO .)
    std             reduce using rule 79 (multiplyingOperator -> EXPO .)
    median          reduce using rule 79 (multiplyingOperator -> EXPO .)
    var             reduce using rule 79 (multiplyingOperator -> EXPO .)
    cov             reduce using rule 79 (multiplyingOperator -> EXPO .)
    mode            reduce using rule 79 (multiplyingOperator -> EXPO .)
    PUSH            reduce using rule 79 (multiplyingOperator -> EXPO .)
    APPEND          reduce using rule 79 (multiplyingOperator -> EXPO .)
    POP             reduce using rule 79 (multiplyingOperator -> EXPO .)
    SPLICE          reduce using rule 79 (multiplyingOperator -> EXPO .)


state 118

    (80) multiplyingOperator -> MOD .

    ID              reduce using rule 80 (multiplyingOperator -> MOD .)
    NUMBER          reduce using rule 80 (multiplyingOperator -> MOD .)
    LPARENT         reduce using rule 80 (multiplyingOperator -> MOD .)
    FLOAT           reduce using rule 80 (multiplyingOperator -> MOD .)
    sin             reduce using rule 80 (multiplyingOperator -> MOD .)
    cos             reduce using rule 80 (multiplyingOperator -> MOD .)
    exp             reduce using rule 80 (multiplyingOperator -> MOD .)
    log             reduce using rule 80 (multiplyingOperator -> MOD .)
    abs             reduce using rule 80 (multiplyingOperator -> MOD .)
    sqrt            reduce using rule 80 (multiplyingOperator -> MOD .)
    round           reduce using rule 80 (multiplyingOperator -> MOD .)
    sign            reduce using rule 80 (multiplyingOperator -> MOD .)
    rand            reduce using rule 80 (multiplyingOperator -> MOD .)
    zeros           reduce using rule 80 (multiplyingOperator -> MOD .)
    parse           reduce using rule 80 (multiplyingOperator -> MOD .)
    string          reduce using rule 80 (multiplyingOperator -> MOD .)
    maximum         reduce using rule 80 (multiplyingOperator -> MOD .)
    minimum         reduce using rule 80 (multiplyingOperator -> MOD .)
    findmax         reduce using rule 80 (multiplyingOperator -> MOD .)
    findmin         reduce using rule 80 (multiplyingOperator -> MOD .)
    length          reduce using rule 80 (multiplyingOperator -> MOD .)
    sort            reduce using rule 80 (multiplyingOperator -> MOD .)
    sortrows        reduce using rule 80 (multiplyingOperator -> MOD .)
    sum             reduce using rule 80 (multiplyingOperator -> MOD .)
    prod            reduce using rule 80 (multiplyingOperator -> MOD .)
    cumsum          reduce using rule 80 (multiplyingOperator -> MOD .)
    cumprod         reduce using rule 80 (multiplyingOperator -> MOD .)
    mean            reduce using rule 80 (multiplyingOperator -> MOD .)
    std             reduce using rule 80 (multiplyingOperator -> MOD .)
    median          reduce using rule 80 (multiplyingOperator -> MOD .)
    var             reduce using rule 80 (multiplyingOperator -> MOD .)
    cov             reduce using rule 80 (multiplyingOperator -> MOD .)
    mode            reduce using rule 80 (multiplyingOperator -> MOD .)
    PUSH            reduce using rule 80 (multiplyingOperator -> MOD .)
    APPEND          reduce using rule 80 (multiplyingOperator -> MOD .)
    POP             reduce using rule 80 (multiplyingOperator -> MOD .)
    SPLICE          reduce using rule 80 (multiplyingOperator -> MOD .)


state 119

    (59) expression -> addingOperator term .
    (64) term -> term . multiplyingOperator factor
    (77) multiplyingOperator -> . TIMES
    (78) multiplyingOperator -> . DIVIDE
    (79) multiplyingOperator -> . EXPO
    (80) multiplyingOperator -> . MOD

    COMMA           reduce using rule 59 (expression -> addingOperator term .)
    PLUS            reduce using rule 59 (expression -> addingOperator term .)
    MINUS           reduce using rule 59 (expression -> addingOperator term .)
    EQUAL           reduce using rule 59 (expression -> addingOperator term .)
    NE              reduce using rule 59 (expression -> addingOperator term .)
    LT              reduce using rule 59 (expression -> addingOperator term .)
    GT              reduce using rule 59 (expression -> addingOperator term .)
    LTE             reduce using rule 59 (expression -> addingOperator term .)
    GTE             reduce using rule 59 (expression -> addingOperator term .)
    in              reduce using rule 59 (expression -> addingOperator term .)
    ID              reduce using rule 59 (expression -> addingOperator term .)
    using           reduce using rule 59 (expression -> addingOperator term .)
    if              reduce using rule 59 (expression -> addingOperator term .)
    for             reduce using rule 59 (expression -> addingOperator term .)
    while           reduce using rule 59 (expression -> addingOperator term .)
    println         reduce using rule 59 (expression -> addingOperator term .)
    print           reduce using rule 59 (expression -> addingOperator term .)
    SHOW            reduce using rule 59 (expression -> addingOperator term .)
    sin             reduce using rule 59 (expression -> addingOperator term .)
    cos             reduce using rule 59 (expression -> addingOperator term .)
    exp             reduce using rule 59 (expression -> addingOperator term .)
    log             reduce using rule 59 (expression -> addingOperator term .)
    abs             reduce using rule 59 (expression -> addingOperator term .)
    sqrt            reduce using rule 59 (expression -> addingOperator term .)
    round           reduce using rule 59 (expression -> addingOperator term .)
    sign            reduce using rule 59 (expression -> addingOperator term .)
    rand            reduce using rule 59 (expression -> addingOperator term .)
    zeros           reduce using rule 59 (expression -> addingOperator term .)
    parse           reduce using rule 59 (expression -> addingOperator term .)
    string          reduce using rule 59 (expression -> addingOperator term .)
    maximum         reduce using rule 59 (expression -> addingOperator term .)
    minimum         reduce using rule 59 (expression -> addingOperator term .)
    findmax         reduce using rule 59 (expression -> addingOperator term .)
    findmin         reduce using rule 59 (expression -> addingOperator term .)
    length          reduce using rule 59 (expression -> addingOperator term .)
    sort            reduce using rule 59 (expression -> addingOperator term .)
    sortrows        reduce using rule 59 (expression -> addingOperator term .)
    sum             reduce using rule 59 (expression -> addingOperator term .)
    prod            reduce using rule 59 (expression -> addingOperator term .)
    cumsum          reduce using rule 59 (expression -> addingOperator term .)
    cumprod         reduce using rule 59 (expression -> addingOperator term .)
    mean            reduce using rule 59 (expression -> addingOperator term .)
    std             reduce using rule 59 (expression -> addingOperator term .)
    median          reduce using rule 59 (expression -> addingOperator term .)
    var             reduce using rule 59 (expression -> addingOperator term .)
    cov             reduce using rule 59 (expression -> addingOperator term .)
    mode            reduce using rule 59 (expression -> addingOperator term .)
    PUSH            reduce using rule 59 (expression -> addingOperator term .)
    APPEND          reduce using rule 59 (expression -> addingOperator term .)
    POP             reduce using rule 59 (expression -> addingOperator term .)
    SPLICE          reduce using rule 59 (expression -> addingOperator term .)
    $end            reduce using rule 59 (expression -> addingOperator term .)
    end             reduce using rule 59 (expression -> addingOperator term .)
    else            reduce using rule 59 (expression -> addingOperator term .)
    elseif          reduce using rule 59 (expression -> addingOperator term .)
    RSQUARE         reduce using rule 59 (expression -> addingOperator term .)
    AND             reduce using rule 59 (expression -> addingOperator term .)
    OR              reduce using rule 59 (expression -> addingOperator term .)
    RPARENT         reduce using rule 59 (expression -> addingOperator term .)
    TWODOT          reduce using rule 59 (expression -> addingOperator term .)
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    EXPO            shift and go to state 117
    MOD             shift and go to state 118

    multiplyingOperator            shift and go to state 114

state 120

    (102) String -> String TIMES . TEXT
    (103) String -> String TIMES . ID

    TEXT            shift and go to state 163
    ID              shift and go to state 164


state 121

    (111) arrayList -> LSQUARE . arrayList RSQUARE
    (108) arrayList -> . expression
    (109) arrayList -> . String
    (110) arrayList -> . boolean
    (111) arrayList -> . LSQUARE arrayList RSQUARE
    (112) arrayList -> . arrayList COMMA expression
    (113) arrayList -> . arrayList COMMA String
    (114) arrayList -> . arrayList COMMA boolean
    (115) arrayList -> . arrayList COMMA LSQUARE arrayList RSQUARE
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (104) boolean -> . true
    (105) boolean -> . false
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 121
    TEXT            shift and go to state 75
    true            shift and go to state 69
    false           shift and go to state 70
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    arrayList                      shift and go to state 165
    expression                     shift and go to state 124
    String                         shift and go to state 125
    boolean                        shift and go to state 126
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 122

    (106) array -> LSQUARE arrayList . RSQUARE
    (112) arrayList -> arrayList . COMMA expression
    (113) arrayList -> arrayList . COMMA String
    (114) arrayList -> arrayList . COMMA boolean
    (115) arrayList -> arrayList . COMMA LSQUARE arrayList RSQUARE

    RSQUARE         shift and go to state 166
    COMMA           shift and go to state 167


state 123

    (107) array -> LSQUARE numberList . SEMMICOLOM numberList RSQUARE
    (117) numberList -> numberList . NUMBER

    SEMMICOLOM      shift and go to state 168
    NUMBER          shift and go to state 169


state 124

    (108) arrayList -> expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RSQUARE         reduce using rule 108 (arrayList -> expression .)
    COMMA           reduce using rule 108 (arrayList -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 125

    (109) arrayList -> String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    RSQUARE         reduce using rule 109 (arrayList -> String .)
    COMMA           reduce using rule 109 (arrayList -> String .)
    TIMES           shift and go to state 120


state 126

    (110) arrayList -> boolean .

    RSQUARE         reduce using rule 110 (arrayList -> boolean .)
    COMMA           reduce using rule 110 (arrayList -> boolean .)


state 127

    (116) numberList -> NUMBER .
    (82) factor -> NUMBER .

    SEMMICOLOM      reduce using rule 116 (numberList -> NUMBER .)
    NUMBER          reduce using rule 116 (numberList -> NUMBER .)
    TIMES           reduce using rule 82 (factor -> NUMBER .)
    DIVIDE          reduce using rule 82 (factor -> NUMBER .)
    EXPO            reduce using rule 82 (factor -> NUMBER .)
    MOD             reduce using rule 82 (factor -> NUMBER .)
    PLUS            reduce using rule 82 (factor -> NUMBER .)
    MINUS           reduce using rule 82 (factor -> NUMBER .)
    RSQUARE         reduce using rule 82 (factor -> NUMBER .)
    COMMA           reduce using rule 82 (factor -> NUMBER .)


state 128

    (85) factor -> ID LSQUARE . expression RSQUARE
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 170
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 129

    (83) factor -> LPARENT optionList . RPARENT

    RPARENT         shift and go to state 171


state 130

    (88) optionList -> expression .
    (89) optionList -> expression . COMMA expression
    (91) optionList -> expression . COMMA expression TWODOT expression
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RPARENT         reduce using rule 88 (optionList -> expression .)
    COMMA           shift and go to state 172
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 131

    (90) optionList -> array .

    RPARENT         reduce using rule 90 (optionList -> array .)


state 132

    (92) optionList -> empty .

    RPARENT         reduce using rule 92 (optionList -> empty .)


state 133

    (86) factor -> funcList LPARENT . optionList RPARENT
    (88) optionList -> . expression
    (89) optionList -> . expression COMMA expression
    (90) optionList -> . array
    (91) optionList -> . expression COMMA expression TWODOT expression
    (92) optionList -> . empty
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (139) empty -> .
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 71
    RPARENT         reduce using rule 139 (empty -> .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    funcList                       shift and go to state 80
    optionList                     shift and go to state 173
    expression                     shift and go to state 130
    array                          shift and go to state 131
    empty                          shift and go to state 132
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcVecList                    shift and go to state 81

state 134

    (87) factor -> funcVecList LPARENT . optionList RPARENT
    (88) optionList -> . expression
    (89) optionList -> . expression COMMA expression
    (90) optionList -> . array
    (91) optionList -> . expression COMMA expression TWODOT expression
    (92) optionList -> . empty
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (139) empty -> .
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 71
    RPARENT         reduce using rule 139 (empty -> .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    funcVecList                    shift and go to state 81
    optionList                     shift and go to state 174
    expression                     shift and go to state 130
    array                          shift and go to state 131
    empty                          shift and go to state 132
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80

state 135

    (13) statement -> for iterable statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    end             shift and go to state 175
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 136

    (33) iterable -> ID ASSIGN . expression TWODOT expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 176
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 137

    (34) iterable -> expression in . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 177
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 138

    (14) statement -> while conditionList statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    end             shift and go to state 178
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 139

    (15) statement -> printList LPARENT stringList . RPARENT
    (94) stringList -> stringList . COMMA expression
    (95) stringList -> stringList . COMMA String
    (96) stringList -> stringList . COMMA boolean
    (97) stringList -> stringList . COMMA array

    RPARENT         shift and go to state 179
    COMMA           shift and go to state 111


state 140

    (16) statement -> printList LPARENT expression . RPARENT
    (99) stringList -> expression . COMMA String
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RPARENT         shift and go to state 180
    COMMA           shift and go to state 110
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 141

    (17) statement -> printList LPARENT boolean . RPARENT
    (98) stringList -> boolean . COMMA String

    RPARENT         shift and go to state 181
    COMMA           shift and go to state 112


state 142

    (26) statement -> printList LPARENT array . RPARENT
    (100) stringList -> array . COMMA String

    RPARENT         shift and go to state 182
    COMMA           shift and go to state 113


state 143

    (27) statement -> funcList LPARENT optionList . RPARENT

    RPARENT         shift and go to state 183


state 144

    (28) statement -> funcVecList LPARENT optionList . RPARENT

    RPARENT         shift and go to state 184


state 145

    (18) statement -> ID ASSIGN readline LPARENT . RPARENT

    RPARENT         shift and go to state 185


state 146

    (19) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN expression
    (20) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN stringList
    (21) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN boolean
    (22) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN array
    (25) statement -> ID LSQUARE arrayIdList RSQUARE . assigList expression
    (53) assigList -> . ASSIGPLUS
    (54) assigList -> . ASSIGMINUS

    ASSIGN          shift and go to state 186
    ASSIGPLUS       shift and go to state 53
    ASSIGMINUS      shift and go to state 54

    assigList                      shift and go to state 187

state 147

    (29) arrayIdList -> expression COMMA . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 188
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 148

    (10) statement -> if conditionList statementList end .

    ID              reduce using rule 10 (statement -> if conditionList statementList end .)
    using           reduce using rule 10 (statement -> if conditionList statementList end .)
    if              reduce using rule 10 (statement -> if conditionList statementList end .)
    for             reduce using rule 10 (statement -> if conditionList statementList end .)
    while           reduce using rule 10 (statement -> if conditionList statementList end .)
    println         reduce using rule 10 (statement -> if conditionList statementList end .)
    print           reduce using rule 10 (statement -> if conditionList statementList end .)
    SHOW            reduce using rule 10 (statement -> if conditionList statementList end .)
    sin             reduce using rule 10 (statement -> if conditionList statementList end .)
    cos             reduce using rule 10 (statement -> if conditionList statementList end .)
    exp             reduce using rule 10 (statement -> if conditionList statementList end .)
    log             reduce using rule 10 (statement -> if conditionList statementList end .)
    abs             reduce using rule 10 (statement -> if conditionList statementList end .)
    sqrt            reduce using rule 10 (statement -> if conditionList statementList end .)
    round           reduce using rule 10 (statement -> if conditionList statementList end .)
    sign            reduce using rule 10 (statement -> if conditionList statementList end .)
    rand            reduce using rule 10 (statement -> if conditionList statementList end .)
    zeros           reduce using rule 10 (statement -> if conditionList statementList end .)
    parse           reduce using rule 10 (statement -> if conditionList statementList end .)
    string          reduce using rule 10 (statement -> if conditionList statementList end .)
    maximum         reduce using rule 10 (statement -> if conditionList statementList end .)
    minimum         reduce using rule 10 (statement -> if conditionList statementList end .)
    findmax         reduce using rule 10 (statement -> if conditionList statementList end .)
    findmin         reduce using rule 10 (statement -> if conditionList statementList end .)
    length          reduce using rule 10 (statement -> if conditionList statementList end .)
    sort            reduce using rule 10 (statement -> if conditionList statementList end .)
    sortrows        reduce using rule 10 (statement -> if conditionList statementList end .)
    sum             reduce using rule 10 (statement -> if conditionList statementList end .)
    prod            reduce using rule 10 (statement -> if conditionList statementList end .)
    cumsum          reduce using rule 10 (statement -> if conditionList statementList end .)
    cumprod         reduce using rule 10 (statement -> if conditionList statementList end .)
    mean            reduce using rule 10 (statement -> if conditionList statementList end .)
    std             reduce using rule 10 (statement -> if conditionList statementList end .)
    median          reduce using rule 10 (statement -> if conditionList statementList end .)
    var             reduce using rule 10 (statement -> if conditionList statementList end .)
    cov             reduce using rule 10 (statement -> if conditionList statementList end .)
    mode            reduce using rule 10 (statement -> if conditionList statementList end .)
    PUSH            reduce using rule 10 (statement -> if conditionList statementList end .)
    APPEND          reduce using rule 10 (statement -> if conditionList statementList end .)
    POP             reduce using rule 10 (statement -> if conditionList statementList end .)
    SPLICE          reduce using rule 10 (statement -> if conditionList statementList end .)
    $end            reduce using rule 10 (statement -> if conditionList statementList end .)
    end             reduce using rule 10 (statement -> if conditionList statementList end .)
    else            reduce using rule 10 (statement -> if conditionList statementList end .)
    elseif          reduce using rule 10 (statement -> if conditionList statementList end .)


state 149

    (11) statement -> if conditionList statementList else . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 189
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 150

    (12) statement -> if conditionList statementList elseifList . else statementList end
    (36) elseifList -> elseifList . elseif conditionList statementList

    else            shift and go to state 190
    elseif          shift and go to state 191


state 151

    (35) elseifList -> elseif . conditionList statementList
    (37) conditionList -> . condition
    (38) conditionList -> . conditionList logicRelation condition
    (39) condition -> . comparables relation comparables
    (40) condition -> . NOT comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    NOT             shift and go to state 61
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    conditionList                  shift and go to state 192
    condition                      shift and go to state 59
    comparables                    shift and go to state 60
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 152

    (38) conditionList -> conditionList logicRelation condition .

    AND             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    OR              reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    ID              reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    using           reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    if              reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    for             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    while           reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    println         reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    print           reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    SHOW            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    sin             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    cos             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    exp             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    log             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    abs             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    sqrt            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    round           reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    sign            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    rand            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    zeros           reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    parse           reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    string          reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    maximum         reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    minimum         reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    findmax         reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    findmin         reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    length          reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    sort            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    sortrows        reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    sum             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    prod            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    cumsum          reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    cumprod         reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    mean            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    std             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    median          reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    var             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    cov             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    mode            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    PUSH            reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    APPEND          reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    POP             reduce using rule 38 (conditionList -> conditionList logicRelation condition .)
    SPLICE          reduce using rule 38 (conditionList -> conditionList logicRelation condition .)


state 153

    (39) condition -> comparables relation comparables .

    AND             reduce using rule 39 (condition -> comparables relation comparables .)
    OR              reduce using rule 39 (condition -> comparables relation comparables .)
    ID              reduce using rule 39 (condition -> comparables relation comparables .)
    using           reduce using rule 39 (condition -> comparables relation comparables .)
    if              reduce using rule 39 (condition -> comparables relation comparables .)
    for             reduce using rule 39 (condition -> comparables relation comparables .)
    while           reduce using rule 39 (condition -> comparables relation comparables .)
    println         reduce using rule 39 (condition -> comparables relation comparables .)
    print           reduce using rule 39 (condition -> comparables relation comparables .)
    SHOW            reduce using rule 39 (condition -> comparables relation comparables .)
    sin             reduce using rule 39 (condition -> comparables relation comparables .)
    cos             reduce using rule 39 (condition -> comparables relation comparables .)
    exp             reduce using rule 39 (condition -> comparables relation comparables .)
    log             reduce using rule 39 (condition -> comparables relation comparables .)
    abs             reduce using rule 39 (condition -> comparables relation comparables .)
    sqrt            reduce using rule 39 (condition -> comparables relation comparables .)
    round           reduce using rule 39 (condition -> comparables relation comparables .)
    sign            reduce using rule 39 (condition -> comparables relation comparables .)
    rand            reduce using rule 39 (condition -> comparables relation comparables .)
    zeros           reduce using rule 39 (condition -> comparables relation comparables .)
    parse           reduce using rule 39 (condition -> comparables relation comparables .)
    string          reduce using rule 39 (condition -> comparables relation comparables .)
    maximum         reduce using rule 39 (condition -> comparables relation comparables .)
    minimum         reduce using rule 39 (condition -> comparables relation comparables .)
    findmax         reduce using rule 39 (condition -> comparables relation comparables .)
    findmin         reduce using rule 39 (condition -> comparables relation comparables .)
    length          reduce using rule 39 (condition -> comparables relation comparables .)
    sort            reduce using rule 39 (condition -> comparables relation comparables .)
    sortrows        reduce using rule 39 (condition -> comparables relation comparables .)
    sum             reduce using rule 39 (condition -> comparables relation comparables .)
    prod            reduce using rule 39 (condition -> comparables relation comparables .)
    cumsum          reduce using rule 39 (condition -> comparables relation comparables .)
    cumprod         reduce using rule 39 (condition -> comparables relation comparables .)
    mean            reduce using rule 39 (condition -> comparables relation comparables .)
    std             reduce using rule 39 (condition -> comparables relation comparables .)
    median          reduce using rule 39 (condition -> comparables relation comparables .)
    var             reduce using rule 39 (condition -> comparables relation comparables .)
    cov             reduce using rule 39 (condition -> comparables relation comparables .)
    mode            reduce using rule 39 (condition -> comparables relation comparables .)
    PUSH            reduce using rule 39 (condition -> comparables relation comparables .)
    APPEND          reduce using rule 39 (condition -> comparables relation comparables .)
    POP             reduce using rule 39 (condition -> comparables relation comparables .)
    SPLICE          reduce using rule 39 (condition -> comparables relation comparables .)


state 154

    (60) expression -> expression addingOperator term .
    (64) term -> term . multiplyingOperator factor
    (77) multiplyingOperator -> . TIMES
    (78) multiplyingOperator -> . DIVIDE
    (79) multiplyingOperator -> . EXPO
    (80) multiplyingOperator -> . MOD

    COMMA           reduce using rule 60 (expression -> expression addingOperator term .)
    PLUS            reduce using rule 60 (expression -> expression addingOperator term .)
    MINUS           reduce using rule 60 (expression -> expression addingOperator term .)
    EQUAL           reduce using rule 60 (expression -> expression addingOperator term .)
    NE              reduce using rule 60 (expression -> expression addingOperator term .)
    LT              reduce using rule 60 (expression -> expression addingOperator term .)
    GT              reduce using rule 60 (expression -> expression addingOperator term .)
    LTE             reduce using rule 60 (expression -> expression addingOperator term .)
    GTE             reduce using rule 60 (expression -> expression addingOperator term .)
    in              reduce using rule 60 (expression -> expression addingOperator term .)
    ID              reduce using rule 60 (expression -> expression addingOperator term .)
    using           reduce using rule 60 (expression -> expression addingOperator term .)
    if              reduce using rule 60 (expression -> expression addingOperator term .)
    for             reduce using rule 60 (expression -> expression addingOperator term .)
    while           reduce using rule 60 (expression -> expression addingOperator term .)
    println         reduce using rule 60 (expression -> expression addingOperator term .)
    print           reduce using rule 60 (expression -> expression addingOperator term .)
    SHOW            reduce using rule 60 (expression -> expression addingOperator term .)
    sin             reduce using rule 60 (expression -> expression addingOperator term .)
    cos             reduce using rule 60 (expression -> expression addingOperator term .)
    exp             reduce using rule 60 (expression -> expression addingOperator term .)
    log             reduce using rule 60 (expression -> expression addingOperator term .)
    abs             reduce using rule 60 (expression -> expression addingOperator term .)
    sqrt            reduce using rule 60 (expression -> expression addingOperator term .)
    round           reduce using rule 60 (expression -> expression addingOperator term .)
    sign            reduce using rule 60 (expression -> expression addingOperator term .)
    rand            reduce using rule 60 (expression -> expression addingOperator term .)
    zeros           reduce using rule 60 (expression -> expression addingOperator term .)
    parse           reduce using rule 60 (expression -> expression addingOperator term .)
    string          reduce using rule 60 (expression -> expression addingOperator term .)
    maximum         reduce using rule 60 (expression -> expression addingOperator term .)
    minimum         reduce using rule 60 (expression -> expression addingOperator term .)
    findmax         reduce using rule 60 (expression -> expression addingOperator term .)
    findmin         reduce using rule 60 (expression -> expression addingOperator term .)
    length          reduce using rule 60 (expression -> expression addingOperator term .)
    sort            reduce using rule 60 (expression -> expression addingOperator term .)
    sortrows        reduce using rule 60 (expression -> expression addingOperator term .)
    sum             reduce using rule 60 (expression -> expression addingOperator term .)
    prod            reduce using rule 60 (expression -> expression addingOperator term .)
    cumsum          reduce using rule 60 (expression -> expression addingOperator term .)
    cumprod         reduce using rule 60 (expression -> expression addingOperator term .)
    mean            reduce using rule 60 (expression -> expression addingOperator term .)
    std             reduce using rule 60 (expression -> expression addingOperator term .)
    median          reduce using rule 60 (expression -> expression addingOperator term .)
    var             reduce using rule 60 (expression -> expression addingOperator term .)
    cov             reduce using rule 60 (expression -> expression addingOperator term .)
    mode            reduce using rule 60 (expression -> expression addingOperator term .)
    PUSH            reduce using rule 60 (expression -> expression addingOperator term .)
    APPEND          reduce using rule 60 (expression -> expression addingOperator term .)
    POP             reduce using rule 60 (expression -> expression addingOperator term .)
    SPLICE          reduce using rule 60 (expression -> expression addingOperator term .)
    $end            reduce using rule 60 (expression -> expression addingOperator term .)
    end             reduce using rule 60 (expression -> expression addingOperator term .)
    else            reduce using rule 60 (expression -> expression addingOperator term .)
    elseif          reduce using rule 60 (expression -> expression addingOperator term .)
    RSQUARE         reduce using rule 60 (expression -> expression addingOperator term .)
    AND             reduce using rule 60 (expression -> expression addingOperator term .)
    OR              reduce using rule 60 (expression -> expression addingOperator term .)
    RPARENT         reduce using rule 60 (expression -> expression addingOperator term .)
    TWODOT          reduce using rule 60 (expression -> expression addingOperator term .)
    TIMES           shift and go to state 115
    DIVIDE          shift and go to state 116
    EXPO            shift and go to state 117
    MOD             shift and go to state 118

    multiplyingOperator            shift and go to state 114

state 155

    (99) stringList -> expression COMMA String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    COMMA           reduce using rule 99 (stringList -> expression COMMA String .)
    EQUAL           reduce using rule 99 (stringList -> expression COMMA String .)
    NE              reduce using rule 99 (stringList -> expression COMMA String .)
    LT              reduce using rule 99 (stringList -> expression COMMA String .)
    GT              reduce using rule 99 (stringList -> expression COMMA String .)
    LTE             reduce using rule 99 (stringList -> expression COMMA String .)
    GTE             reduce using rule 99 (stringList -> expression COMMA String .)
    ID              reduce using rule 99 (stringList -> expression COMMA String .)
    using           reduce using rule 99 (stringList -> expression COMMA String .)
    if              reduce using rule 99 (stringList -> expression COMMA String .)
    for             reduce using rule 99 (stringList -> expression COMMA String .)
    while           reduce using rule 99 (stringList -> expression COMMA String .)
    println         reduce using rule 99 (stringList -> expression COMMA String .)
    print           reduce using rule 99 (stringList -> expression COMMA String .)
    SHOW            reduce using rule 99 (stringList -> expression COMMA String .)
    sin             reduce using rule 99 (stringList -> expression COMMA String .)
    cos             reduce using rule 99 (stringList -> expression COMMA String .)
    exp             reduce using rule 99 (stringList -> expression COMMA String .)
    log             reduce using rule 99 (stringList -> expression COMMA String .)
    abs             reduce using rule 99 (stringList -> expression COMMA String .)
    sqrt            reduce using rule 99 (stringList -> expression COMMA String .)
    round           reduce using rule 99 (stringList -> expression COMMA String .)
    sign            reduce using rule 99 (stringList -> expression COMMA String .)
    rand            reduce using rule 99 (stringList -> expression COMMA String .)
    zeros           reduce using rule 99 (stringList -> expression COMMA String .)
    parse           reduce using rule 99 (stringList -> expression COMMA String .)
    string          reduce using rule 99 (stringList -> expression COMMA String .)
    maximum         reduce using rule 99 (stringList -> expression COMMA String .)
    minimum         reduce using rule 99 (stringList -> expression COMMA String .)
    findmax         reduce using rule 99 (stringList -> expression COMMA String .)
    findmin         reduce using rule 99 (stringList -> expression COMMA String .)
    length          reduce using rule 99 (stringList -> expression COMMA String .)
    sort            reduce using rule 99 (stringList -> expression COMMA String .)
    sortrows        reduce using rule 99 (stringList -> expression COMMA String .)
    sum             reduce using rule 99 (stringList -> expression COMMA String .)
    prod            reduce using rule 99 (stringList -> expression COMMA String .)
    cumsum          reduce using rule 99 (stringList -> expression COMMA String .)
    cumprod         reduce using rule 99 (stringList -> expression COMMA String .)
    mean            reduce using rule 99 (stringList -> expression COMMA String .)
    std             reduce using rule 99 (stringList -> expression COMMA String .)
    median          reduce using rule 99 (stringList -> expression COMMA String .)
    var             reduce using rule 99 (stringList -> expression COMMA String .)
    cov             reduce using rule 99 (stringList -> expression COMMA String .)
    mode            reduce using rule 99 (stringList -> expression COMMA String .)
    PUSH            reduce using rule 99 (stringList -> expression COMMA String .)
    APPEND          reduce using rule 99 (stringList -> expression COMMA String .)
    POP             reduce using rule 99 (stringList -> expression COMMA String .)
    SPLICE          reduce using rule 99 (stringList -> expression COMMA String .)
    $end            reduce using rule 99 (stringList -> expression COMMA String .)
    end             reduce using rule 99 (stringList -> expression COMMA String .)
    else            reduce using rule 99 (stringList -> expression COMMA String .)
    elseif          reduce using rule 99 (stringList -> expression COMMA String .)
    AND             reduce using rule 99 (stringList -> expression COMMA String .)
    OR              reduce using rule 99 (stringList -> expression COMMA String .)
    RPARENT         reduce using rule 99 (stringList -> expression COMMA String .)
    TIMES           shift and go to state 120


state 156

    (94) stringList -> stringList COMMA expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    COMMA           reduce using rule 94 (stringList -> stringList COMMA expression .)
    EQUAL           reduce using rule 94 (stringList -> stringList COMMA expression .)
    NE              reduce using rule 94 (stringList -> stringList COMMA expression .)
    LT              reduce using rule 94 (stringList -> stringList COMMA expression .)
    GT              reduce using rule 94 (stringList -> stringList COMMA expression .)
    LTE             reduce using rule 94 (stringList -> stringList COMMA expression .)
    GTE             reduce using rule 94 (stringList -> stringList COMMA expression .)
    ID              reduce using rule 94 (stringList -> stringList COMMA expression .)
    using           reduce using rule 94 (stringList -> stringList COMMA expression .)
    if              reduce using rule 94 (stringList -> stringList COMMA expression .)
    for             reduce using rule 94 (stringList -> stringList COMMA expression .)
    while           reduce using rule 94 (stringList -> stringList COMMA expression .)
    println         reduce using rule 94 (stringList -> stringList COMMA expression .)
    print           reduce using rule 94 (stringList -> stringList COMMA expression .)
    SHOW            reduce using rule 94 (stringList -> stringList COMMA expression .)
    sin             reduce using rule 94 (stringList -> stringList COMMA expression .)
    cos             reduce using rule 94 (stringList -> stringList COMMA expression .)
    exp             reduce using rule 94 (stringList -> stringList COMMA expression .)
    log             reduce using rule 94 (stringList -> stringList COMMA expression .)
    abs             reduce using rule 94 (stringList -> stringList COMMA expression .)
    sqrt            reduce using rule 94 (stringList -> stringList COMMA expression .)
    round           reduce using rule 94 (stringList -> stringList COMMA expression .)
    sign            reduce using rule 94 (stringList -> stringList COMMA expression .)
    rand            reduce using rule 94 (stringList -> stringList COMMA expression .)
    zeros           reduce using rule 94 (stringList -> stringList COMMA expression .)
    parse           reduce using rule 94 (stringList -> stringList COMMA expression .)
    string          reduce using rule 94 (stringList -> stringList COMMA expression .)
    maximum         reduce using rule 94 (stringList -> stringList COMMA expression .)
    minimum         reduce using rule 94 (stringList -> stringList COMMA expression .)
    findmax         reduce using rule 94 (stringList -> stringList COMMA expression .)
    findmin         reduce using rule 94 (stringList -> stringList COMMA expression .)
    length          reduce using rule 94 (stringList -> stringList COMMA expression .)
    sort            reduce using rule 94 (stringList -> stringList COMMA expression .)
    sortrows        reduce using rule 94 (stringList -> stringList COMMA expression .)
    sum             reduce using rule 94 (stringList -> stringList COMMA expression .)
    prod            reduce using rule 94 (stringList -> stringList COMMA expression .)
    cumsum          reduce using rule 94 (stringList -> stringList COMMA expression .)
    cumprod         reduce using rule 94 (stringList -> stringList COMMA expression .)
    mean            reduce using rule 94 (stringList -> stringList COMMA expression .)
    std             reduce using rule 94 (stringList -> stringList COMMA expression .)
    median          reduce using rule 94 (stringList -> stringList COMMA expression .)
    var             reduce using rule 94 (stringList -> stringList COMMA expression .)
    cov             reduce using rule 94 (stringList -> stringList COMMA expression .)
    mode            reduce using rule 94 (stringList -> stringList COMMA expression .)
    PUSH            reduce using rule 94 (stringList -> stringList COMMA expression .)
    APPEND          reduce using rule 94 (stringList -> stringList COMMA expression .)
    POP             reduce using rule 94 (stringList -> stringList COMMA expression .)
    SPLICE          reduce using rule 94 (stringList -> stringList COMMA expression .)
    $end            reduce using rule 94 (stringList -> stringList COMMA expression .)
    end             reduce using rule 94 (stringList -> stringList COMMA expression .)
    else            reduce using rule 94 (stringList -> stringList COMMA expression .)
    elseif          reduce using rule 94 (stringList -> stringList COMMA expression .)
    AND             reduce using rule 94 (stringList -> stringList COMMA expression .)
    OR              reduce using rule 94 (stringList -> stringList COMMA expression .)
    RPARENT         reduce using rule 94 (stringList -> stringList COMMA expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 157

    (95) stringList -> stringList COMMA String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    COMMA           reduce using rule 95 (stringList -> stringList COMMA String .)
    EQUAL           reduce using rule 95 (stringList -> stringList COMMA String .)
    NE              reduce using rule 95 (stringList -> stringList COMMA String .)
    LT              reduce using rule 95 (stringList -> stringList COMMA String .)
    GT              reduce using rule 95 (stringList -> stringList COMMA String .)
    LTE             reduce using rule 95 (stringList -> stringList COMMA String .)
    GTE             reduce using rule 95 (stringList -> stringList COMMA String .)
    ID              reduce using rule 95 (stringList -> stringList COMMA String .)
    using           reduce using rule 95 (stringList -> stringList COMMA String .)
    if              reduce using rule 95 (stringList -> stringList COMMA String .)
    for             reduce using rule 95 (stringList -> stringList COMMA String .)
    while           reduce using rule 95 (stringList -> stringList COMMA String .)
    println         reduce using rule 95 (stringList -> stringList COMMA String .)
    print           reduce using rule 95 (stringList -> stringList COMMA String .)
    SHOW            reduce using rule 95 (stringList -> stringList COMMA String .)
    sin             reduce using rule 95 (stringList -> stringList COMMA String .)
    cos             reduce using rule 95 (stringList -> stringList COMMA String .)
    exp             reduce using rule 95 (stringList -> stringList COMMA String .)
    log             reduce using rule 95 (stringList -> stringList COMMA String .)
    abs             reduce using rule 95 (stringList -> stringList COMMA String .)
    sqrt            reduce using rule 95 (stringList -> stringList COMMA String .)
    round           reduce using rule 95 (stringList -> stringList COMMA String .)
    sign            reduce using rule 95 (stringList -> stringList COMMA String .)
    rand            reduce using rule 95 (stringList -> stringList COMMA String .)
    zeros           reduce using rule 95 (stringList -> stringList COMMA String .)
    parse           reduce using rule 95 (stringList -> stringList COMMA String .)
    string          reduce using rule 95 (stringList -> stringList COMMA String .)
    maximum         reduce using rule 95 (stringList -> stringList COMMA String .)
    minimum         reduce using rule 95 (stringList -> stringList COMMA String .)
    findmax         reduce using rule 95 (stringList -> stringList COMMA String .)
    findmin         reduce using rule 95 (stringList -> stringList COMMA String .)
    length          reduce using rule 95 (stringList -> stringList COMMA String .)
    sort            reduce using rule 95 (stringList -> stringList COMMA String .)
    sortrows        reduce using rule 95 (stringList -> stringList COMMA String .)
    sum             reduce using rule 95 (stringList -> stringList COMMA String .)
    prod            reduce using rule 95 (stringList -> stringList COMMA String .)
    cumsum          reduce using rule 95 (stringList -> stringList COMMA String .)
    cumprod         reduce using rule 95 (stringList -> stringList COMMA String .)
    mean            reduce using rule 95 (stringList -> stringList COMMA String .)
    std             reduce using rule 95 (stringList -> stringList COMMA String .)
    median          reduce using rule 95 (stringList -> stringList COMMA String .)
    var             reduce using rule 95 (stringList -> stringList COMMA String .)
    cov             reduce using rule 95 (stringList -> stringList COMMA String .)
    mode            reduce using rule 95 (stringList -> stringList COMMA String .)
    PUSH            reduce using rule 95 (stringList -> stringList COMMA String .)
    APPEND          reduce using rule 95 (stringList -> stringList COMMA String .)
    POP             reduce using rule 95 (stringList -> stringList COMMA String .)
    SPLICE          reduce using rule 95 (stringList -> stringList COMMA String .)
    $end            reduce using rule 95 (stringList -> stringList COMMA String .)
    end             reduce using rule 95 (stringList -> stringList COMMA String .)
    else            reduce using rule 95 (stringList -> stringList COMMA String .)
    elseif          reduce using rule 95 (stringList -> stringList COMMA String .)
    AND             reduce using rule 95 (stringList -> stringList COMMA String .)
    OR              reduce using rule 95 (stringList -> stringList COMMA String .)
    RPARENT         reduce using rule 95 (stringList -> stringList COMMA String .)
    TIMES           shift and go to state 120


state 158

    (96) stringList -> stringList COMMA boolean .

    COMMA           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    EQUAL           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    NE              reduce using rule 96 (stringList -> stringList COMMA boolean .)
    LT              reduce using rule 96 (stringList -> stringList COMMA boolean .)
    GT              reduce using rule 96 (stringList -> stringList COMMA boolean .)
    LTE             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    GTE             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    ID              reduce using rule 96 (stringList -> stringList COMMA boolean .)
    using           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    if              reduce using rule 96 (stringList -> stringList COMMA boolean .)
    for             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    while           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    println         reduce using rule 96 (stringList -> stringList COMMA boolean .)
    print           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    SHOW            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    sin             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    cos             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    exp             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    log             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    abs             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    sqrt            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    round           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    sign            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    rand            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    zeros           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    parse           reduce using rule 96 (stringList -> stringList COMMA boolean .)
    string          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    maximum         reduce using rule 96 (stringList -> stringList COMMA boolean .)
    minimum         reduce using rule 96 (stringList -> stringList COMMA boolean .)
    findmax         reduce using rule 96 (stringList -> stringList COMMA boolean .)
    findmin         reduce using rule 96 (stringList -> stringList COMMA boolean .)
    length          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    sort            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    sortrows        reduce using rule 96 (stringList -> stringList COMMA boolean .)
    sum             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    prod            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    cumsum          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    cumprod         reduce using rule 96 (stringList -> stringList COMMA boolean .)
    mean            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    std             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    median          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    var             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    cov             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    mode            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    PUSH            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    APPEND          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    POP             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    SPLICE          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    $end            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    end             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    else            reduce using rule 96 (stringList -> stringList COMMA boolean .)
    elseif          reduce using rule 96 (stringList -> stringList COMMA boolean .)
    AND             reduce using rule 96 (stringList -> stringList COMMA boolean .)
    OR              reduce using rule 96 (stringList -> stringList COMMA boolean .)
    RPARENT         reduce using rule 96 (stringList -> stringList COMMA boolean .)


state 159

    (97) stringList -> stringList COMMA array .

    COMMA           reduce using rule 97 (stringList -> stringList COMMA array .)
    EQUAL           reduce using rule 97 (stringList -> stringList COMMA array .)
    NE              reduce using rule 97 (stringList -> stringList COMMA array .)
    LT              reduce using rule 97 (stringList -> stringList COMMA array .)
    GT              reduce using rule 97 (stringList -> stringList COMMA array .)
    LTE             reduce using rule 97 (stringList -> stringList COMMA array .)
    GTE             reduce using rule 97 (stringList -> stringList COMMA array .)
    ID              reduce using rule 97 (stringList -> stringList COMMA array .)
    using           reduce using rule 97 (stringList -> stringList COMMA array .)
    if              reduce using rule 97 (stringList -> stringList COMMA array .)
    for             reduce using rule 97 (stringList -> stringList COMMA array .)
    while           reduce using rule 97 (stringList -> stringList COMMA array .)
    println         reduce using rule 97 (stringList -> stringList COMMA array .)
    print           reduce using rule 97 (stringList -> stringList COMMA array .)
    SHOW            reduce using rule 97 (stringList -> stringList COMMA array .)
    sin             reduce using rule 97 (stringList -> stringList COMMA array .)
    cos             reduce using rule 97 (stringList -> stringList COMMA array .)
    exp             reduce using rule 97 (stringList -> stringList COMMA array .)
    log             reduce using rule 97 (stringList -> stringList COMMA array .)
    abs             reduce using rule 97 (stringList -> stringList COMMA array .)
    sqrt            reduce using rule 97 (stringList -> stringList COMMA array .)
    round           reduce using rule 97 (stringList -> stringList COMMA array .)
    sign            reduce using rule 97 (stringList -> stringList COMMA array .)
    rand            reduce using rule 97 (stringList -> stringList COMMA array .)
    zeros           reduce using rule 97 (stringList -> stringList COMMA array .)
    parse           reduce using rule 97 (stringList -> stringList COMMA array .)
    string          reduce using rule 97 (stringList -> stringList COMMA array .)
    maximum         reduce using rule 97 (stringList -> stringList COMMA array .)
    minimum         reduce using rule 97 (stringList -> stringList COMMA array .)
    findmax         reduce using rule 97 (stringList -> stringList COMMA array .)
    findmin         reduce using rule 97 (stringList -> stringList COMMA array .)
    length          reduce using rule 97 (stringList -> stringList COMMA array .)
    sort            reduce using rule 97 (stringList -> stringList COMMA array .)
    sortrows        reduce using rule 97 (stringList -> stringList COMMA array .)
    sum             reduce using rule 97 (stringList -> stringList COMMA array .)
    prod            reduce using rule 97 (stringList -> stringList COMMA array .)
    cumsum          reduce using rule 97 (stringList -> stringList COMMA array .)
    cumprod         reduce using rule 97 (stringList -> stringList COMMA array .)
    mean            reduce using rule 97 (stringList -> stringList COMMA array .)
    std             reduce using rule 97 (stringList -> stringList COMMA array .)
    median          reduce using rule 97 (stringList -> stringList COMMA array .)
    var             reduce using rule 97 (stringList -> stringList COMMA array .)
    cov             reduce using rule 97 (stringList -> stringList COMMA array .)
    mode            reduce using rule 97 (stringList -> stringList COMMA array .)
    PUSH            reduce using rule 97 (stringList -> stringList COMMA array .)
    APPEND          reduce using rule 97 (stringList -> stringList COMMA array .)
    POP             reduce using rule 97 (stringList -> stringList COMMA array .)
    SPLICE          reduce using rule 97 (stringList -> stringList COMMA array .)
    $end            reduce using rule 97 (stringList -> stringList COMMA array .)
    end             reduce using rule 97 (stringList -> stringList COMMA array .)
    else            reduce using rule 97 (stringList -> stringList COMMA array .)
    elseif          reduce using rule 97 (stringList -> stringList COMMA array .)
    AND             reduce using rule 97 (stringList -> stringList COMMA array .)
    OR              reduce using rule 97 (stringList -> stringList COMMA array .)
    RPARENT         reduce using rule 97 (stringList -> stringList COMMA array .)


state 160

    (98) stringList -> boolean COMMA String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    COMMA           reduce using rule 98 (stringList -> boolean COMMA String .)
    EQUAL           reduce using rule 98 (stringList -> boolean COMMA String .)
    NE              reduce using rule 98 (stringList -> boolean COMMA String .)
    LT              reduce using rule 98 (stringList -> boolean COMMA String .)
    GT              reduce using rule 98 (stringList -> boolean COMMA String .)
    LTE             reduce using rule 98 (stringList -> boolean COMMA String .)
    GTE             reduce using rule 98 (stringList -> boolean COMMA String .)
    ID              reduce using rule 98 (stringList -> boolean COMMA String .)
    using           reduce using rule 98 (stringList -> boolean COMMA String .)
    if              reduce using rule 98 (stringList -> boolean COMMA String .)
    for             reduce using rule 98 (stringList -> boolean COMMA String .)
    while           reduce using rule 98 (stringList -> boolean COMMA String .)
    println         reduce using rule 98 (stringList -> boolean COMMA String .)
    print           reduce using rule 98 (stringList -> boolean COMMA String .)
    SHOW            reduce using rule 98 (stringList -> boolean COMMA String .)
    sin             reduce using rule 98 (stringList -> boolean COMMA String .)
    cos             reduce using rule 98 (stringList -> boolean COMMA String .)
    exp             reduce using rule 98 (stringList -> boolean COMMA String .)
    log             reduce using rule 98 (stringList -> boolean COMMA String .)
    abs             reduce using rule 98 (stringList -> boolean COMMA String .)
    sqrt            reduce using rule 98 (stringList -> boolean COMMA String .)
    round           reduce using rule 98 (stringList -> boolean COMMA String .)
    sign            reduce using rule 98 (stringList -> boolean COMMA String .)
    rand            reduce using rule 98 (stringList -> boolean COMMA String .)
    zeros           reduce using rule 98 (stringList -> boolean COMMA String .)
    parse           reduce using rule 98 (stringList -> boolean COMMA String .)
    string          reduce using rule 98 (stringList -> boolean COMMA String .)
    maximum         reduce using rule 98 (stringList -> boolean COMMA String .)
    minimum         reduce using rule 98 (stringList -> boolean COMMA String .)
    findmax         reduce using rule 98 (stringList -> boolean COMMA String .)
    findmin         reduce using rule 98 (stringList -> boolean COMMA String .)
    length          reduce using rule 98 (stringList -> boolean COMMA String .)
    sort            reduce using rule 98 (stringList -> boolean COMMA String .)
    sortrows        reduce using rule 98 (stringList -> boolean COMMA String .)
    sum             reduce using rule 98 (stringList -> boolean COMMA String .)
    prod            reduce using rule 98 (stringList -> boolean COMMA String .)
    cumsum          reduce using rule 98 (stringList -> boolean COMMA String .)
    cumprod         reduce using rule 98 (stringList -> boolean COMMA String .)
    mean            reduce using rule 98 (stringList -> boolean COMMA String .)
    std             reduce using rule 98 (stringList -> boolean COMMA String .)
    median          reduce using rule 98 (stringList -> boolean COMMA String .)
    var             reduce using rule 98 (stringList -> boolean COMMA String .)
    cov             reduce using rule 98 (stringList -> boolean COMMA String .)
    mode            reduce using rule 98 (stringList -> boolean COMMA String .)
    PUSH            reduce using rule 98 (stringList -> boolean COMMA String .)
    APPEND          reduce using rule 98 (stringList -> boolean COMMA String .)
    POP             reduce using rule 98 (stringList -> boolean COMMA String .)
    SPLICE          reduce using rule 98 (stringList -> boolean COMMA String .)
    $end            reduce using rule 98 (stringList -> boolean COMMA String .)
    end             reduce using rule 98 (stringList -> boolean COMMA String .)
    else            reduce using rule 98 (stringList -> boolean COMMA String .)
    elseif          reduce using rule 98 (stringList -> boolean COMMA String .)
    AND             reduce using rule 98 (stringList -> boolean COMMA String .)
    OR              reduce using rule 98 (stringList -> boolean COMMA String .)
    RPARENT         reduce using rule 98 (stringList -> boolean COMMA String .)
    TIMES           shift and go to state 120


state 161

    (100) stringList -> array COMMA String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    COMMA           reduce using rule 100 (stringList -> array COMMA String .)
    EQUAL           reduce using rule 100 (stringList -> array COMMA String .)
    NE              reduce using rule 100 (stringList -> array COMMA String .)
    LT              reduce using rule 100 (stringList -> array COMMA String .)
    GT              reduce using rule 100 (stringList -> array COMMA String .)
    LTE             reduce using rule 100 (stringList -> array COMMA String .)
    GTE             reduce using rule 100 (stringList -> array COMMA String .)
    ID              reduce using rule 100 (stringList -> array COMMA String .)
    using           reduce using rule 100 (stringList -> array COMMA String .)
    if              reduce using rule 100 (stringList -> array COMMA String .)
    for             reduce using rule 100 (stringList -> array COMMA String .)
    while           reduce using rule 100 (stringList -> array COMMA String .)
    println         reduce using rule 100 (stringList -> array COMMA String .)
    print           reduce using rule 100 (stringList -> array COMMA String .)
    SHOW            reduce using rule 100 (stringList -> array COMMA String .)
    sin             reduce using rule 100 (stringList -> array COMMA String .)
    cos             reduce using rule 100 (stringList -> array COMMA String .)
    exp             reduce using rule 100 (stringList -> array COMMA String .)
    log             reduce using rule 100 (stringList -> array COMMA String .)
    abs             reduce using rule 100 (stringList -> array COMMA String .)
    sqrt            reduce using rule 100 (stringList -> array COMMA String .)
    round           reduce using rule 100 (stringList -> array COMMA String .)
    sign            reduce using rule 100 (stringList -> array COMMA String .)
    rand            reduce using rule 100 (stringList -> array COMMA String .)
    zeros           reduce using rule 100 (stringList -> array COMMA String .)
    parse           reduce using rule 100 (stringList -> array COMMA String .)
    string          reduce using rule 100 (stringList -> array COMMA String .)
    maximum         reduce using rule 100 (stringList -> array COMMA String .)
    minimum         reduce using rule 100 (stringList -> array COMMA String .)
    findmax         reduce using rule 100 (stringList -> array COMMA String .)
    findmin         reduce using rule 100 (stringList -> array COMMA String .)
    length          reduce using rule 100 (stringList -> array COMMA String .)
    sort            reduce using rule 100 (stringList -> array COMMA String .)
    sortrows        reduce using rule 100 (stringList -> array COMMA String .)
    sum             reduce using rule 100 (stringList -> array COMMA String .)
    prod            reduce using rule 100 (stringList -> array COMMA String .)
    cumsum          reduce using rule 100 (stringList -> array COMMA String .)
    cumprod         reduce using rule 100 (stringList -> array COMMA String .)
    mean            reduce using rule 100 (stringList -> array COMMA String .)
    std             reduce using rule 100 (stringList -> array COMMA String .)
    median          reduce using rule 100 (stringList -> array COMMA String .)
    var             reduce using rule 100 (stringList -> array COMMA String .)
    cov             reduce using rule 100 (stringList -> array COMMA String .)
    mode            reduce using rule 100 (stringList -> array COMMA String .)
    PUSH            reduce using rule 100 (stringList -> array COMMA String .)
    APPEND          reduce using rule 100 (stringList -> array COMMA String .)
    POP             reduce using rule 100 (stringList -> array COMMA String .)
    SPLICE          reduce using rule 100 (stringList -> array COMMA String .)
    $end            reduce using rule 100 (stringList -> array COMMA String .)
    end             reduce using rule 100 (stringList -> array COMMA String .)
    else            reduce using rule 100 (stringList -> array COMMA String .)
    elseif          reduce using rule 100 (stringList -> array COMMA String .)
    AND             reduce using rule 100 (stringList -> array COMMA String .)
    OR              reduce using rule 100 (stringList -> array COMMA String .)
    RPARENT         reduce using rule 100 (stringList -> array COMMA String .)
    TIMES           shift and go to state 120


state 162

    (64) term -> term multiplyingOperator factor .

    TIMES           reduce using rule 64 (term -> term multiplyingOperator factor .)
    DIVIDE          reduce using rule 64 (term -> term multiplyingOperator factor .)
    EXPO            reduce using rule 64 (term -> term multiplyingOperator factor .)
    MOD             reduce using rule 64 (term -> term multiplyingOperator factor .)
    COMMA           reduce using rule 64 (term -> term multiplyingOperator factor .)
    PLUS            reduce using rule 64 (term -> term multiplyingOperator factor .)
    MINUS           reduce using rule 64 (term -> term multiplyingOperator factor .)
    EQUAL           reduce using rule 64 (term -> term multiplyingOperator factor .)
    NE              reduce using rule 64 (term -> term multiplyingOperator factor .)
    LT              reduce using rule 64 (term -> term multiplyingOperator factor .)
    GT              reduce using rule 64 (term -> term multiplyingOperator factor .)
    LTE             reduce using rule 64 (term -> term multiplyingOperator factor .)
    GTE             reduce using rule 64 (term -> term multiplyingOperator factor .)
    in              reduce using rule 64 (term -> term multiplyingOperator factor .)
    ID              reduce using rule 64 (term -> term multiplyingOperator factor .)
    using           reduce using rule 64 (term -> term multiplyingOperator factor .)
    if              reduce using rule 64 (term -> term multiplyingOperator factor .)
    for             reduce using rule 64 (term -> term multiplyingOperator factor .)
    while           reduce using rule 64 (term -> term multiplyingOperator factor .)
    println         reduce using rule 64 (term -> term multiplyingOperator factor .)
    print           reduce using rule 64 (term -> term multiplyingOperator factor .)
    SHOW            reduce using rule 64 (term -> term multiplyingOperator factor .)
    sin             reduce using rule 64 (term -> term multiplyingOperator factor .)
    cos             reduce using rule 64 (term -> term multiplyingOperator factor .)
    exp             reduce using rule 64 (term -> term multiplyingOperator factor .)
    log             reduce using rule 64 (term -> term multiplyingOperator factor .)
    abs             reduce using rule 64 (term -> term multiplyingOperator factor .)
    sqrt            reduce using rule 64 (term -> term multiplyingOperator factor .)
    round           reduce using rule 64 (term -> term multiplyingOperator factor .)
    sign            reduce using rule 64 (term -> term multiplyingOperator factor .)
    rand            reduce using rule 64 (term -> term multiplyingOperator factor .)
    zeros           reduce using rule 64 (term -> term multiplyingOperator factor .)
    parse           reduce using rule 64 (term -> term multiplyingOperator factor .)
    string          reduce using rule 64 (term -> term multiplyingOperator factor .)
    maximum         reduce using rule 64 (term -> term multiplyingOperator factor .)
    minimum         reduce using rule 64 (term -> term multiplyingOperator factor .)
    findmax         reduce using rule 64 (term -> term multiplyingOperator factor .)
    findmin         reduce using rule 64 (term -> term multiplyingOperator factor .)
    length          reduce using rule 64 (term -> term multiplyingOperator factor .)
    sort            reduce using rule 64 (term -> term multiplyingOperator factor .)
    sortrows        reduce using rule 64 (term -> term multiplyingOperator factor .)
    sum             reduce using rule 64 (term -> term multiplyingOperator factor .)
    prod            reduce using rule 64 (term -> term multiplyingOperator factor .)
    cumsum          reduce using rule 64 (term -> term multiplyingOperator factor .)
    cumprod         reduce using rule 64 (term -> term multiplyingOperator factor .)
    mean            reduce using rule 64 (term -> term multiplyingOperator factor .)
    std             reduce using rule 64 (term -> term multiplyingOperator factor .)
    median          reduce using rule 64 (term -> term multiplyingOperator factor .)
    var             reduce using rule 64 (term -> term multiplyingOperator factor .)
    cov             reduce using rule 64 (term -> term multiplyingOperator factor .)
    mode            reduce using rule 64 (term -> term multiplyingOperator factor .)
    PUSH            reduce using rule 64 (term -> term multiplyingOperator factor .)
    APPEND          reduce using rule 64 (term -> term multiplyingOperator factor .)
    POP             reduce using rule 64 (term -> term multiplyingOperator factor .)
    SPLICE          reduce using rule 64 (term -> term multiplyingOperator factor .)
    $end            reduce using rule 64 (term -> term multiplyingOperator factor .)
    end             reduce using rule 64 (term -> term multiplyingOperator factor .)
    else            reduce using rule 64 (term -> term multiplyingOperator factor .)
    elseif          reduce using rule 64 (term -> term multiplyingOperator factor .)
    RSQUARE         reduce using rule 64 (term -> term multiplyingOperator factor .)
    AND             reduce using rule 64 (term -> term multiplyingOperator factor .)
    OR              reduce using rule 64 (term -> term multiplyingOperator factor .)
    RPARENT         reduce using rule 64 (term -> term multiplyingOperator factor .)
    TWODOT          reduce using rule 64 (term -> term multiplyingOperator factor .)


state 163

    (102) String -> String TIMES TEXT .

    TIMES           reduce using rule 102 (String -> String TIMES TEXT .)
    COMMA           reduce using rule 102 (String -> String TIMES TEXT .)
    EQUAL           reduce using rule 102 (String -> String TIMES TEXT .)
    NE              reduce using rule 102 (String -> String TIMES TEXT .)
    LT              reduce using rule 102 (String -> String TIMES TEXT .)
    GT              reduce using rule 102 (String -> String TIMES TEXT .)
    LTE             reduce using rule 102 (String -> String TIMES TEXT .)
    GTE             reduce using rule 102 (String -> String TIMES TEXT .)
    ID              reduce using rule 102 (String -> String TIMES TEXT .)
    using           reduce using rule 102 (String -> String TIMES TEXT .)
    if              reduce using rule 102 (String -> String TIMES TEXT .)
    for             reduce using rule 102 (String -> String TIMES TEXT .)
    while           reduce using rule 102 (String -> String TIMES TEXT .)
    println         reduce using rule 102 (String -> String TIMES TEXT .)
    print           reduce using rule 102 (String -> String TIMES TEXT .)
    SHOW            reduce using rule 102 (String -> String TIMES TEXT .)
    sin             reduce using rule 102 (String -> String TIMES TEXT .)
    cos             reduce using rule 102 (String -> String TIMES TEXT .)
    exp             reduce using rule 102 (String -> String TIMES TEXT .)
    log             reduce using rule 102 (String -> String TIMES TEXT .)
    abs             reduce using rule 102 (String -> String TIMES TEXT .)
    sqrt            reduce using rule 102 (String -> String TIMES TEXT .)
    round           reduce using rule 102 (String -> String TIMES TEXT .)
    sign            reduce using rule 102 (String -> String TIMES TEXT .)
    rand            reduce using rule 102 (String -> String TIMES TEXT .)
    zeros           reduce using rule 102 (String -> String TIMES TEXT .)
    parse           reduce using rule 102 (String -> String TIMES TEXT .)
    string          reduce using rule 102 (String -> String TIMES TEXT .)
    maximum         reduce using rule 102 (String -> String TIMES TEXT .)
    minimum         reduce using rule 102 (String -> String TIMES TEXT .)
    findmax         reduce using rule 102 (String -> String TIMES TEXT .)
    findmin         reduce using rule 102 (String -> String TIMES TEXT .)
    length          reduce using rule 102 (String -> String TIMES TEXT .)
    sort            reduce using rule 102 (String -> String TIMES TEXT .)
    sortrows        reduce using rule 102 (String -> String TIMES TEXT .)
    sum             reduce using rule 102 (String -> String TIMES TEXT .)
    prod            reduce using rule 102 (String -> String TIMES TEXT .)
    cumsum          reduce using rule 102 (String -> String TIMES TEXT .)
    cumprod         reduce using rule 102 (String -> String TIMES TEXT .)
    mean            reduce using rule 102 (String -> String TIMES TEXT .)
    std             reduce using rule 102 (String -> String TIMES TEXT .)
    median          reduce using rule 102 (String -> String TIMES TEXT .)
    var             reduce using rule 102 (String -> String TIMES TEXT .)
    cov             reduce using rule 102 (String -> String TIMES TEXT .)
    mode            reduce using rule 102 (String -> String TIMES TEXT .)
    PUSH            reduce using rule 102 (String -> String TIMES TEXT .)
    APPEND          reduce using rule 102 (String -> String TIMES TEXT .)
    POP             reduce using rule 102 (String -> String TIMES TEXT .)
    SPLICE          reduce using rule 102 (String -> String TIMES TEXT .)
    $end            reduce using rule 102 (String -> String TIMES TEXT .)
    end             reduce using rule 102 (String -> String TIMES TEXT .)
    else            reduce using rule 102 (String -> String TIMES TEXT .)
    elseif          reduce using rule 102 (String -> String TIMES TEXT .)
    AND             reduce using rule 102 (String -> String TIMES TEXT .)
    OR              reduce using rule 102 (String -> String TIMES TEXT .)
    RSQUARE         reduce using rule 102 (String -> String TIMES TEXT .)
    RPARENT         reduce using rule 102 (String -> String TIMES TEXT .)


state 164

    (103) String -> String TIMES ID .

    TIMES           reduce using rule 103 (String -> String TIMES ID .)
    COMMA           reduce using rule 103 (String -> String TIMES ID .)
    EQUAL           reduce using rule 103 (String -> String TIMES ID .)
    NE              reduce using rule 103 (String -> String TIMES ID .)
    LT              reduce using rule 103 (String -> String TIMES ID .)
    GT              reduce using rule 103 (String -> String TIMES ID .)
    LTE             reduce using rule 103 (String -> String TIMES ID .)
    GTE             reduce using rule 103 (String -> String TIMES ID .)
    ID              reduce using rule 103 (String -> String TIMES ID .)
    using           reduce using rule 103 (String -> String TIMES ID .)
    if              reduce using rule 103 (String -> String TIMES ID .)
    for             reduce using rule 103 (String -> String TIMES ID .)
    while           reduce using rule 103 (String -> String TIMES ID .)
    println         reduce using rule 103 (String -> String TIMES ID .)
    print           reduce using rule 103 (String -> String TIMES ID .)
    SHOW            reduce using rule 103 (String -> String TIMES ID .)
    sin             reduce using rule 103 (String -> String TIMES ID .)
    cos             reduce using rule 103 (String -> String TIMES ID .)
    exp             reduce using rule 103 (String -> String TIMES ID .)
    log             reduce using rule 103 (String -> String TIMES ID .)
    abs             reduce using rule 103 (String -> String TIMES ID .)
    sqrt            reduce using rule 103 (String -> String TIMES ID .)
    round           reduce using rule 103 (String -> String TIMES ID .)
    sign            reduce using rule 103 (String -> String TIMES ID .)
    rand            reduce using rule 103 (String -> String TIMES ID .)
    zeros           reduce using rule 103 (String -> String TIMES ID .)
    parse           reduce using rule 103 (String -> String TIMES ID .)
    string          reduce using rule 103 (String -> String TIMES ID .)
    maximum         reduce using rule 103 (String -> String TIMES ID .)
    minimum         reduce using rule 103 (String -> String TIMES ID .)
    findmax         reduce using rule 103 (String -> String TIMES ID .)
    findmin         reduce using rule 103 (String -> String TIMES ID .)
    length          reduce using rule 103 (String -> String TIMES ID .)
    sort            reduce using rule 103 (String -> String TIMES ID .)
    sortrows        reduce using rule 103 (String -> String TIMES ID .)
    sum             reduce using rule 103 (String -> String TIMES ID .)
    prod            reduce using rule 103 (String -> String TIMES ID .)
    cumsum          reduce using rule 103 (String -> String TIMES ID .)
    cumprod         reduce using rule 103 (String -> String TIMES ID .)
    mean            reduce using rule 103 (String -> String TIMES ID .)
    std             reduce using rule 103 (String -> String TIMES ID .)
    median          reduce using rule 103 (String -> String TIMES ID .)
    var             reduce using rule 103 (String -> String TIMES ID .)
    cov             reduce using rule 103 (String -> String TIMES ID .)
    mode            reduce using rule 103 (String -> String TIMES ID .)
    PUSH            reduce using rule 103 (String -> String TIMES ID .)
    APPEND          reduce using rule 103 (String -> String TIMES ID .)
    POP             reduce using rule 103 (String -> String TIMES ID .)
    SPLICE          reduce using rule 103 (String -> String TIMES ID .)
    $end            reduce using rule 103 (String -> String TIMES ID .)
    end             reduce using rule 103 (String -> String TIMES ID .)
    else            reduce using rule 103 (String -> String TIMES ID .)
    elseif          reduce using rule 103 (String -> String TIMES ID .)
    AND             reduce using rule 103 (String -> String TIMES ID .)
    OR              reduce using rule 103 (String -> String TIMES ID .)
    RSQUARE         reduce using rule 103 (String -> String TIMES ID .)
    RPARENT         reduce using rule 103 (String -> String TIMES ID .)


state 165

    (111) arrayList -> LSQUARE arrayList . RSQUARE
    (112) arrayList -> arrayList . COMMA expression
    (113) arrayList -> arrayList . COMMA String
    (114) arrayList -> arrayList . COMMA boolean
    (115) arrayList -> arrayList . COMMA LSQUARE arrayList RSQUARE

    RSQUARE         shift and go to state 193
    COMMA           shift and go to state 167


state 166

    (106) array -> LSQUARE arrayList RSQUARE .

    COMMA           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    EQUAL           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    NE              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LT              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    GT              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LTE             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    GTE             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    ID              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    using           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    if              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    for             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    while           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    println         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    print           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    SHOW            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    sin             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    cos             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    exp             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    log             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    abs             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    sqrt            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    round           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    sign            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    rand            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    zeros           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    parse           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    string          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    maximum         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    minimum         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    findmax         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    findmin         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    length          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    sort            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    sortrows        reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    sum             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    prod            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    cumsum          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    cumprod         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    mean            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    std             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    median          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    var             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    cov             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    mode            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    PUSH            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    APPEND          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    POP             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    SPLICE          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    $end            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    end             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    else            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    elseif          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    AND             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    OR              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    RPARENT         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)


state 167

    (112) arrayList -> arrayList COMMA . expression
    (113) arrayList -> arrayList COMMA . String
    (114) arrayList -> arrayList COMMA . boolean
    (115) arrayList -> arrayList COMMA . LSQUARE arrayList RSQUARE
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (104) boolean -> . true
    (105) boolean -> . false
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 197
    TEXT            shift and go to state 75
    true            shift and go to state 69
    false           shift and go to state 70
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 194
    String                         shift and go to state 195
    boolean                        shift and go to state 196
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 168

    (107) array -> LSQUARE numberList SEMMICOLOM . numberList RSQUARE
    (116) numberList -> . NUMBER
    (117) numberList -> . numberList NUMBER

    NUMBER          shift and go to state 199

    numberList                     shift and go to state 198

state 169

    (117) numberList -> numberList NUMBER .

    SEMMICOLOM      reduce using rule 117 (numberList -> numberList NUMBER .)
    NUMBER          reduce using rule 117 (numberList -> numberList NUMBER .)
    RSQUARE         reduce using rule 117 (numberList -> numberList NUMBER .)


state 170

    (85) factor -> ID LSQUARE expression . RSQUARE
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RSQUARE         shift and go to state 200
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 171

    (83) factor -> LPARENT optionList RPARENT .

    TIMES           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    DIVIDE          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    EXPO            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    MOD             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    COMMA           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    PLUS            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    MINUS           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    EQUAL           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    NE              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    LT              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    GT              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    LTE             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    GTE             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    in              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    ID              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    using           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    if              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    for             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    while           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    println         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    print           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    SHOW            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    sin             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    cos             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    exp             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    log             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    abs             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    sqrt            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    round           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    sign            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    rand            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    zeros           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    parse           reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    string          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    maximum         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    minimum         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    findmax         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    findmin         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    length          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    sort            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    sortrows        reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    sum             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    prod            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    cumsum          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    cumprod         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    mean            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    std             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    median          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    var             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    cov             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    mode            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    PUSH            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    APPEND          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    POP             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    SPLICE          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    $end            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    end             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    else            reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    elseif          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    RSQUARE         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    AND             reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    OR              reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    RPARENT         reduce using rule 83 (factor -> LPARENT optionList RPARENT .)
    TWODOT          reduce using rule 83 (factor -> LPARENT optionList RPARENT .)


state 172

    (89) optionList -> expression COMMA . expression
    (91) optionList -> expression COMMA . expression TWODOT expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 201
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 173

    (86) factor -> funcList LPARENT optionList . RPARENT

    RPARENT         shift and go to state 202


state 174

    (87) factor -> funcVecList LPARENT optionList . RPARENT

    RPARENT         shift and go to state 203


state 175

    (13) statement -> for iterable statementList end .

    ID              reduce using rule 13 (statement -> for iterable statementList end .)
    using           reduce using rule 13 (statement -> for iterable statementList end .)
    if              reduce using rule 13 (statement -> for iterable statementList end .)
    for             reduce using rule 13 (statement -> for iterable statementList end .)
    while           reduce using rule 13 (statement -> for iterable statementList end .)
    println         reduce using rule 13 (statement -> for iterable statementList end .)
    print           reduce using rule 13 (statement -> for iterable statementList end .)
    SHOW            reduce using rule 13 (statement -> for iterable statementList end .)
    sin             reduce using rule 13 (statement -> for iterable statementList end .)
    cos             reduce using rule 13 (statement -> for iterable statementList end .)
    exp             reduce using rule 13 (statement -> for iterable statementList end .)
    log             reduce using rule 13 (statement -> for iterable statementList end .)
    abs             reduce using rule 13 (statement -> for iterable statementList end .)
    sqrt            reduce using rule 13 (statement -> for iterable statementList end .)
    round           reduce using rule 13 (statement -> for iterable statementList end .)
    sign            reduce using rule 13 (statement -> for iterable statementList end .)
    rand            reduce using rule 13 (statement -> for iterable statementList end .)
    zeros           reduce using rule 13 (statement -> for iterable statementList end .)
    parse           reduce using rule 13 (statement -> for iterable statementList end .)
    string          reduce using rule 13 (statement -> for iterable statementList end .)
    maximum         reduce using rule 13 (statement -> for iterable statementList end .)
    minimum         reduce using rule 13 (statement -> for iterable statementList end .)
    findmax         reduce using rule 13 (statement -> for iterable statementList end .)
    findmin         reduce using rule 13 (statement -> for iterable statementList end .)
    length          reduce using rule 13 (statement -> for iterable statementList end .)
    sort            reduce using rule 13 (statement -> for iterable statementList end .)
    sortrows        reduce using rule 13 (statement -> for iterable statementList end .)
    sum             reduce using rule 13 (statement -> for iterable statementList end .)
    prod            reduce using rule 13 (statement -> for iterable statementList end .)
    cumsum          reduce using rule 13 (statement -> for iterable statementList end .)
    cumprod         reduce using rule 13 (statement -> for iterable statementList end .)
    mean            reduce using rule 13 (statement -> for iterable statementList end .)
    std             reduce using rule 13 (statement -> for iterable statementList end .)
    median          reduce using rule 13 (statement -> for iterable statementList end .)
    var             reduce using rule 13 (statement -> for iterable statementList end .)
    cov             reduce using rule 13 (statement -> for iterable statementList end .)
    mode            reduce using rule 13 (statement -> for iterable statementList end .)
    PUSH            reduce using rule 13 (statement -> for iterable statementList end .)
    APPEND          reduce using rule 13 (statement -> for iterable statementList end .)
    POP             reduce using rule 13 (statement -> for iterable statementList end .)
    SPLICE          reduce using rule 13 (statement -> for iterable statementList end .)
    $end            reduce using rule 13 (statement -> for iterable statementList end .)
    end             reduce using rule 13 (statement -> for iterable statementList end .)
    else            reduce using rule 13 (statement -> for iterable statementList end .)
    elseif          reduce using rule 13 (statement -> for iterable statementList end .)


state 176

    (33) iterable -> ID ASSIGN expression . TWODOT expression
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    TWODOT          shift and go to state 204
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 177

    (34) iterable -> expression in expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    ID              reduce using rule 34 (iterable -> expression in expression .)
    using           reduce using rule 34 (iterable -> expression in expression .)
    if              reduce using rule 34 (iterable -> expression in expression .)
    for             reduce using rule 34 (iterable -> expression in expression .)
    while           reduce using rule 34 (iterable -> expression in expression .)
    println         reduce using rule 34 (iterable -> expression in expression .)
    print           reduce using rule 34 (iterable -> expression in expression .)
    SHOW            reduce using rule 34 (iterable -> expression in expression .)
    sin             reduce using rule 34 (iterable -> expression in expression .)
    cos             reduce using rule 34 (iterable -> expression in expression .)
    exp             reduce using rule 34 (iterable -> expression in expression .)
    log             reduce using rule 34 (iterable -> expression in expression .)
    abs             reduce using rule 34 (iterable -> expression in expression .)
    sqrt            reduce using rule 34 (iterable -> expression in expression .)
    round           reduce using rule 34 (iterable -> expression in expression .)
    sign            reduce using rule 34 (iterable -> expression in expression .)
    rand            reduce using rule 34 (iterable -> expression in expression .)
    zeros           reduce using rule 34 (iterable -> expression in expression .)
    parse           reduce using rule 34 (iterable -> expression in expression .)
    string          reduce using rule 34 (iterable -> expression in expression .)
    maximum         reduce using rule 34 (iterable -> expression in expression .)
    minimum         reduce using rule 34 (iterable -> expression in expression .)
    findmax         reduce using rule 34 (iterable -> expression in expression .)
    findmin         reduce using rule 34 (iterable -> expression in expression .)
    length          reduce using rule 34 (iterable -> expression in expression .)
    sort            reduce using rule 34 (iterable -> expression in expression .)
    sortrows        reduce using rule 34 (iterable -> expression in expression .)
    sum             reduce using rule 34 (iterable -> expression in expression .)
    prod            reduce using rule 34 (iterable -> expression in expression .)
    cumsum          reduce using rule 34 (iterable -> expression in expression .)
    cumprod         reduce using rule 34 (iterable -> expression in expression .)
    mean            reduce using rule 34 (iterable -> expression in expression .)
    std             reduce using rule 34 (iterable -> expression in expression .)
    median          reduce using rule 34 (iterable -> expression in expression .)
    var             reduce using rule 34 (iterable -> expression in expression .)
    cov             reduce using rule 34 (iterable -> expression in expression .)
    mode            reduce using rule 34 (iterable -> expression in expression .)
    PUSH            reduce using rule 34 (iterable -> expression in expression .)
    APPEND          reduce using rule 34 (iterable -> expression in expression .)
    POP             reduce using rule 34 (iterable -> expression in expression .)
    SPLICE          reduce using rule 34 (iterable -> expression in expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 178

    (14) statement -> while conditionList statementList end .

    ID              reduce using rule 14 (statement -> while conditionList statementList end .)
    using           reduce using rule 14 (statement -> while conditionList statementList end .)
    if              reduce using rule 14 (statement -> while conditionList statementList end .)
    for             reduce using rule 14 (statement -> while conditionList statementList end .)
    while           reduce using rule 14 (statement -> while conditionList statementList end .)
    println         reduce using rule 14 (statement -> while conditionList statementList end .)
    print           reduce using rule 14 (statement -> while conditionList statementList end .)
    SHOW            reduce using rule 14 (statement -> while conditionList statementList end .)
    sin             reduce using rule 14 (statement -> while conditionList statementList end .)
    cos             reduce using rule 14 (statement -> while conditionList statementList end .)
    exp             reduce using rule 14 (statement -> while conditionList statementList end .)
    log             reduce using rule 14 (statement -> while conditionList statementList end .)
    abs             reduce using rule 14 (statement -> while conditionList statementList end .)
    sqrt            reduce using rule 14 (statement -> while conditionList statementList end .)
    round           reduce using rule 14 (statement -> while conditionList statementList end .)
    sign            reduce using rule 14 (statement -> while conditionList statementList end .)
    rand            reduce using rule 14 (statement -> while conditionList statementList end .)
    zeros           reduce using rule 14 (statement -> while conditionList statementList end .)
    parse           reduce using rule 14 (statement -> while conditionList statementList end .)
    string          reduce using rule 14 (statement -> while conditionList statementList end .)
    maximum         reduce using rule 14 (statement -> while conditionList statementList end .)
    minimum         reduce using rule 14 (statement -> while conditionList statementList end .)
    findmax         reduce using rule 14 (statement -> while conditionList statementList end .)
    findmin         reduce using rule 14 (statement -> while conditionList statementList end .)
    length          reduce using rule 14 (statement -> while conditionList statementList end .)
    sort            reduce using rule 14 (statement -> while conditionList statementList end .)
    sortrows        reduce using rule 14 (statement -> while conditionList statementList end .)
    sum             reduce using rule 14 (statement -> while conditionList statementList end .)
    prod            reduce using rule 14 (statement -> while conditionList statementList end .)
    cumsum          reduce using rule 14 (statement -> while conditionList statementList end .)
    cumprod         reduce using rule 14 (statement -> while conditionList statementList end .)
    mean            reduce using rule 14 (statement -> while conditionList statementList end .)
    std             reduce using rule 14 (statement -> while conditionList statementList end .)
    median          reduce using rule 14 (statement -> while conditionList statementList end .)
    var             reduce using rule 14 (statement -> while conditionList statementList end .)
    cov             reduce using rule 14 (statement -> while conditionList statementList end .)
    mode            reduce using rule 14 (statement -> while conditionList statementList end .)
    PUSH            reduce using rule 14 (statement -> while conditionList statementList end .)
    APPEND          reduce using rule 14 (statement -> while conditionList statementList end .)
    POP             reduce using rule 14 (statement -> while conditionList statementList end .)
    SPLICE          reduce using rule 14 (statement -> while conditionList statementList end .)
    $end            reduce using rule 14 (statement -> while conditionList statementList end .)
    end             reduce using rule 14 (statement -> while conditionList statementList end .)
    else            reduce using rule 14 (statement -> while conditionList statementList end .)
    elseif          reduce using rule 14 (statement -> while conditionList statementList end .)


state 179

    (15) statement -> printList LPARENT stringList RPARENT .

    ID              reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    using           reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    if              reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    for             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    while           reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    println         reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    print           reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    SHOW            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    sin             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    cos             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    exp             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    log             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    abs             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    sqrt            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    round           reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    sign            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    rand            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    zeros           reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    parse           reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    string          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    maximum         reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    minimum         reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    findmax         reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    findmin         reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    length          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    sort            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    sortrows        reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    sum             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    prod            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    cumsum          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    cumprod         reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    mean            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    std             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    median          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    var             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    cov             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    mode            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    PUSH            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    APPEND          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    POP             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    SPLICE          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    $end            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    end             reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    else            reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)
    elseif          reduce using rule 15 (statement -> printList LPARENT stringList RPARENT .)


state 180

    (16) statement -> printList LPARENT expression RPARENT .

    ID              reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    using           reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    if              reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    for             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    while           reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    println         reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    print           reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    SHOW            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    sin             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    cos             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    exp             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    log             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    abs             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    sqrt            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    round           reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    sign            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    rand            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    zeros           reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    parse           reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    string          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    maximum         reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    minimum         reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    findmax         reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    findmin         reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    length          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    sort            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    sortrows        reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    sum             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    prod            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    cumsum          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    cumprod         reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    mean            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    std             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    median          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    var             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    cov             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    mode            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    PUSH            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    APPEND          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    POP             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    SPLICE          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    $end            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    end             reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    else            reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)
    elseif          reduce using rule 16 (statement -> printList LPARENT expression RPARENT .)


state 181

    (17) statement -> printList LPARENT boolean RPARENT .

    ID              reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    using           reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    if              reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    for             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    while           reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    println         reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    print           reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    SHOW            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    sin             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    cos             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    exp             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    log             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    abs             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    sqrt            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    round           reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    sign            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    rand            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    zeros           reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    parse           reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    string          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    maximum         reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    minimum         reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    findmax         reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    findmin         reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    length          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    sort            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    sortrows        reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    sum             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    prod            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    cumsum          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    cumprod         reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    mean            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    std             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    median          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    var             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    cov             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    mode            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    PUSH            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    APPEND          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    POP             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    SPLICE          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    $end            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    end             reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    else            reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)
    elseif          reduce using rule 17 (statement -> printList LPARENT boolean RPARENT .)


state 182

    (26) statement -> printList LPARENT array RPARENT .

    ID              reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    using           reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    if              reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    for             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    while           reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    println         reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    print           reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    SHOW            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    sin             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    cos             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    exp             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    log             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    abs             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    sqrt            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    round           reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    sign            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    rand            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    zeros           reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    parse           reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    string          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    maximum         reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    minimum         reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    findmax         reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    findmin         reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    length          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    sort            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    sortrows        reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    sum             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    prod            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    cumsum          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    cumprod         reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    mean            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    std             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    median          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    var             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    cov             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    mode            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    PUSH            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    APPEND          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    POP             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    SPLICE          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    $end            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    end             reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    else            reduce using rule 26 (statement -> printList LPARENT array RPARENT .)
    elseif          reduce using rule 26 (statement -> printList LPARENT array RPARENT .)


state 183

    (27) statement -> funcList LPARENT optionList RPARENT .

    ID              reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    using           reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    if              reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    for             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    while           reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    println         reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    print           reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    SHOW            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    sin             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    cos             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    exp             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    log             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    abs             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    sqrt            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    round           reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    sign            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    rand            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    zeros           reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    parse           reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    string          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    maximum         reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    minimum         reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    findmax         reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    findmin         reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    length          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    sort            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    sortrows        reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    sum             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    prod            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    cumsum          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    cumprod         reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    mean            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    std             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    median          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    var             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    cov             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    mode            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    PUSH            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    APPEND          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    POP             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    SPLICE          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    $end            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    end             reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    else            reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)
    elseif          reduce using rule 27 (statement -> funcList LPARENT optionList RPARENT .)


state 184

    (28) statement -> funcVecList LPARENT optionList RPARENT .

    ID              reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    using           reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    if              reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    for             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    while           reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    println         reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    print           reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    SHOW            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    sin             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    cos             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    exp             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    log             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    abs             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    sqrt            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    round           reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    sign            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    rand            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    zeros           reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    parse           reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    string          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    maximum         reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    minimum         reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    findmax         reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    findmin         reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    length          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    sort            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    sortrows        reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    sum             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    prod            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    cumsum          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    cumprod         reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    mean            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    std             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    median          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    var             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    cov             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    mode            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    PUSH            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    APPEND          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    POP             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    SPLICE          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    $end            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    end             reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    else            reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)
    elseif          reduce using rule 28 (statement -> funcVecList LPARENT optionList RPARENT .)


state 185

    (18) statement -> ID ASSIGN readline LPARENT RPARENT .

    ID              reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    using           reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    if              reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    for             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    while           reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    println         reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    print           reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    SHOW            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    sin             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    cos             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    exp             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    log             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    abs             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    sqrt            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    round           reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    sign            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    rand            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    zeros           reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    parse           reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    string          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    maximum         reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    minimum         reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    findmax         reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    findmin         reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    length          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    sort            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    sortrows        reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    sum             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    prod            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    cumsum          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    cumprod         reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    mean            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    std             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    median          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    var             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    cov             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    mode            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    PUSH            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    APPEND          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    POP             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    SPLICE          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    $end            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    end             reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    else            reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)
    elseif          reduce using rule 18 (statement -> ID ASSIGN readline LPARENT RPARENT .)


state 186

    (19) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . expression
    (20) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . stringList
    (21) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . boolean
    (22) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 205
    stringList                     shift and go to state 206
    boolean                        shift and go to state 207
    array                          shift and go to state 208
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 187

    (25) statement -> ID LSQUARE arrayIdList RSQUARE assigList . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 209
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 188

    (29) arrayIdList -> expression COMMA expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RSQUARE         reduce using rule 29 (arrayIdList -> expression COMMA expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 189

    (11) statement -> if conditionList statementList else statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    end             shift and go to state 210
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 190

    (12) statement -> if conditionList statementList elseifList else . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 211
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 191

    (36) elseifList -> elseifList elseif . conditionList statementList
    (37) conditionList -> . condition
    (38) conditionList -> . conditionList logicRelation condition
    (39) condition -> . comparables relation comparables
    (40) condition -> . NOT comparables
    (41) comparables -> . expression
    (42) comparables -> . stringList
    (43) comparables -> . boolean
    (44) comparables -> . array
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (93) stringList -> . String
    (94) stringList -> . stringList COMMA expression
    (95) stringList -> . stringList COMMA String
    (96) stringList -> . stringList COMMA boolean
    (97) stringList -> . stringList COMMA array
    (98) stringList -> . boolean COMMA String
    (99) stringList -> . expression COMMA String
    (100) stringList -> . array COMMA String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (107) array -> . LSQUARE numberList SEMMICOLOM numberList RSQUARE
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    NOT             shift and go to state 61
    true            shift and go to state 69
    false           shift and go to state 70
    LSQUARE         shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    TEXT            shift and go to state 75
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    conditionList                  shift and go to state 212
    condition                      shift and go to state 59
    comparables                    shift and go to state 60
    expression                     shift and go to state 62
    stringList                     shift and go to state 63
    boolean                        shift and go to state 64
    array                          shift and go to state 65
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    String                         shift and go to state 68
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 192

    (35) elseifList -> elseif conditionList . statementList
    (38) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (51) logicRelation -> . AND
    (52) logicRelation -> . OR
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    AND             shift and go to state 99
    OR              shift and go to state 100
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 213
    logicRelation                  shift and go to state 98
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 193

    (111) arrayList -> LSQUARE arrayList RSQUARE .

    RSQUARE         reduce using rule 111 (arrayList -> LSQUARE arrayList RSQUARE .)
    COMMA           reduce using rule 111 (arrayList -> LSQUARE arrayList RSQUARE .)


state 194

    (112) arrayList -> arrayList COMMA expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RSQUARE         reduce using rule 112 (arrayList -> arrayList COMMA expression .)
    COMMA           reduce using rule 112 (arrayList -> arrayList COMMA expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 195

    (113) arrayList -> arrayList COMMA String .
    (102) String -> String . TIMES TEXT
    (103) String -> String . TIMES ID

    RSQUARE         reduce using rule 113 (arrayList -> arrayList COMMA String .)
    COMMA           reduce using rule 113 (arrayList -> arrayList COMMA String .)
    TIMES           shift and go to state 120


state 196

    (114) arrayList -> arrayList COMMA boolean .

    RSQUARE         reduce using rule 114 (arrayList -> arrayList COMMA boolean .)
    COMMA           reduce using rule 114 (arrayList -> arrayList COMMA boolean .)


state 197

    (115) arrayList -> arrayList COMMA LSQUARE . arrayList RSQUARE
    (108) arrayList -> . expression
    (109) arrayList -> . String
    (110) arrayList -> . boolean
    (111) arrayList -> . LSQUARE arrayList RSQUARE
    (112) arrayList -> . arrayList COMMA expression
    (113) arrayList -> . arrayList COMMA String
    (114) arrayList -> . arrayList COMMA boolean
    (115) arrayList -> . arrayList COMMA LSQUARE arrayList RSQUARE
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (101) String -> . TEXT
    (102) String -> . String TIMES TEXT
    (103) String -> . String TIMES ID
    (104) boolean -> . true
    (105) boolean -> . false
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    LSQUARE         shift and go to state 121
    TEXT            shift and go to state 75
    true            shift and go to state 69
    false           shift and go to state 70
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    arrayList                      shift and go to state 214
    expression                     shift and go to state 124
    String                         shift and go to state 125
    boolean                        shift and go to state 126
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 198

    (107) array -> LSQUARE numberList SEMMICOLOM numberList . RSQUARE
    (117) numberList -> numberList . NUMBER

    RSQUARE         shift and go to state 215
    NUMBER          shift and go to state 169


state 199

    (116) numberList -> NUMBER .

    RSQUARE         reduce using rule 116 (numberList -> NUMBER .)
    NUMBER          reduce using rule 116 (numberList -> NUMBER .)


state 200

    (85) factor -> ID LSQUARE expression RSQUARE .

    TIMES           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    EXPO            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    MOD             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    COMMA           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    EQUAL           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    NE              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    LT              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    GT              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    LTE             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    GTE             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    in              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    ID              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    using           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    if              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    for             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    while           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    println         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    print           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    SHOW            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    sin             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    cos             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    exp             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    log             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    abs             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    sqrt            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    round           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    sign            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    rand            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    zeros           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    parse           reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    string          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    maximum         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    minimum         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    findmax         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    findmin         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    length          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    sort            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    sortrows        reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    sum             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    prod            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    cumsum          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    cumprod         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    mean            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    std             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    median          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    var             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    cov             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    mode            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    PUSH            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    APPEND          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    POP             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    SPLICE          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    $end            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    end             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    else            reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    elseif          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    AND             reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    OR              reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    RPARENT         reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)
    TWODOT          reduce using rule 85 (factor -> ID LSQUARE expression RSQUARE .)


state 201

    (89) optionList -> expression COMMA expression .
    (91) optionList -> expression COMMA expression . TWODOT expression
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RPARENT         reduce using rule 89 (optionList -> expression COMMA expression .)
    TWODOT          shift and go to state 216
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 202

    (86) factor -> funcList LPARENT optionList RPARENT .

    TIMES           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    DIVIDE          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    EXPO            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    MOD             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    COMMA           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    PLUS            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    MINUS           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    EQUAL           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    NE              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    LT              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    GT              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    LTE             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    GTE             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    in              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    ID              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    using           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    if              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    for             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    while           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    println         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    print           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    SHOW            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    sin             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    cos             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    exp             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    log             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    abs             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    sqrt            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    round           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    sign            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    rand            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    zeros           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    parse           reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    string          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    maximum         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    minimum         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    findmax         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    findmin         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    length          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    sort            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    sortrows        reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    sum             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    prod            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    cumsum          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    cumprod         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    mean            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    std             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    median          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    var             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    cov             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    mode            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    PUSH            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    APPEND          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    POP             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    SPLICE          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    $end            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    end             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    else            reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    elseif          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    RSQUARE         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    AND             reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    OR              reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    RPARENT         reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)
    TWODOT          reduce using rule 86 (factor -> funcList LPARENT optionList RPARENT .)


state 203

    (87) factor -> funcVecList LPARENT optionList RPARENT .

    TIMES           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    DIVIDE          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    EXPO            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    MOD             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    COMMA           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    PLUS            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    MINUS           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    EQUAL           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    NE              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    LT              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    GT              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    LTE             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    GTE             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    in              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    ID              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    using           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    if              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    for             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    while           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    println         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    print           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    SHOW            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    sin             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    cos             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    exp             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    log             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    abs             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    sqrt            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    round           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    sign            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    rand            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    zeros           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    parse           reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    string          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    maximum         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    minimum         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    findmax         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    findmin         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    length          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    sort            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    sortrows        reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    sum             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    prod            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    cumsum          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    cumprod         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    mean            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    std             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    median          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    var             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    cov             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    mode            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    PUSH            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    APPEND          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    POP             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    SPLICE          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    $end            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    end             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    else            reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    elseif          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    RSQUARE         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    AND             reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    OR              reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    RPARENT         reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)
    TWODOT          reduce using rule 87 (factor -> funcVecList LPARENT optionList RPARENT .)


state 204

    (33) iterable -> ID ASSIGN expression TWODOT . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 217
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 205

    (19) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .
    (60) expression -> expression . addingOperator term
    (99) stringList -> expression . COMMA String
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    ID              reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    using           reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    if              reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    for             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    while           reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    println         reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    print           reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    SHOW            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    sin             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    cos             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    exp             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    log             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    abs             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    sqrt            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    round           reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    sign            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    rand            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    zeros           reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    parse           reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    string          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    maximum         reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    minimum         reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    findmax         reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    findmin         reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    length          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    sort            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    sortrows        reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    sum             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    prod            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    cumsum          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    cumprod         reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    mean            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    std             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    median          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    var             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    cov             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    mode            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    PUSH            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    APPEND          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    POP             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    SPLICE          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    $end            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    end             reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    else            reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    elseif          reduce using rule 19 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    COMMA           shift and go to state 110
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 206

    (20) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .
    (94) stringList -> stringList . COMMA expression
    (95) stringList -> stringList . COMMA String
    (96) stringList -> stringList . COMMA boolean
    (97) stringList -> stringList . COMMA array

    ID              reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    using           reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    if              reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    for             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    while           reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    println         reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    print           reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    SHOW            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    sin             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    cos             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    exp             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    log             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    abs             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    sqrt            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    round           reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    sign            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    rand            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    zeros           reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    parse           reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    string          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    maximum         reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    minimum         reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    findmax         reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    findmin         reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    length          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    sort            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    sortrows        reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    sum             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    prod            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    cumsum          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    cumprod         reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    mean            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    std             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    median          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    var             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    cov             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    mode            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    PUSH            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    APPEND          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    POP             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    SPLICE          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    $end            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    end             reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    else            reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    elseif          reduce using rule 20 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    COMMA           shift and go to state 111


state 207

    (21) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .
    (98) stringList -> boolean . COMMA String

    ID              reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    using           reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    if              reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    for             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    while           reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    println         reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    print           reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    SHOW            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    sin             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    cos             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    exp             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    log             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    abs             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    sqrt            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    round           reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    sign            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    rand            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    zeros           reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    parse           reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    string          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    maximum         reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    minimum         reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    findmax         reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    findmin         reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    length          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    sort            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    sortrows        reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    sum             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    prod            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    cumsum          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    cumprod         reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    mean            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    std             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    median          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    var             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    cov             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    mode            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    PUSH            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    APPEND          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    POP             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    SPLICE          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    $end            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    end             reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    else            reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    elseif          reduce using rule 21 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    COMMA           shift and go to state 112


state 208

    (22) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .
    (100) stringList -> array . COMMA String

    ID              reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    using           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    if              reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    for             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    while           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    println         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    print           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    SHOW            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    sin             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    cos             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    exp             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    log             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    abs             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    sqrt            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    round           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    sign            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    rand            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    zeros           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    parse           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    string          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    maximum         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    minimum         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    findmax         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    findmin         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    length          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    sort            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    sortrows        reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    sum             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    prod            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    cumsum          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    cumprod         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    mean            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    std             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    median          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    var             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    cov             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    mode            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    PUSH            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    APPEND          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    POP             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    SPLICE          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    $end            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    end             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    else            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    elseif          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    COMMA           shift and go to state 113


state 209

    (25) statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    ID              reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    using           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    if              reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    for             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    while           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    println         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    print           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    SHOW            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    sin             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    cos             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    exp             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    log             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    abs             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    sqrt            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    round           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    sign            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    rand            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    zeros           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    parse           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    string          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    maximum         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    minimum         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    findmax         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    findmin         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    length          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    sort            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    sortrows        reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    sum             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    prod            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    cumsum          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    cumprod         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    mean            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    std             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    median          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    var             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    cov             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    mode            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    PUSH            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    APPEND          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    POP             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    SPLICE          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    $end            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    end             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    else            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    elseif          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 210

    (11) statement -> if conditionList statementList else statementList end .

    ID              reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    using           reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    if              reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    for             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    while           reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    println         reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    print           reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    SHOW            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    sin             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    cos             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    exp             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    log             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    abs             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    sqrt            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    round           reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    sign            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    rand            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    zeros           reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    parse           reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    string          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    maximum         reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    minimum         reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    findmax         reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    findmin         reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    length          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    sort            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    sortrows        reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    sum             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    prod            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    cumsum          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    cumprod         reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    mean            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    std             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    median          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    var             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    cov             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    mode            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    PUSH            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    APPEND          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    POP             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    SPLICE          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    $end            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    end             reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    else            reduce using rule 11 (statement -> if conditionList statementList else statementList end .)
    elseif          reduce using rule 11 (statement -> if conditionList statementList else statementList end .)


state 211

    (12) statement -> if conditionList statementList elseifList else statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    end             shift and go to state 218
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 212

    (36) elseifList -> elseifList elseif conditionList . statementList
    (38) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (51) logicRelation -> . AND
    (52) logicRelation -> . OR
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    AND             shift and go to state 99
    OR              shift and go to state 100
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statementList                  shift and go to state 219
    logicRelation                  shift and go to state 98
    statement                      shift and go to state 4
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 213

    (35) elseifList -> elseif conditionList statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    else            reduce using rule 35 (elseifList -> elseif conditionList statementList .)
    elseif          reduce using rule 35 (elseifList -> elseif conditionList statementList .)
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 214

    (115) arrayList -> arrayList COMMA LSQUARE arrayList . RSQUARE
    (112) arrayList -> arrayList . COMMA expression
    (113) arrayList -> arrayList . COMMA String
    (114) arrayList -> arrayList . COMMA boolean
    (115) arrayList -> arrayList . COMMA LSQUARE arrayList RSQUARE

    RSQUARE         shift and go to state 220
    COMMA           shift and go to state 167


state 215

    (107) array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .

    COMMA           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    EQUAL           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    NE              reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    LT              reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    GT              reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    LTE             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    GTE             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    ID              reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    using           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    if              reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    for             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    while           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    println         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    print           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    SHOW            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    sin             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    cos             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    exp             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    log             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    abs             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    sqrt            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    round           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    sign            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    rand            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    zeros           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    parse           reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    string          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    maximum         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    minimum         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    findmax         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    findmin         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    length          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    sort            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    sortrows        reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    sum             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    prod            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    cumsum          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    cumprod         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    mean            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    std             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    median          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    var             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    cov             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    mode            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    PUSH            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    APPEND          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    POP             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    SPLICE          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    $end            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    end             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    else            reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    elseif          reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    AND             reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    OR              reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)
    RPARENT         reduce using rule 107 (array -> LSQUARE numberList SEMMICOLOM numberList RSQUARE .)


state 216

    (91) optionList -> expression COMMA expression TWODOT . expression
    (58) expression -> . term
    (59) expression -> . addingOperator term
    (60) expression -> . expression addingOperator term
    (63) term -> . factor
    (64) term -> . term multiplyingOperator factor
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS
    (81) factor -> . ID
    (82) factor -> . NUMBER
    (83) factor -> . LPARENT optionList RPARENT
    (84) factor -> . FLOAT
    (85) factor -> . ID LSQUARE expression RSQUARE
    (86) factor -> . funcList LPARENT optionList RPARENT
    (87) factor -> . funcVecList LPARENT optionList RPARENT
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              shift and go to state 76
    NUMBER          shift and go to state 77
    LPARENT         shift and go to state 78
    FLOAT           shift and go to state 79
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    expression                     shift and go to state 221
    term                           shift and go to state 66
    addingOperator                 shift and go to state 67
    factor                         shift and go to state 72
    funcList                       shift and go to state 80
    funcVecList                    shift and go to state 81

state 217

    (33) iterable -> ID ASSIGN expression TWODOT expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    ID              reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    using           reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    if              reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    for             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    while           reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    println         reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    print           reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    SHOW            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    sin             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    cos             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    exp             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    log             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    abs             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    sqrt            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    round           reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    sign            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    rand            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    zeros           reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    parse           reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    string          reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    maximum         reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    minimum         reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    findmax         reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    findmin         reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    length          reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    sort            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    sortrows        reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    sum             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    prod            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    cumsum          reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    cumprod         reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    mean            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    std             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    median          reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    var             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    cov             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    mode            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    PUSH            reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    APPEND          reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    POP             reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    SPLICE          reduce using rule 33 (iterable -> ID ASSIGN expression TWODOT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109

state 218

    (12) statement -> if conditionList statementList elseifList else statementList end .

    ID              reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    using           reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    if              reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    for             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    while           reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    println         reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    print           reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    SHOW            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    sin             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    cos             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    exp             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    log             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    abs             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    sqrt            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    round           reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    sign            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    rand            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    zeros           reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    parse           reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    string          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    maximum         reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    minimum         reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    findmax         reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    findmin         reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    length          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    sort            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    sortrows        reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    sum             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    prod            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    cumsum          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    cumprod         reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    mean            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    std             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    median          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    var             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    cov             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    mode            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    PUSH            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    APPEND          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    POP             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    SPLICE          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    $end            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    end             reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    else            reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)
    elseif          reduce using rule 12 (statement -> if conditionList statementList elseifList else statementList end .)


state 219

    (36) elseifList -> elseifList elseif conditionList statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . using libreries
    (7) statement -> . ID ASSIGN stringList
    (8) statement -> . ID ASSIGN boolean
    (9) statement -> . ID ASSIGN array
    (10) statement -> . if conditionList statementList end
    (11) statement -> . if conditionList statementList else statementList end
    (12) statement -> . if conditionList statementList elseifList else statementList end
    (13) statement -> . for iterable statementList end
    (14) statement -> . while conditionList statementList end
    (15) statement -> . printList LPARENT stringList RPARENT
    (16) statement -> . printList LPARENT expression RPARENT
    (17) statement -> . printList LPARENT boolean RPARENT
    (18) statement -> . ID ASSIGN readline LPARENT RPARENT
    (19) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (20) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (21) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (23) statement -> . ID
    (24) statement -> . ID assigList expression
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (26) statement -> . printList LPARENT array RPARENT
    (27) statement -> . funcList LPARENT optionList RPARENT
    (28) statement -> . funcVecList LPARENT optionList RPARENT
    (55) printList -> . println
    (56) printList -> . print
    (57) printList -> . SHOW
    (65) funcList -> . sin
    (66) funcList -> . cos
    (67) funcList -> . exp
    (68) funcList -> . log
    (69) funcList -> . abs
    (70) funcList -> . sqrt
    (71) funcList -> . round
    (72) funcList -> . sign
    (73) funcList -> . rand
    (74) funcList -> . zeros
    (75) funcList -> . parse
    (76) funcList -> . string
    (118) funcVecList -> . maximum
    (119) funcVecList -> . minimum
    (120) funcVecList -> . findmax
    (121) funcVecList -> . findmin
    (122) funcVecList -> . length
    (123) funcVecList -> . sort
    (124) funcVecList -> . sortrows
    (125) funcVecList -> . sum
    (126) funcVecList -> . prod
    (127) funcVecList -> . cumsum
    (128) funcVecList -> . cumprod
    (129) funcVecList -> . mean
    (130) funcVecList -> . std
    (131) funcVecList -> . median
    (132) funcVecList -> . var
    (133) funcVecList -> . cov
    (134) funcVecList -> . mode
    (135) funcVecList -> . PUSH
    (136) funcVecList -> . APPEND
    (137) funcVecList -> . POP
    (138) funcVecList -> . SPLICE

    else            reduce using rule 36 (elseifList -> elseifList elseif conditionList statementList .)
    elseif          reduce using rule 36 (elseifList -> elseifList elseif conditionList statementList .)
    ID              shift and go to state 5
    using           shift and go to state 6
    if              shift and go to state 7
    for             shift and go to state 8
    while           shift and go to state 9
    println         shift and go to state 13
    print           shift and go to state 14
    SHOW            shift and go to state 15
    sin             shift and go to state 16
    cos             shift and go to state 17
    exp             shift and go to state 18
    log             shift and go to state 19
    abs             shift and go to state 20
    sqrt            shift and go to state 21
    round           shift and go to state 22
    sign            shift and go to state 23
    rand            shift and go to state 24
    zeros           shift and go to state 25
    parse           shift and go to state 26
    string          shift and go to state 27
    maximum         shift and go to state 28
    minimum         shift and go to state 29
    findmax         shift and go to state 30
    findmin         shift and go to state 31
    length          shift and go to state 32
    sort            shift and go to state 33
    sortrows        shift and go to state 34
    sum             shift and go to state 35
    prod            shift and go to state 36
    cumsum          shift and go to state 37
    cumprod         shift and go to state 38
    mean            shift and go to state 39
    std             shift and go to state 40
    median          shift and go to state 41
    var             shift and go to state 42
    cov             shift and go to state 43
    mode            shift and go to state 44
    PUSH            shift and go to state 45
    APPEND          shift and go to state 46
    POP             shift and go to state 47
    SPLICE          shift and go to state 48

    statement                      shift and go to state 49
    printList                      shift and go to state 10
    funcList                       shift and go to state 11
    funcVecList                    shift and go to state 12

state 220

    (115) arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE .

    RSQUARE         reduce using rule 115 (arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE .)
    COMMA           reduce using rule 115 (arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE .)


state 221

    (91) optionList -> expression COMMA expression TWODOT expression .
    (60) expression -> expression . addingOperator term
    (61) addingOperator -> . PLUS
    (62) addingOperator -> . MINUS

    RPARENT         reduce using rule 91 (optionList -> expression COMMA expression TWODOT expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    addingOperator                 shift and go to state 109
