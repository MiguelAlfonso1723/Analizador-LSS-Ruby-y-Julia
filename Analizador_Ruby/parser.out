Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> block
Rule 2     block -> statementList
Rule 3     statementList -> statement
Rule 4     statementList -> statementList statement
Rule 5     statement -> ID ASSIGN expression
Rule 6     statement -> ID ASSIGN stringList
Rule 7     statement -> ID ASSIGN boolean
Rule 8     statement -> ID ASSIGN array
Rule 9     statement -> if conditionList statementList end
Rule 10    statement -> if conditionList statementList else statementList end
Rule 11    statement -> if conditionList statementList elseifList else statementList end
Rule 12    statement -> case comparables whenList else statementList end
Rule 13    statement -> unless conditionList statementList else statementList end
Rule 14    statement -> expression CICLE1 iterable statementList end
Rule 15    statement -> expression CICLE2 iterable statementList end
Rule 16    statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end
Rule 17    statement -> while conditionList statementList end
Rule 18    statement -> printList stringList
Rule 19    statement -> printList expression
Rule 20    statement -> printList boolean
Rule 21    statement -> ID ASSIGN KeyEntry
Rule 22    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression
Rule 23    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
Rule 24    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
Rule 25    statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array
Rule 26    statement -> ID
Rule 27    statement -> ID assigList expression
Rule 28    statement -> ID LSQUARE arrayIdList RSQUARE assigList expression
Rule 29    statement -> printList array
Rule 30    statement -> require TEXT2
Rule 31    KeyEntry -> KEYB1
Rule 32    KeyEntry -> KEYB1 TOINT
Rule 33    KeyEntry -> KEYB1 TOFLO
Rule 34    arrayIdList -> expression COMMA expression
Rule 35    arrayIdList -> expression
Rule 36    iterable -> do
Rule 37    iterable -> do BARR ID BARR
Rule 38    elseifList -> elsif conditionList statementList
Rule 39    elseifList -> elseifList elsif conditionList statementList
Rule 40    whenList -> when comparables statementList
Rule 41    whenList -> whenList when comparables statementList
Rule 42    conditionList -> condition
Rule 43    conditionList -> conditionList logicRelation condition
Rule 44    condition -> comparables relation comparables
Rule 45    condition -> NOT comparables
Rule 46    condition -> not comparables
Rule 47    condition -> comparables
Rule 48    comparables -> expression
Rule 49    comparables -> stringList
Rule 50    comparables -> boolean
Rule 51    comparables -> array
Rule 52    relation -> EQUAL
Rule 53    relation -> NE
Rule 54    relation -> LT
Rule 55    relation -> GT
Rule 56    relation -> LTE
Rule 57    relation -> GTE
Rule 58    logicRelation -> AND
Rule 59    logicRelation -> OR
Rule 60    logicRelation -> and
Rule 61    logicRelation -> or
Rule 62    assigList -> ASSIGPLUS
Rule 63    assigList -> ASSIGMINUS
Rule 64    printList -> puts
Rule 65    printList -> print
Rule 66    expression -> term
Rule 67    expression -> addingOperator term
Rule 68    expression -> expression addingOperator term
Rule 69    addingOperator -> PLUS
Rule 70    addingOperator -> MINUS
Rule 71    term -> factor
Rule 72    term -> term multiplyingOperator factor
Rule 73    funcList -> TOINT
Rule 74    funcList -> TOSTR
Rule 75    funcList -> TOFLO
Rule 76    multiplyingOperator -> TIMES
Rule 77    multiplyingOperator -> DIVIDE
Rule 78    multiplyingOperator -> EXPO
Rule 79    multiplyingOperator -> MOD
Rule 80    factor -> ID
Rule 81    factor -> NUMBER
Rule 82    factor -> LPARENT optionList RPARENT
Rule 83    factor -> FLOAT
Rule 84    factor -> ID LSQUARE expression RSQUARE
Rule 85    factor -> optionList funcList
Rule 86    factor -> optionList funcVecList
Rule 87    factor -> String funcList
Rule 88    optionList -> expression
Rule 89    optionList -> array
Rule 90    optionList -> String
Rule 91    stringList -> String
Rule 92    stringList -> stringList PLUS expression
Rule 93    stringList -> stringList PLUS String
Rule 94    stringList -> stringList PLUS boolean
Rule 95    stringList -> stringList PLUS array
Rule 96    stringList -> boolean PLUS String
Rule 97    stringList -> expression PLUS String
Rule 98    stringList -> array PLUS String
Rule 99    String -> textList
Rule 100   String -> String PLUS textList
Rule 101   String -> String PLUS ID
Rule 102   textList -> TEXT
Rule 103   textList -> TEXT2
Rule 104   boolean -> true
Rule 105   boolean -> false
Rule 106   array -> LSQUARE arrayList RSQUARE
Rule 107   arrayList -> expression
Rule 108   arrayList -> String
Rule 109   arrayList -> boolean
Rule 110   arrayList -> LSQUARE arrayList RSQUARE
Rule 111   arrayList -> arrayList COMMA expression
Rule 112   arrayList -> arrayList COMMA String
Rule 113   arrayList -> arrayList COMMA boolean
Rule 114   arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE
Rule 115   funcVecList -> LENGTH
Rule 116   funcVecList -> MEAN
Rule 117   funcVecList -> STANDAR
Rule 118   funcVecList -> MEDIAN
Rule 119   funcVecList -> VARIANCE
Rule 120   funcVecList -> SUM

Terminals, with rules where they appear

AND                  : 58
ASSIGMINUS           : 63
ASSIGN               : 5 6 7 8 21 22 23 24 25
ASSIGPLUS            : 62
BARR                 : 16 16 37 37
CICLE1               : 14
CICLE2               : 15
CICLE3               : 16
COMMA                : 16 34 111 112 113 114
DIVIDE               : 77
EQUAL                : 52
EXPO                 : 78
FLOAT                : 83
GT                   : 55
GTE                  : 57
ID                   : 5 6 7 8 16 16 21 22 23 24 25 26 27 28 37 80 84 101
KEYB1                : 31 32 33
LENGTH               : 115
LPARENT              : 82
LSQUARE              : 22 23 24 25 28 84 106 110 114
LT                   : 54
LTE                  : 56
MEAN                 : 116
MEDIAN               : 118
MINUS                : 70
MOD                  : 79
NE                   : 53
NOT                  : 45
NUMBER               : 81
OR                   : 59
PLUS                 : 69 92 93 94 95 96 97 98 100 101
RPARENT              : 82
RSQUARE              : 22 23 24 25 28 84 106 110 114
STANDAR              : 117
SUM                  : 120
TEXT                 : 102
TEXT2                : 30 103
TIMES                : 76
TOFLO                : 33 75
TOINT                : 32 73
TOSTR                : 74
VARIANCE             : 119
and                  : 60
case                 : 12
do                   : 16 36 37
else                 : 10 11 12 13
elsif                : 38 39
end                  : 9 10 11 12 13 14 15 16 17
error                : 
false                : 105
if                   : 9 10 11
not                  : 46
or                   : 61
print                : 65
puts                 : 64
require              : 30
true                 : 104
unless               : 13
when                 : 40 41
while                : 17

Nonterminals, with rules where they appear

KeyEntry             : 21
String               : 87 90 91 93 96 97 98 100 101 108 112
addingOperator       : 67 68
array                : 8 25 29 51 89 95 98
arrayIdList          : 22 23 24 25 28
arrayList            : 106 110 111 112 113 114 114
assigList            : 27 28
block                : 1
boolean              : 7 20 24 50 94 96 109 113
comparables          : 12 40 41 44 44 45 46 47
condition            : 42 43
conditionList        : 9 10 11 13 17 38 39 43
elseifList           : 11 39
expression           : 5 14 15 16 19 22 27 28 34 34 35 48 68 84 88 92 97 107 111
factor               : 71 72
funcList             : 85 87
funcVecList          : 86
iterable             : 14 15
logicRelation        : 43
multiplyingOperator  : 72
optionList           : 82 85 86
printList            : 18 19 20 29
program              : 0
relation             : 44
statement            : 3 4
statementList        : 2 4 9 10 10 11 11 12 13 13 14 15 16 17 38 39 40 41
stringList           : 6 18 23 49 92 93 94 95
term                 : 66 67 68 72
textList             : 99 100
whenList             : 12 41

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . block
    (2) block -> . statementList
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    program                        shift and go to state 1
    block                          shift and go to state 2
    statementList                  shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 1

    (0) S' -> program .



state 2

    (1) program -> block .

    $end            reduce using rule 1 (program -> block .)


state 3

    (2) block -> statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    $end            reduce using rule 2 (block -> statementList .)
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 4

    (3) statementList -> statement .

    ID              reduce using rule 3 (statementList -> statement .)
    if              reduce using rule 3 (statementList -> statement .)
    case            reduce using rule 3 (statementList -> statement .)
    unless          reduce using rule 3 (statementList -> statement .)
    while           reduce using rule 3 (statementList -> statement .)
    require         reduce using rule 3 (statementList -> statement .)
    puts            reduce using rule 3 (statementList -> statement .)
    print           reduce using rule 3 (statementList -> statement .)
    PLUS            reduce using rule 3 (statementList -> statement .)
    MINUS           reduce using rule 3 (statementList -> statement .)
    NUMBER          reduce using rule 3 (statementList -> statement .)
    LPARENT         reduce using rule 3 (statementList -> statement .)
    FLOAT           reduce using rule 3 (statementList -> statement .)
    LSQUARE         reduce using rule 3 (statementList -> statement .)
    TEXT            reduce using rule 3 (statementList -> statement .)
    TEXT2           reduce using rule 3 (statementList -> statement .)
    $end            reduce using rule 3 (statementList -> statement .)
    end             reduce using rule 3 (statementList -> statement .)
    else            reduce using rule 3 (statementList -> statement .)
    elsif           reduce using rule 3 (statementList -> statement .)
    when            reduce using rule 3 (statementList -> statement .)


state 5

    (5) statement -> ID . ASSIGN expression
    (6) statement -> ID . ASSIGN stringList
    (7) statement -> ID . ASSIGN boolean
    (8) statement -> ID . ASSIGN array
    (21) statement -> ID . ASSIGN KeyEntry
    (22) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> ID . LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> ID .
    (27) statement -> ID . assigList expression
    (28) statement -> ID . LSQUARE arrayIdList RSQUARE assigList expression
    (80) factor -> ID .
    (84) factor -> ID . LSQUARE expression RSQUARE
    (62) assigList -> . ASSIGPLUS
    (63) assigList -> . ASSIGMINUS

  ! shift/reduce conflict for LSQUARE resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 26 (statement -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 26 (statement -> ID .)
    ASSIGN          shift and go to state 31
    LSQUARE         shift and go to state 32
    ID              reduce using rule 26 (statement -> ID .)
    if              reduce using rule 26 (statement -> ID .)
    case            reduce using rule 26 (statement -> ID .)
    unless          reduce using rule 26 (statement -> ID .)
    while           reduce using rule 26 (statement -> ID .)
    require         reduce using rule 26 (statement -> ID .)
    puts            reduce using rule 26 (statement -> ID .)
    print           reduce using rule 26 (statement -> ID .)
    PLUS            reduce using rule 26 (statement -> ID .)
    MINUS           reduce using rule 26 (statement -> ID .)
    NUMBER          reduce using rule 26 (statement -> ID .)
    LPARENT         reduce using rule 26 (statement -> ID .)
    FLOAT           reduce using rule 26 (statement -> ID .)
    TEXT            reduce using rule 26 (statement -> ID .)
    TEXT2           reduce using rule 26 (statement -> ID .)
    $end            reduce using rule 26 (statement -> ID .)
    end             reduce using rule 26 (statement -> ID .)
    else            reduce using rule 26 (statement -> ID .)
    elsif           reduce using rule 26 (statement -> ID .)
    when            reduce using rule 26 (statement -> ID .)
    TIMES           reduce using rule 80 (factor -> ID .)
    DIVIDE          reduce using rule 80 (factor -> ID .)
    EXPO            reduce using rule 80 (factor -> ID .)
    MOD             reduce using rule 80 (factor -> ID .)
    CICLE1          reduce using rule 80 (factor -> ID .)
    CICLE2          reduce using rule 80 (factor -> ID .)
    CICLE3          reduce using rule 80 (factor -> ID .)
    TOINT           reduce using rule 80 (factor -> ID .)
    TOSTR           reduce using rule 80 (factor -> ID .)
    TOFLO           reduce using rule 80 (factor -> ID .)
    LENGTH          reduce using rule 80 (factor -> ID .)
    MEAN            reduce using rule 80 (factor -> ID .)
    STANDAR         reduce using rule 80 (factor -> ID .)
    MEDIAN          reduce using rule 80 (factor -> ID .)
    VARIANCE        reduce using rule 80 (factor -> ID .)
    SUM             reduce using rule 80 (factor -> ID .)
    ASSIGPLUS       shift and go to state 34
    ASSIGMINUS      shift and go to state 35

  ! LSQUARE         [ reduce using rule 26 (statement -> ID .) ]
  ! PLUS            [ reduce using rule 80 (factor -> ID .) ]
  ! MINUS           [ reduce using rule 80 (factor -> ID .) ]

    assigList                      shift and go to state 33

state 6

    (14) statement -> expression . CICLE1 iterable statementList end
    (15) statement -> expression . CICLE2 iterable statementList end
    (16) statement -> expression . CICLE3 do BARR ID COMMA ID BARR statementList end
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    CICLE1          shift and go to state 36
    CICLE2          shift and go to state 37
    CICLE3          shift and go to state 38
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 39

state 7

    (89) optionList -> array .

    TOINT           reduce using rule 89 (optionList -> array .)
    TOSTR           reduce using rule 89 (optionList -> array .)
    TOFLO           reduce using rule 89 (optionList -> array .)
    LENGTH          reduce using rule 89 (optionList -> array .)
    MEAN            reduce using rule 89 (optionList -> array .)
    STANDAR         reduce using rule 89 (optionList -> array .)
    MEDIAN          reduce using rule 89 (optionList -> array .)
    VARIANCE        reduce using rule 89 (optionList -> array .)
    SUM             reduce using rule 89 (optionList -> array .)
    RPARENT         reduce using rule 89 (optionList -> array .)


state 8

    (9) statement -> if . conditionList statementList end
    (10) statement -> if . conditionList statementList else statementList end
    (11) statement -> if . conditionList statementList elseifList else statementList end
    (42) conditionList -> . condition
    (43) conditionList -> . conditionList logicRelation condition
    (44) condition -> . comparables relation comparables
    (45) condition -> . NOT comparables
    (46) condition -> . not comparables
    (47) condition -> . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    NOT             shift and go to state 43
    not             shift and go to state 44
    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    conditionList                  shift and go to state 40
    condition                      shift and go to state 41
    comparables                    shift and go to state 42
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 9

    (12) statement -> case . comparables whenList else statementList end
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    comparables                    shift and go to state 53
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 10

    (13) statement -> unless . conditionList statementList else statementList end
    (42) conditionList -> . condition
    (43) conditionList -> . conditionList logicRelation condition
    (44) condition -> . comparables relation comparables
    (45) condition -> . NOT comparables
    (46) condition -> . not comparables
    (47) condition -> . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    NOT             shift and go to state 43
    not             shift and go to state 44
    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    conditionList                  shift and go to state 54
    condition                      shift and go to state 41
    comparables                    shift and go to state 42
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 11

    (17) statement -> while . conditionList statementList end
    (42) conditionList -> . condition
    (43) conditionList -> . conditionList logicRelation condition
    (44) condition -> . comparables relation comparables
    (45) condition -> . NOT comparables
    (46) condition -> . not comparables
    (47) condition -> . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    NOT             shift and go to state 43
    not             shift and go to state 44
    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    conditionList                  shift and go to state 55
    condition                      shift and go to state 41
    comparables                    shift and go to state 42
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 12

    (18) statement -> printList . stringList
    (19) statement -> printList . expression
    (20) statement -> printList . boolean
    (29) statement -> printList . array
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    stringList                     shift and go to state 56
    expression                     shift and go to state 57
    boolean                        shift and go to state 58
    array                          shift and go to state 59
    String                         shift and go to state 49
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20
    optionList                     shift and go to state 25

state 13

    (106) array -> LSQUARE . arrayList RSQUARE
    (107) arrayList -> . expression
    (108) arrayList -> . String
    (109) arrayList -> . boolean
    (110) arrayList -> . LSQUARE arrayList RSQUARE
    (111) arrayList -> . arrayList COMMA expression
    (112) arrayList -> . arrayList COMMA String
    (113) arrayList -> . arrayList COMMA boolean
    (114) arrayList -> . arrayList COMMA LSQUARE arrayList RSQUARE
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (104) boolean -> . true
    (105) boolean -> . false
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (106) array -> . LSQUARE arrayList RSQUARE

    LSQUARE         shift and go to state 60
    true            shift and go to state 50
    false           shift and go to state 51
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    arrayList                      shift and go to state 61
    expression                     shift and go to state 62
    String                         shift and go to state 63
    boolean                        shift and go to state 64
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    array                          shift and go to state 7

state 14

    (30) statement -> require . TEXT2

    TEXT2           shift and go to state 65


state 15

    (103) textList -> TEXT2 .

    PLUS            reduce using rule 103 (textList -> TEXT2 .)
    TOINT           reduce using rule 103 (textList -> TEXT2 .)
    TOSTR           reduce using rule 103 (textList -> TEXT2 .)
    TOFLO           reduce using rule 103 (textList -> TEXT2 .)
    LENGTH          reduce using rule 103 (textList -> TEXT2 .)
    MEAN            reduce using rule 103 (textList -> TEXT2 .)
    STANDAR         reduce using rule 103 (textList -> TEXT2 .)
    MEDIAN          reduce using rule 103 (textList -> TEXT2 .)
    VARIANCE        reduce using rule 103 (textList -> TEXT2 .)
    SUM             reduce using rule 103 (textList -> TEXT2 .)
    EQUAL           reduce using rule 103 (textList -> TEXT2 .)
    NE              reduce using rule 103 (textList -> TEXT2 .)
    LT              reduce using rule 103 (textList -> TEXT2 .)
    GT              reduce using rule 103 (textList -> TEXT2 .)
    LTE             reduce using rule 103 (textList -> TEXT2 .)
    GTE             reduce using rule 103 (textList -> TEXT2 .)
    AND             reduce using rule 103 (textList -> TEXT2 .)
    OR              reduce using rule 103 (textList -> TEXT2 .)
    and             reduce using rule 103 (textList -> TEXT2 .)
    or              reduce using rule 103 (textList -> TEXT2 .)
    ID              reduce using rule 103 (textList -> TEXT2 .)
    if              reduce using rule 103 (textList -> TEXT2 .)
    case            reduce using rule 103 (textList -> TEXT2 .)
    unless          reduce using rule 103 (textList -> TEXT2 .)
    while           reduce using rule 103 (textList -> TEXT2 .)
    require         reduce using rule 103 (textList -> TEXT2 .)
    puts            reduce using rule 103 (textList -> TEXT2 .)
    print           reduce using rule 103 (textList -> TEXT2 .)
    MINUS           reduce using rule 103 (textList -> TEXT2 .)
    NUMBER          reduce using rule 103 (textList -> TEXT2 .)
    LPARENT         reduce using rule 103 (textList -> TEXT2 .)
    FLOAT           reduce using rule 103 (textList -> TEXT2 .)
    LSQUARE         reduce using rule 103 (textList -> TEXT2 .)
    TEXT            reduce using rule 103 (textList -> TEXT2 .)
    TEXT2           reduce using rule 103 (textList -> TEXT2 .)
    when            reduce using rule 103 (textList -> TEXT2 .)
    $end            reduce using rule 103 (textList -> TEXT2 .)
    end             reduce using rule 103 (textList -> TEXT2 .)
    else            reduce using rule 103 (textList -> TEXT2 .)
    elsif           reduce using rule 103 (textList -> TEXT2 .)
    RSQUARE         reduce using rule 103 (textList -> TEXT2 .)
    COMMA           reduce using rule 103 (textList -> TEXT2 .)
    RPARENT         reduce using rule 103 (textList -> TEXT2 .)


state 16

    (66) expression -> term .
    (72) term -> term . multiplyingOperator factor
    (76) multiplyingOperator -> . TIMES
    (77) multiplyingOperator -> . DIVIDE
    (78) multiplyingOperator -> . EXPO
    (79) multiplyingOperator -> . MOD

    CICLE1          reduce using rule 66 (expression -> term .)
    CICLE2          reduce using rule 66 (expression -> term .)
    CICLE3          reduce using rule 66 (expression -> term .)
    PLUS            reduce using rule 66 (expression -> term .)
    MINUS           reduce using rule 66 (expression -> term .)
    TOINT           reduce using rule 66 (expression -> term .)
    TOSTR           reduce using rule 66 (expression -> term .)
    TOFLO           reduce using rule 66 (expression -> term .)
    LENGTH          reduce using rule 66 (expression -> term .)
    MEAN            reduce using rule 66 (expression -> term .)
    STANDAR         reduce using rule 66 (expression -> term .)
    MEDIAN          reduce using rule 66 (expression -> term .)
    VARIANCE        reduce using rule 66 (expression -> term .)
    SUM             reduce using rule 66 (expression -> term .)
    EQUAL           reduce using rule 66 (expression -> term .)
    NE              reduce using rule 66 (expression -> term .)
    LT              reduce using rule 66 (expression -> term .)
    GT              reduce using rule 66 (expression -> term .)
    LTE             reduce using rule 66 (expression -> term .)
    GTE             reduce using rule 66 (expression -> term .)
    AND             reduce using rule 66 (expression -> term .)
    OR              reduce using rule 66 (expression -> term .)
    and             reduce using rule 66 (expression -> term .)
    or              reduce using rule 66 (expression -> term .)
    ID              reduce using rule 66 (expression -> term .)
    if              reduce using rule 66 (expression -> term .)
    case            reduce using rule 66 (expression -> term .)
    unless          reduce using rule 66 (expression -> term .)
    while           reduce using rule 66 (expression -> term .)
    require         reduce using rule 66 (expression -> term .)
    puts            reduce using rule 66 (expression -> term .)
    print           reduce using rule 66 (expression -> term .)
    NUMBER          reduce using rule 66 (expression -> term .)
    LPARENT         reduce using rule 66 (expression -> term .)
    FLOAT           reduce using rule 66 (expression -> term .)
    LSQUARE         reduce using rule 66 (expression -> term .)
    TEXT            reduce using rule 66 (expression -> term .)
    TEXT2           reduce using rule 66 (expression -> term .)
    when            reduce using rule 66 (expression -> term .)
    $end            reduce using rule 66 (expression -> term .)
    end             reduce using rule 66 (expression -> term .)
    else            reduce using rule 66 (expression -> term .)
    elsif           reduce using rule 66 (expression -> term .)
    RSQUARE         reduce using rule 66 (expression -> term .)
    COMMA           reduce using rule 66 (expression -> term .)
    RPARENT         reduce using rule 66 (expression -> term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    EXPO            shift and go to state 69
    MOD             shift and go to state 70

    multiplyingOperator            shift and go to state 66

state 17

    (67) expression -> addingOperator . term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 17
    term                           shift and go to state 71
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    expression                     shift and go to state 72
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28

state 18

    (64) printList -> puts .

    true            reduce using rule 64 (printList -> puts .)
    false           reduce using rule 64 (printList -> puts .)
    LSQUARE         reduce using rule 64 (printList -> puts .)
    PLUS            reduce using rule 64 (printList -> puts .)
    MINUS           reduce using rule 64 (printList -> puts .)
    TEXT            reduce using rule 64 (printList -> puts .)
    TEXT2           reduce using rule 64 (printList -> puts .)
    ID              reduce using rule 64 (printList -> puts .)
    NUMBER          reduce using rule 64 (printList -> puts .)
    LPARENT         reduce using rule 64 (printList -> puts .)
    FLOAT           reduce using rule 64 (printList -> puts .)


state 19

    (65) printList -> print .

    true            reduce using rule 65 (printList -> print .)
    false           reduce using rule 65 (printList -> print .)
    LSQUARE         reduce using rule 65 (printList -> print .)
    PLUS            reduce using rule 65 (printList -> print .)
    MINUS           reduce using rule 65 (printList -> print .)
    TEXT            reduce using rule 65 (printList -> print .)
    TEXT2           reduce using rule 65 (printList -> print .)
    ID              reduce using rule 65 (printList -> print .)
    NUMBER          reduce using rule 65 (printList -> print .)
    LPARENT         reduce using rule 65 (printList -> print .)
    FLOAT           reduce using rule 65 (printList -> print .)


state 20

    (71) term -> factor .

    TIMES           reduce using rule 71 (term -> factor .)
    DIVIDE          reduce using rule 71 (term -> factor .)
    EXPO            reduce using rule 71 (term -> factor .)
    MOD             reduce using rule 71 (term -> factor .)
    CICLE1          reduce using rule 71 (term -> factor .)
    CICLE2          reduce using rule 71 (term -> factor .)
    CICLE3          reduce using rule 71 (term -> factor .)
    PLUS            reduce using rule 71 (term -> factor .)
    MINUS           reduce using rule 71 (term -> factor .)
    TOINT           reduce using rule 71 (term -> factor .)
    TOSTR           reduce using rule 71 (term -> factor .)
    TOFLO           reduce using rule 71 (term -> factor .)
    LENGTH          reduce using rule 71 (term -> factor .)
    MEAN            reduce using rule 71 (term -> factor .)
    STANDAR         reduce using rule 71 (term -> factor .)
    MEDIAN          reduce using rule 71 (term -> factor .)
    VARIANCE        reduce using rule 71 (term -> factor .)
    SUM             reduce using rule 71 (term -> factor .)
    EQUAL           reduce using rule 71 (term -> factor .)
    NE              reduce using rule 71 (term -> factor .)
    LT              reduce using rule 71 (term -> factor .)
    GT              reduce using rule 71 (term -> factor .)
    LTE             reduce using rule 71 (term -> factor .)
    GTE             reduce using rule 71 (term -> factor .)
    AND             reduce using rule 71 (term -> factor .)
    OR              reduce using rule 71 (term -> factor .)
    and             reduce using rule 71 (term -> factor .)
    or              reduce using rule 71 (term -> factor .)
    ID              reduce using rule 71 (term -> factor .)
    if              reduce using rule 71 (term -> factor .)
    case            reduce using rule 71 (term -> factor .)
    unless          reduce using rule 71 (term -> factor .)
    while           reduce using rule 71 (term -> factor .)
    require         reduce using rule 71 (term -> factor .)
    puts            reduce using rule 71 (term -> factor .)
    print           reduce using rule 71 (term -> factor .)
    NUMBER          reduce using rule 71 (term -> factor .)
    LPARENT         reduce using rule 71 (term -> factor .)
    FLOAT           reduce using rule 71 (term -> factor .)
    LSQUARE         reduce using rule 71 (term -> factor .)
    TEXT            reduce using rule 71 (term -> factor .)
    TEXT2           reduce using rule 71 (term -> factor .)
    when            reduce using rule 71 (term -> factor .)
    $end            reduce using rule 71 (term -> factor .)
    end             reduce using rule 71 (term -> factor .)
    else            reduce using rule 71 (term -> factor .)
    elsif           reduce using rule 71 (term -> factor .)
    RSQUARE         reduce using rule 71 (term -> factor .)
    COMMA           reduce using rule 71 (term -> factor .)
    RPARENT         reduce using rule 71 (term -> factor .)


state 21

    (69) addingOperator -> PLUS .

    ID              reduce using rule 69 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 69 (addingOperator -> PLUS .)
    LPARENT         reduce using rule 69 (addingOperator -> PLUS .)
    FLOAT           reduce using rule 69 (addingOperator -> PLUS .)
    LSQUARE         reduce using rule 69 (addingOperator -> PLUS .)
    TEXT            reduce using rule 69 (addingOperator -> PLUS .)
    TEXT2           reduce using rule 69 (addingOperator -> PLUS .)
    PLUS            reduce using rule 69 (addingOperator -> PLUS .)
    MINUS           reduce using rule 69 (addingOperator -> PLUS .)


state 22

    (70) addingOperator -> MINUS .

    ID              reduce using rule 70 (addingOperator -> MINUS .)
    NUMBER          reduce using rule 70 (addingOperator -> MINUS .)
    LPARENT         reduce using rule 70 (addingOperator -> MINUS .)
    FLOAT           reduce using rule 70 (addingOperator -> MINUS .)
    LSQUARE         reduce using rule 70 (addingOperator -> MINUS .)
    TEXT            reduce using rule 70 (addingOperator -> MINUS .)
    TEXT2           reduce using rule 70 (addingOperator -> MINUS .)
    PLUS            reduce using rule 70 (addingOperator -> MINUS .)
    MINUS           reduce using rule 70 (addingOperator -> MINUS .)


state 23

    (81) factor -> NUMBER .

    TIMES           reduce using rule 81 (factor -> NUMBER .)
    DIVIDE          reduce using rule 81 (factor -> NUMBER .)
    EXPO            reduce using rule 81 (factor -> NUMBER .)
    MOD             reduce using rule 81 (factor -> NUMBER .)
    CICLE1          reduce using rule 81 (factor -> NUMBER .)
    CICLE2          reduce using rule 81 (factor -> NUMBER .)
    CICLE3          reduce using rule 81 (factor -> NUMBER .)
    PLUS            reduce using rule 81 (factor -> NUMBER .)
    MINUS           reduce using rule 81 (factor -> NUMBER .)
    TOINT           reduce using rule 81 (factor -> NUMBER .)
    TOSTR           reduce using rule 81 (factor -> NUMBER .)
    TOFLO           reduce using rule 81 (factor -> NUMBER .)
    LENGTH          reduce using rule 81 (factor -> NUMBER .)
    MEAN            reduce using rule 81 (factor -> NUMBER .)
    STANDAR         reduce using rule 81 (factor -> NUMBER .)
    MEDIAN          reduce using rule 81 (factor -> NUMBER .)
    VARIANCE        reduce using rule 81 (factor -> NUMBER .)
    SUM             reduce using rule 81 (factor -> NUMBER .)
    EQUAL           reduce using rule 81 (factor -> NUMBER .)
    NE              reduce using rule 81 (factor -> NUMBER .)
    LT              reduce using rule 81 (factor -> NUMBER .)
    GT              reduce using rule 81 (factor -> NUMBER .)
    LTE             reduce using rule 81 (factor -> NUMBER .)
    GTE             reduce using rule 81 (factor -> NUMBER .)
    AND             reduce using rule 81 (factor -> NUMBER .)
    OR              reduce using rule 81 (factor -> NUMBER .)
    and             reduce using rule 81 (factor -> NUMBER .)
    or              reduce using rule 81 (factor -> NUMBER .)
    ID              reduce using rule 81 (factor -> NUMBER .)
    if              reduce using rule 81 (factor -> NUMBER .)
    case            reduce using rule 81 (factor -> NUMBER .)
    unless          reduce using rule 81 (factor -> NUMBER .)
    while           reduce using rule 81 (factor -> NUMBER .)
    require         reduce using rule 81 (factor -> NUMBER .)
    puts            reduce using rule 81 (factor -> NUMBER .)
    print           reduce using rule 81 (factor -> NUMBER .)
    NUMBER          reduce using rule 81 (factor -> NUMBER .)
    LPARENT         reduce using rule 81 (factor -> NUMBER .)
    FLOAT           reduce using rule 81 (factor -> NUMBER .)
    LSQUARE         reduce using rule 81 (factor -> NUMBER .)
    TEXT            reduce using rule 81 (factor -> NUMBER .)
    TEXT2           reduce using rule 81 (factor -> NUMBER .)
    when            reduce using rule 81 (factor -> NUMBER .)
    $end            reduce using rule 81 (factor -> NUMBER .)
    end             reduce using rule 81 (factor -> NUMBER .)
    else            reduce using rule 81 (factor -> NUMBER .)
    elsif           reduce using rule 81 (factor -> NUMBER .)
    RSQUARE         reduce using rule 81 (factor -> NUMBER .)
    COMMA           reduce using rule 81 (factor -> NUMBER .)
    RPARENT         reduce using rule 81 (factor -> NUMBER .)


state 24

    (82) factor -> LPARENT . optionList RPARENT
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList

    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    optionList                     shift and go to state 73
    expression                     shift and go to state 72
    array                          shift and go to state 7
    String                         shift and go to state 74
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20

state 25

    (85) factor -> optionList . funcList
    (86) factor -> optionList . funcVecList
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO
    (115) funcVecList -> . LENGTH
    (116) funcVecList -> . MEAN
    (117) funcVecList -> . STANDAR
    (118) funcVecList -> . MEDIAN
    (119) funcVecList -> . VARIANCE
    (120) funcVecList -> . SUM

    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79
    LENGTH          shift and go to state 80
    MEAN            shift and go to state 81
    STANDAR         shift and go to state 82
    MEDIAN          shift and go to state 83
    VARIANCE        shift and go to state 84
    SUM             shift and go to state 85

    funcList                       shift and go to state 75
    funcVecList                    shift and go to state 76

state 26

    (83) factor -> FLOAT .

    TIMES           reduce using rule 83 (factor -> FLOAT .)
    DIVIDE          reduce using rule 83 (factor -> FLOAT .)
    EXPO            reduce using rule 83 (factor -> FLOAT .)
    MOD             reduce using rule 83 (factor -> FLOAT .)
    CICLE1          reduce using rule 83 (factor -> FLOAT .)
    CICLE2          reduce using rule 83 (factor -> FLOAT .)
    CICLE3          reduce using rule 83 (factor -> FLOAT .)
    PLUS            reduce using rule 83 (factor -> FLOAT .)
    MINUS           reduce using rule 83 (factor -> FLOAT .)
    TOINT           reduce using rule 83 (factor -> FLOAT .)
    TOSTR           reduce using rule 83 (factor -> FLOAT .)
    TOFLO           reduce using rule 83 (factor -> FLOAT .)
    LENGTH          reduce using rule 83 (factor -> FLOAT .)
    MEAN            reduce using rule 83 (factor -> FLOAT .)
    STANDAR         reduce using rule 83 (factor -> FLOAT .)
    MEDIAN          reduce using rule 83 (factor -> FLOAT .)
    VARIANCE        reduce using rule 83 (factor -> FLOAT .)
    SUM             reduce using rule 83 (factor -> FLOAT .)
    EQUAL           reduce using rule 83 (factor -> FLOAT .)
    NE              reduce using rule 83 (factor -> FLOAT .)
    LT              reduce using rule 83 (factor -> FLOAT .)
    GT              reduce using rule 83 (factor -> FLOAT .)
    LTE             reduce using rule 83 (factor -> FLOAT .)
    GTE             reduce using rule 83 (factor -> FLOAT .)
    AND             reduce using rule 83 (factor -> FLOAT .)
    OR              reduce using rule 83 (factor -> FLOAT .)
    and             reduce using rule 83 (factor -> FLOAT .)
    or              reduce using rule 83 (factor -> FLOAT .)
    ID              reduce using rule 83 (factor -> FLOAT .)
    if              reduce using rule 83 (factor -> FLOAT .)
    case            reduce using rule 83 (factor -> FLOAT .)
    unless          reduce using rule 83 (factor -> FLOAT .)
    while           reduce using rule 83 (factor -> FLOAT .)
    require         reduce using rule 83 (factor -> FLOAT .)
    puts            reduce using rule 83 (factor -> FLOAT .)
    print           reduce using rule 83 (factor -> FLOAT .)
    NUMBER          reduce using rule 83 (factor -> FLOAT .)
    LPARENT         reduce using rule 83 (factor -> FLOAT .)
    FLOAT           reduce using rule 83 (factor -> FLOAT .)
    LSQUARE         reduce using rule 83 (factor -> FLOAT .)
    TEXT            reduce using rule 83 (factor -> FLOAT .)
    TEXT2           reduce using rule 83 (factor -> FLOAT .)
    when            reduce using rule 83 (factor -> FLOAT .)
    $end            reduce using rule 83 (factor -> FLOAT .)
    end             reduce using rule 83 (factor -> FLOAT .)
    else            reduce using rule 83 (factor -> FLOAT .)
    elsif           reduce using rule 83 (factor -> FLOAT .)
    RSQUARE         reduce using rule 83 (factor -> FLOAT .)
    COMMA           reduce using rule 83 (factor -> FLOAT .)
    RPARENT         reduce using rule 83 (factor -> FLOAT .)


state 27

    (87) factor -> String . funcList
    (90) optionList -> String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO

  ! shift/reduce conflict for TOINT resolved as shift
  ! shift/reduce conflict for TOSTR resolved as shift
  ! shift/reduce conflict for TOFLO resolved as shift
    LENGTH          reduce using rule 90 (optionList -> String .)
    MEAN            reduce using rule 90 (optionList -> String .)
    STANDAR         reduce using rule 90 (optionList -> String .)
    MEDIAN          reduce using rule 90 (optionList -> String .)
    VARIANCE        reduce using rule 90 (optionList -> String .)
    SUM             reduce using rule 90 (optionList -> String .)
    PLUS            shift and go to state 87
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79

  ! TOINT           [ reduce using rule 90 (optionList -> String .) ]
  ! TOSTR           [ reduce using rule 90 (optionList -> String .) ]
  ! TOFLO           [ reduce using rule 90 (optionList -> String .) ]

    funcList                       shift and go to state 86

state 28

    (99) String -> textList .

    PLUS            reduce using rule 99 (String -> textList .)
    TOINT           reduce using rule 99 (String -> textList .)
    TOSTR           reduce using rule 99 (String -> textList .)
    TOFLO           reduce using rule 99 (String -> textList .)
    LENGTH          reduce using rule 99 (String -> textList .)
    MEAN            reduce using rule 99 (String -> textList .)
    STANDAR         reduce using rule 99 (String -> textList .)
    MEDIAN          reduce using rule 99 (String -> textList .)
    VARIANCE        reduce using rule 99 (String -> textList .)
    SUM             reduce using rule 99 (String -> textList .)
    EQUAL           reduce using rule 99 (String -> textList .)
    NE              reduce using rule 99 (String -> textList .)
    LT              reduce using rule 99 (String -> textList .)
    GT              reduce using rule 99 (String -> textList .)
    LTE             reduce using rule 99 (String -> textList .)
    GTE             reduce using rule 99 (String -> textList .)
    AND             reduce using rule 99 (String -> textList .)
    OR              reduce using rule 99 (String -> textList .)
    and             reduce using rule 99 (String -> textList .)
    or              reduce using rule 99 (String -> textList .)
    ID              reduce using rule 99 (String -> textList .)
    if              reduce using rule 99 (String -> textList .)
    case            reduce using rule 99 (String -> textList .)
    unless          reduce using rule 99 (String -> textList .)
    while           reduce using rule 99 (String -> textList .)
    require         reduce using rule 99 (String -> textList .)
    puts            reduce using rule 99 (String -> textList .)
    print           reduce using rule 99 (String -> textList .)
    MINUS           reduce using rule 99 (String -> textList .)
    NUMBER          reduce using rule 99 (String -> textList .)
    LPARENT         reduce using rule 99 (String -> textList .)
    FLOAT           reduce using rule 99 (String -> textList .)
    LSQUARE         reduce using rule 99 (String -> textList .)
    TEXT            reduce using rule 99 (String -> textList .)
    TEXT2           reduce using rule 99 (String -> textList .)
    when            reduce using rule 99 (String -> textList .)
    $end            reduce using rule 99 (String -> textList .)
    end             reduce using rule 99 (String -> textList .)
    else            reduce using rule 99 (String -> textList .)
    elsif           reduce using rule 99 (String -> textList .)
    RSQUARE         reduce using rule 99 (String -> textList .)
    COMMA           reduce using rule 99 (String -> textList .)
    RPARENT         reduce using rule 99 (String -> textList .)


state 29

    (102) textList -> TEXT .

    PLUS            reduce using rule 102 (textList -> TEXT .)
    TOINT           reduce using rule 102 (textList -> TEXT .)
    TOSTR           reduce using rule 102 (textList -> TEXT .)
    TOFLO           reduce using rule 102 (textList -> TEXT .)
    LENGTH          reduce using rule 102 (textList -> TEXT .)
    MEAN            reduce using rule 102 (textList -> TEXT .)
    STANDAR         reduce using rule 102 (textList -> TEXT .)
    MEDIAN          reduce using rule 102 (textList -> TEXT .)
    VARIANCE        reduce using rule 102 (textList -> TEXT .)
    SUM             reduce using rule 102 (textList -> TEXT .)
    EQUAL           reduce using rule 102 (textList -> TEXT .)
    NE              reduce using rule 102 (textList -> TEXT .)
    LT              reduce using rule 102 (textList -> TEXT .)
    GT              reduce using rule 102 (textList -> TEXT .)
    LTE             reduce using rule 102 (textList -> TEXT .)
    GTE             reduce using rule 102 (textList -> TEXT .)
    AND             reduce using rule 102 (textList -> TEXT .)
    OR              reduce using rule 102 (textList -> TEXT .)
    and             reduce using rule 102 (textList -> TEXT .)
    or              reduce using rule 102 (textList -> TEXT .)
    ID              reduce using rule 102 (textList -> TEXT .)
    if              reduce using rule 102 (textList -> TEXT .)
    case            reduce using rule 102 (textList -> TEXT .)
    unless          reduce using rule 102 (textList -> TEXT .)
    while           reduce using rule 102 (textList -> TEXT .)
    require         reduce using rule 102 (textList -> TEXT .)
    puts            reduce using rule 102 (textList -> TEXT .)
    print           reduce using rule 102 (textList -> TEXT .)
    MINUS           reduce using rule 102 (textList -> TEXT .)
    NUMBER          reduce using rule 102 (textList -> TEXT .)
    LPARENT         reduce using rule 102 (textList -> TEXT .)
    FLOAT           reduce using rule 102 (textList -> TEXT .)
    LSQUARE         reduce using rule 102 (textList -> TEXT .)
    TEXT            reduce using rule 102 (textList -> TEXT .)
    TEXT2           reduce using rule 102 (textList -> TEXT .)
    when            reduce using rule 102 (textList -> TEXT .)
    $end            reduce using rule 102 (textList -> TEXT .)
    end             reduce using rule 102 (textList -> TEXT .)
    else            reduce using rule 102 (textList -> TEXT .)
    elsif           reduce using rule 102 (textList -> TEXT .)
    RSQUARE         reduce using rule 102 (textList -> TEXT .)
    COMMA           reduce using rule 102 (textList -> TEXT .)
    RPARENT         reduce using rule 102 (textList -> TEXT .)


state 30

    (4) statementList -> statementList statement .

    ID              reduce using rule 4 (statementList -> statementList statement .)
    if              reduce using rule 4 (statementList -> statementList statement .)
    case            reduce using rule 4 (statementList -> statementList statement .)
    unless          reduce using rule 4 (statementList -> statementList statement .)
    while           reduce using rule 4 (statementList -> statementList statement .)
    require         reduce using rule 4 (statementList -> statementList statement .)
    puts            reduce using rule 4 (statementList -> statementList statement .)
    print           reduce using rule 4 (statementList -> statementList statement .)
    PLUS            reduce using rule 4 (statementList -> statementList statement .)
    MINUS           reduce using rule 4 (statementList -> statementList statement .)
    NUMBER          reduce using rule 4 (statementList -> statementList statement .)
    LPARENT         reduce using rule 4 (statementList -> statementList statement .)
    FLOAT           reduce using rule 4 (statementList -> statementList statement .)
    LSQUARE         reduce using rule 4 (statementList -> statementList statement .)
    TEXT            reduce using rule 4 (statementList -> statementList statement .)
    TEXT2           reduce using rule 4 (statementList -> statementList statement .)
    $end            reduce using rule 4 (statementList -> statementList statement .)
    end             reduce using rule 4 (statementList -> statementList statement .)
    else            reduce using rule 4 (statementList -> statementList statement .)
    elsif           reduce using rule 4 (statementList -> statementList statement .)
    when            reduce using rule 4 (statementList -> statementList statement .)


state 31

    (5) statement -> ID ASSIGN . expression
    (6) statement -> ID ASSIGN . stringList
    (7) statement -> ID ASSIGN . boolean
    (8) statement -> ID ASSIGN . array
    (21) statement -> ID ASSIGN . KeyEntry
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (31) KeyEntry -> . KEYB1
    (32) KeyEntry -> . KEYB1 TOINT
    (33) KeyEntry -> . KEYB1 TOFLO
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    KEYB1           shift and go to state 93
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 88
    stringList                     shift and go to state 89
    boolean                        shift and go to state 90
    array                          shift and go to state 91
    KeyEntry                       shift and go to state 92
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 32

    (22) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN expression
    (23) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> ID LSQUARE . arrayIdList RSQUARE ASSIGN array
    (28) statement -> ID LSQUARE . arrayIdList RSQUARE assigList expression
    (84) factor -> ID LSQUARE . expression RSQUARE
    (34) arrayIdList -> . expression COMMA expression
    (35) arrayIdList -> . expression
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    arrayIdList                    shift and go to state 94
    expression                     shift and go to state 95
    array                          shift and go to state 7
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 33

    (27) statement -> ID assigList . expression
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 96
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28

state 34

    (62) assigList -> ASSIGPLUS .

    PLUS            reduce using rule 62 (assigList -> ASSIGPLUS .)
    MINUS           reduce using rule 62 (assigList -> ASSIGPLUS .)
    ID              reduce using rule 62 (assigList -> ASSIGPLUS .)
    NUMBER          reduce using rule 62 (assigList -> ASSIGPLUS .)
    LPARENT         reduce using rule 62 (assigList -> ASSIGPLUS .)
    FLOAT           reduce using rule 62 (assigList -> ASSIGPLUS .)
    LSQUARE         reduce using rule 62 (assigList -> ASSIGPLUS .)
    TEXT            reduce using rule 62 (assigList -> ASSIGPLUS .)
    TEXT2           reduce using rule 62 (assigList -> ASSIGPLUS .)


state 35

    (63) assigList -> ASSIGMINUS .

    PLUS            reduce using rule 63 (assigList -> ASSIGMINUS .)
    MINUS           reduce using rule 63 (assigList -> ASSIGMINUS .)
    ID              reduce using rule 63 (assigList -> ASSIGMINUS .)
    NUMBER          reduce using rule 63 (assigList -> ASSIGMINUS .)
    LPARENT         reduce using rule 63 (assigList -> ASSIGMINUS .)
    FLOAT           reduce using rule 63 (assigList -> ASSIGMINUS .)
    LSQUARE         reduce using rule 63 (assigList -> ASSIGMINUS .)
    TEXT            reduce using rule 63 (assigList -> ASSIGMINUS .)
    TEXT2           reduce using rule 63 (assigList -> ASSIGMINUS .)


state 36

    (14) statement -> expression CICLE1 . iterable statementList end
    (36) iterable -> . do
    (37) iterable -> . do BARR ID BARR

    do              shift and go to state 98

    iterable                       shift and go to state 97

state 37

    (15) statement -> expression CICLE2 . iterable statementList end
    (36) iterable -> . do
    (37) iterable -> . do BARR ID BARR

    do              shift and go to state 98

    iterable                       shift and go to state 99

state 38

    (16) statement -> expression CICLE3 . do BARR ID COMMA ID BARR statementList end

    do              shift and go to state 100


state 39

    (68) expression -> expression addingOperator . term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    expression                     shift and go to state 72
    addingOperator                 shift and go to state 17
    term                           shift and go to state 101
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28

state 40

    (9) statement -> if conditionList . statementList end
    (10) statement -> if conditionList . statementList else statementList end
    (11) statement -> if conditionList . statementList elseifList else statementList end
    (43) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (58) logicRelation -> . AND
    (59) logicRelation -> . OR
    (60) logicRelation -> . and
    (61) logicRelation -> . or
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    AND             shift and go to state 104
    OR              shift and go to state 105
    and             shift and go to state 106
    or              shift and go to state 107
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 102
    logicRelation                  shift and go to state 103
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 41

    (42) conditionList -> condition .

    AND             reduce using rule 42 (conditionList -> condition .)
    OR              reduce using rule 42 (conditionList -> condition .)
    and             reduce using rule 42 (conditionList -> condition .)
    or              reduce using rule 42 (conditionList -> condition .)
    ID              reduce using rule 42 (conditionList -> condition .)
    if              reduce using rule 42 (conditionList -> condition .)
    case            reduce using rule 42 (conditionList -> condition .)
    unless          reduce using rule 42 (conditionList -> condition .)
    while           reduce using rule 42 (conditionList -> condition .)
    require         reduce using rule 42 (conditionList -> condition .)
    puts            reduce using rule 42 (conditionList -> condition .)
    print           reduce using rule 42 (conditionList -> condition .)
    PLUS            reduce using rule 42 (conditionList -> condition .)
    MINUS           reduce using rule 42 (conditionList -> condition .)
    NUMBER          reduce using rule 42 (conditionList -> condition .)
    LPARENT         reduce using rule 42 (conditionList -> condition .)
    FLOAT           reduce using rule 42 (conditionList -> condition .)
    LSQUARE         reduce using rule 42 (conditionList -> condition .)
    TEXT            reduce using rule 42 (conditionList -> condition .)
    TEXT2           reduce using rule 42 (conditionList -> condition .)


state 42

    (44) condition -> comparables . relation comparables
    (47) condition -> comparables .
    (52) relation -> . EQUAL
    (53) relation -> . NE
    (54) relation -> . LT
    (55) relation -> . GT
    (56) relation -> . LTE
    (57) relation -> . GTE

    AND             reduce using rule 47 (condition -> comparables .)
    OR              reduce using rule 47 (condition -> comparables .)
    and             reduce using rule 47 (condition -> comparables .)
    or              reduce using rule 47 (condition -> comparables .)
    ID              reduce using rule 47 (condition -> comparables .)
    if              reduce using rule 47 (condition -> comparables .)
    case            reduce using rule 47 (condition -> comparables .)
    unless          reduce using rule 47 (condition -> comparables .)
    while           reduce using rule 47 (condition -> comparables .)
    require         reduce using rule 47 (condition -> comparables .)
    puts            reduce using rule 47 (condition -> comparables .)
    print           reduce using rule 47 (condition -> comparables .)
    PLUS            reduce using rule 47 (condition -> comparables .)
    MINUS           reduce using rule 47 (condition -> comparables .)
    NUMBER          reduce using rule 47 (condition -> comparables .)
    LPARENT         reduce using rule 47 (condition -> comparables .)
    FLOAT           reduce using rule 47 (condition -> comparables .)
    LSQUARE         reduce using rule 47 (condition -> comparables .)
    TEXT            reduce using rule 47 (condition -> comparables .)
    TEXT2           reduce using rule 47 (condition -> comparables .)
    EQUAL           shift and go to state 109
    NE              shift and go to state 110
    LT              shift and go to state 111
    GT              shift and go to state 112
    LTE             shift and go to state 113
    GTE             shift and go to state 114

    relation                       shift and go to state 108

state 43

    (45) condition -> NOT . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    comparables                    shift and go to state 115
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 44

    (46) condition -> not . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    comparables                    shift and go to state 116
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 45

    (48) comparables -> expression .
    (68) expression -> expression . addingOperator term
    (97) stringList -> expression . PLUS String
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    EQUAL           reduce using rule 48 (comparables -> expression .)
    NE              reduce using rule 48 (comparables -> expression .)
    LT              reduce using rule 48 (comparables -> expression .)
    GT              reduce using rule 48 (comparables -> expression .)
    LTE             reduce using rule 48 (comparables -> expression .)
    GTE             reduce using rule 48 (comparables -> expression .)
    AND             reduce using rule 48 (comparables -> expression .)
    OR              reduce using rule 48 (comparables -> expression .)
    and             reduce using rule 48 (comparables -> expression .)
    or              reduce using rule 48 (comparables -> expression .)
    ID              reduce using rule 48 (comparables -> expression .)
    if              reduce using rule 48 (comparables -> expression .)
    case            reduce using rule 48 (comparables -> expression .)
    unless          reduce using rule 48 (comparables -> expression .)
    while           reduce using rule 48 (comparables -> expression .)
    require         reduce using rule 48 (comparables -> expression .)
    puts            reduce using rule 48 (comparables -> expression .)
    print           reduce using rule 48 (comparables -> expression .)
    NUMBER          reduce using rule 48 (comparables -> expression .)
    LPARENT         reduce using rule 48 (comparables -> expression .)
    FLOAT           reduce using rule 48 (comparables -> expression .)
    LSQUARE         reduce using rule 48 (comparables -> expression .)
    TEXT            reduce using rule 48 (comparables -> expression .)
    TEXT2           reduce using rule 48 (comparables -> expression .)
    when            reduce using rule 48 (comparables -> expression .)
    PLUS            shift and go to state 117
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 48 (comparables -> expression .) ]
  ! MINUS           [ reduce using rule 48 (comparables -> expression .) ]

    addingOperator                 shift and go to state 39

state 46

    (49) comparables -> stringList .
    (92) stringList -> stringList . PLUS expression
    (93) stringList -> stringList . PLUS String
    (94) stringList -> stringList . PLUS boolean
    (95) stringList -> stringList . PLUS array

  ! shift/reduce conflict for PLUS resolved as shift
    EQUAL           reduce using rule 49 (comparables -> stringList .)
    NE              reduce using rule 49 (comparables -> stringList .)
    LT              reduce using rule 49 (comparables -> stringList .)
    GT              reduce using rule 49 (comparables -> stringList .)
    LTE             reduce using rule 49 (comparables -> stringList .)
    GTE             reduce using rule 49 (comparables -> stringList .)
    AND             reduce using rule 49 (comparables -> stringList .)
    OR              reduce using rule 49 (comparables -> stringList .)
    and             reduce using rule 49 (comparables -> stringList .)
    or              reduce using rule 49 (comparables -> stringList .)
    ID              reduce using rule 49 (comparables -> stringList .)
    if              reduce using rule 49 (comparables -> stringList .)
    case            reduce using rule 49 (comparables -> stringList .)
    unless          reduce using rule 49 (comparables -> stringList .)
    while           reduce using rule 49 (comparables -> stringList .)
    require         reduce using rule 49 (comparables -> stringList .)
    puts            reduce using rule 49 (comparables -> stringList .)
    print           reduce using rule 49 (comparables -> stringList .)
    MINUS           reduce using rule 49 (comparables -> stringList .)
    NUMBER          reduce using rule 49 (comparables -> stringList .)
    LPARENT         reduce using rule 49 (comparables -> stringList .)
    FLOAT           reduce using rule 49 (comparables -> stringList .)
    LSQUARE         reduce using rule 49 (comparables -> stringList .)
    TEXT            reduce using rule 49 (comparables -> stringList .)
    TEXT2           reduce using rule 49 (comparables -> stringList .)
    when            reduce using rule 49 (comparables -> stringList .)
    PLUS            shift and go to state 118

  ! PLUS            [ reduce using rule 49 (comparables -> stringList .) ]


state 47

    (50) comparables -> boolean .
    (96) stringList -> boolean . PLUS String

  ! shift/reduce conflict for PLUS resolved as shift
    EQUAL           reduce using rule 50 (comparables -> boolean .)
    NE              reduce using rule 50 (comparables -> boolean .)
    LT              reduce using rule 50 (comparables -> boolean .)
    GT              reduce using rule 50 (comparables -> boolean .)
    LTE             reduce using rule 50 (comparables -> boolean .)
    GTE             reduce using rule 50 (comparables -> boolean .)
    AND             reduce using rule 50 (comparables -> boolean .)
    OR              reduce using rule 50 (comparables -> boolean .)
    and             reduce using rule 50 (comparables -> boolean .)
    or              reduce using rule 50 (comparables -> boolean .)
    ID              reduce using rule 50 (comparables -> boolean .)
    if              reduce using rule 50 (comparables -> boolean .)
    case            reduce using rule 50 (comparables -> boolean .)
    unless          reduce using rule 50 (comparables -> boolean .)
    while           reduce using rule 50 (comparables -> boolean .)
    require         reduce using rule 50 (comparables -> boolean .)
    puts            reduce using rule 50 (comparables -> boolean .)
    print           reduce using rule 50 (comparables -> boolean .)
    MINUS           reduce using rule 50 (comparables -> boolean .)
    NUMBER          reduce using rule 50 (comparables -> boolean .)
    LPARENT         reduce using rule 50 (comparables -> boolean .)
    FLOAT           reduce using rule 50 (comparables -> boolean .)
    LSQUARE         reduce using rule 50 (comparables -> boolean .)
    TEXT            reduce using rule 50 (comparables -> boolean .)
    TEXT2           reduce using rule 50 (comparables -> boolean .)
    when            reduce using rule 50 (comparables -> boolean .)
    PLUS            shift and go to state 119

  ! PLUS            [ reduce using rule 50 (comparables -> boolean .) ]


state 48

    (51) comparables -> array .
    (98) stringList -> array . PLUS String
    (89) optionList -> array .

  ! shift/reduce conflict for PLUS resolved as shift
    EQUAL           reduce using rule 51 (comparables -> array .)
    NE              reduce using rule 51 (comparables -> array .)
    LT              reduce using rule 51 (comparables -> array .)
    GT              reduce using rule 51 (comparables -> array .)
    LTE             reduce using rule 51 (comparables -> array .)
    GTE             reduce using rule 51 (comparables -> array .)
    AND             reduce using rule 51 (comparables -> array .)
    OR              reduce using rule 51 (comparables -> array .)
    and             reduce using rule 51 (comparables -> array .)
    or              reduce using rule 51 (comparables -> array .)
    ID              reduce using rule 51 (comparables -> array .)
    if              reduce using rule 51 (comparables -> array .)
    case            reduce using rule 51 (comparables -> array .)
    unless          reduce using rule 51 (comparables -> array .)
    while           reduce using rule 51 (comparables -> array .)
    require         reduce using rule 51 (comparables -> array .)
    puts            reduce using rule 51 (comparables -> array .)
    print           reduce using rule 51 (comparables -> array .)
    MINUS           reduce using rule 51 (comparables -> array .)
    NUMBER          reduce using rule 51 (comparables -> array .)
    LPARENT         reduce using rule 51 (comparables -> array .)
    FLOAT           reduce using rule 51 (comparables -> array .)
    LSQUARE         reduce using rule 51 (comparables -> array .)
    TEXT            reduce using rule 51 (comparables -> array .)
    TEXT2           reduce using rule 51 (comparables -> array .)
    when            reduce using rule 51 (comparables -> array .)
    PLUS            shift and go to state 120
    TOINT           reduce using rule 89 (optionList -> array .)
    TOSTR           reduce using rule 89 (optionList -> array .)
    TOFLO           reduce using rule 89 (optionList -> array .)
    LENGTH          reduce using rule 89 (optionList -> array .)
    MEAN            reduce using rule 89 (optionList -> array .)
    STANDAR         reduce using rule 89 (optionList -> array .)
    MEDIAN          reduce using rule 89 (optionList -> array .)
    VARIANCE        reduce using rule 89 (optionList -> array .)
    SUM             reduce using rule 89 (optionList -> array .)

  ! PLUS            [ reduce using rule 51 (comparables -> array .) ]


state 49

    (91) stringList -> String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID
    (87) factor -> String . funcList
    (90) optionList -> String .
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TOINT resolved as shift
  ! shift/reduce conflict for TOSTR resolved as shift
  ! shift/reduce conflict for TOFLO resolved as shift
    EQUAL           reduce using rule 91 (stringList -> String .)
    NE              reduce using rule 91 (stringList -> String .)
    LT              reduce using rule 91 (stringList -> String .)
    GT              reduce using rule 91 (stringList -> String .)
    LTE             reduce using rule 91 (stringList -> String .)
    GTE             reduce using rule 91 (stringList -> String .)
    AND             reduce using rule 91 (stringList -> String .)
    OR              reduce using rule 91 (stringList -> String .)
    and             reduce using rule 91 (stringList -> String .)
    or              reduce using rule 91 (stringList -> String .)
    ID              reduce using rule 91 (stringList -> String .)
    if              reduce using rule 91 (stringList -> String .)
    case            reduce using rule 91 (stringList -> String .)
    unless          reduce using rule 91 (stringList -> String .)
    while           reduce using rule 91 (stringList -> String .)
    require         reduce using rule 91 (stringList -> String .)
    puts            reduce using rule 91 (stringList -> String .)
    print           reduce using rule 91 (stringList -> String .)
    MINUS           reduce using rule 91 (stringList -> String .)
    NUMBER          reduce using rule 91 (stringList -> String .)
    LPARENT         reduce using rule 91 (stringList -> String .)
    FLOAT           reduce using rule 91 (stringList -> String .)
    LSQUARE         reduce using rule 91 (stringList -> String .)
    TEXT            reduce using rule 91 (stringList -> String .)
    TEXT2           reduce using rule 91 (stringList -> String .)
    when            reduce using rule 91 (stringList -> String .)
    $end            reduce using rule 91 (stringList -> String .)
    end             reduce using rule 91 (stringList -> String .)
    else            reduce using rule 91 (stringList -> String .)
    elsif           reduce using rule 91 (stringList -> String .)
    PLUS            shift and go to state 87
    LENGTH          reduce using rule 90 (optionList -> String .)
    MEAN            reduce using rule 90 (optionList -> String .)
    STANDAR         reduce using rule 90 (optionList -> String .)
    MEDIAN          reduce using rule 90 (optionList -> String .)
    VARIANCE        reduce using rule 90 (optionList -> String .)
    SUM             reduce using rule 90 (optionList -> String .)
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79

  ! PLUS            [ reduce using rule 91 (stringList -> String .) ]
  ! TOINT           [ reduce using rule 90 (optionList -> String .) ]
  ! TOSTR           [ reduce using rule 90 (optionList -> String .) ]
  ! TOFLO           [ reduce using rule 90 (optionList -> String .) ]

    funcList                       shift and go to state 86

state 50

    (104) boolean -> true .

    PLUS            reduce using rule 104 (boolean -> true .)
    EQUAL           reduce using rule 104 (boolean -> true .)
    NE              reduce using rule 104 (boolean -> true .)
    LT              reduce using rule 104 (boolean -> true .)
    GT              reduce using rule 104 (boolean -> true .)
    LTE             reduce using rule 104 (boolean -> true .)
    GTE             reduce using rule 104 (boolean -> true .)
    AND             reduce using rule 104 (boolean -> true .)
    OR              reduce using rule 104 (boolean -> true .)
    and             reduce using rule 104 (boolean -> true .)
    or              reduce using rule 104 (boolean -> true .)
    ID              reduce using rule 104 (boolean -> true .)
    if              reduce using rule 104 (boolean -> true .)
    case            reduce using rule 104 (boolean -> true .)
    unless          reduce using rule 104 (boolean -> true .)
    while           reduce using rule 104 (boolean -> true .)
    require         reduce using rule 104 (boolean -> true .)
    puts            reduce using rule 104 (boolean -> true .)
    print           reduce using rule 104 (boolean -> true .)
    MINUS           reduce using rule 104 (boolean -> true .)
    NUMBER          reduce using rule 104 (boolean -> true .)
    LPARENT         reduce using rule 104 (boolean -> true .)
    FLOAT           reduce using rule 104 (boolean -> true .)
    LSQUARE         reduce using rule 104 (boolean -> true .)
    TEXT            reduce using rule 104 (boolean -> true .)
    TEXT2           reduce using rule 104 (boolean -> true .)
    when            reduce using rule 104 (boolean -> true .)
    $end            reduce using rule 104 (boolean -> true .)
    end             reduce using rule 104 (boolean -> true .)
    else            reduce using rule 104 (boolean -> true .)
    elsif           reduce using rule 104 (boolean -> true .)
    RSQUARE         reduce using rule 104 (boolean -> true .)
    COMMA           reduce using rule 104 (boolean -> true .)


state 51

    (105) boolean -> false .

    PLUS            reduce using rule 105 (boolean -> false .)
    EQUAL           reduce using rule 105 (boolean -> false .)
    NE              reduce using rule 105 (boolean -> false .)
    LT              reduce using rule 105 (boolean -> false .)
    GT              reduce using rule 105 (boolean -> false .)
    LTE             reduce using rule 105 (boolean -> false .)
    GTE             reduce using rule 105 (boolean -> false .)
    AND             reduce using rule 105 (boolean -> false .)
    OR              reduce using rule 105 (boolean -> false .)
    and             reduce using rule 105 (boolean -> false .)
    or              reduce using rule 105 (boolean -> false .)
    ID              reduce using rule 105 (boolean -> false .)
    if              reduce using rule 105 (boolean -> false .)
    case            reduce using rule 105 (boolean -> false .)
    unless          reduce using rule 105 (boolean -> false .)
    while           reduce using rule 105 (boolean -> false .)
    require         reduce using rule 105 (boolean -> false .)
    puts            reduce using rule 105 (boolean -> false .)
    print           reduce using rule 105 (boolean -> false .)
    MINUS           reduce using rule 105 (boolean -> false .)
    NUMBER          reduce using rule 105 (boolean -> false .)
    LPARENT         reduce using rule 105 (boolean -> false .)
    FLOAT           reduce using rule 105 (boolean -> false .)
    LSQUARE         reduce using rule 105 (boolean -> false .)
    TEXT            reduce using rule 105 (boolean -> false .)
    TEXT2           reduce using rule 105 (boolean -> false .)
    when            reduce using rule 105 (boolean -> false .)
    $end            reduce using rule 105 (boolean -> false .)
    end             reduce using rule 105 (boolean -> false .)
    else            reduce using rule 105 (boolean -> false .)
    elsif           reduce using rule 105 (boolean -> false .)
    RSQUARE         reduce using rule 105 (boolean -> false .)
    COMMA           reduce using rule 105 (boolean -> false .)


state 52

    (80) factor -> ID .
    (84) factor -> ID . LSQUARE expression RSQUARE

  ! shift/reduce conflict for LSQUARE resolved as shift
    TIMES           reduce using rule 80 (factor -> ID .)
    DIVIDE          reduce using rule 80 (factor -> ID .)
    EXPO            reduce using rule 80 (factor -> ID .)
    MOD             reduce using rule 80 (factor -> ID .)
    PLUS            reduce using rule 80 (factor -> ID .)
    MINUS           reduce using rule 80 (factor -> ID .)
    EQUAL           reduce using rule 80 (factor -> ID .)
    NE              reduce using rule 80 (factor -> ID .)
    LT              reduce using rule 80 (factor -> ID .)
    GT              reduce using rule 80 (factor -> ID .)
    LTE             reduce using rule 80 (factor -> ID .)
    GTE             reduce using rule 80 (factor -> ID .)
    AND             reduce using rule 80 (factor -> ID .)
    OR              reduce using rule 80 (factor -> ID .)
    and             reduce using rule 80 (factor -> ID .)
    or              reduce using rule 80 (factor -> ID .)
    ID              reduce using rule 80 (factor -> ID .)
    if              reduce using rule 80 (factor -> ID .)
    case            reduce using rule 80 (factor -> ID .)
    unless          reduce using rule 80 (factor -> ID .)
    while           reduce using rule 80 (factor -> ID .)
    require         reduce using rule 80 (factor -> ID .)
    puts            reduce using rule 80 (factor -> ID .)
    print           reduce using rule 80 (factor -> ID .)
    NUMBER          reduce using rule 80 (factor -> ID .)
    LPARENT         reduce using rule 80 (factor -> ID .)
    FLOAT           reduce using rule 80 (factor -> ID .)
    TEXT            reduce using rule 80 (factor -> ID .)
    TEXT2           reduce using rule 80 (factor -> ID .)
    TOINT           reduce using rule 80 (factor -> ID .)
    TOSTR           reduce using rule 80 (factor -> ID .)
    TOFLO           reduce using rule 80 (factor -> ID .)
    LENGTH          reduce using rule 80 (factor -> ID .)
    MEAN            reduce using rule 80 (factor -> ID .)
    STANDAR         reduce using rule 80 (factor -> ID .)
    MEDIAN          reduce using rule 80 (factor -> ID .)
    VARIANCE        reduce using rule 80 (factor -> ID .)
    SUM             reduce using rule 80 (factor -> ID .)
    when            reduce using rule 80 (factor -> ID .)
    $end            reduce using rule 80 (factor -> ID .)
    end             reduce using rule 80 (factor -> ID .)
    else            reduce using rule 80 (factor -> ID .)
    elsif           reduce using rule 80 (factor -> ID .)
    RSQUARE         reduce using rule 80 (factor -> ID .)
    COMMA           reduce using rule 80 (factor -> ID .)
    CICLE1          reduce using rule 80 (factor -> ID .)
    CICLE2          reduce using rule 80 (factor -> ID .)
    CICLE3          reduce using rule 80 (factor -> ID .)
    RPARENT         reduce using rule 80 (factor -> ID .)
    LSQUARE         shift and go to state 121

  ! LSQUARE         [ reduce using rule 80 (factor -> ID .) ]


state 53

    (12) statement -> case comparables . whenList else statementList end
    (40) whenList -> . when comparables statementList
    (41) whenList -> . whenList when comparables statementList

    when            shift and go to state 123

    whenList                       shift and go to state 122

state 54

    (13) statement -> unless conditionList . statementList else statementList end
    (43) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (58) logicRelation -> . AND
    (59) logicRelation -> . OR
    (60) logicRelation -> . and
    (61) logicRelation -> . or
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    AND             shift and go to state 104
    OR              shift and go to state 105
    and             shift and go to state 106
    or              shift and go to state 107
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 124
    logicRelation                  shift and go to state 103
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 55

    (17) statement -> while conditionList . statementList end
    (43) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (58) logicRelation -> . AND
    (59) logicRelation -> . OR
    (60) logicRelation -> . and
    (61) logicRelation -> . or
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    AND             shift and go to state 104
    OR              shift and go to state 105
    and             shift and go to state 106
    or              shift and go to state 107
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 125
    logicRelation                  shift and go to state 103
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 56

    (18) statement -> printList stringList .
    (92) stringList -> stringList . PLUS expression
    (93) stringList -> stringList . PLUS String
    (94) stringList -> stringList . PLUS boolean
    (95) stringList -> stringList . PLUS array

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 18 (statement -> printList stringList .)
    if              reduce using rule 18 (statement -> printList stringList .)
    case            reduce using rule 18 (statement -> printList stringList .)
    unless          reduce using rule 18 (statement -> printList stringList .)
    while           reduce using rule 18 (statement -> printList stringList .)
    require         reduce using rule 18 (statement -> printList stringList .)
    puts            reduce using rule 18 (statement -> printList stringList .)
    print           reduce using rule 18 (statement -> printList stringList .)
    MINUS           reduce using rule 18 (statement -> printList stringList .)
    NUMBER          reduce using rule 18 (statement -> printList stringList .)
    LPARENT         reduce using rule 18 (statement -> printList stringList .)
    FLOAT           reduce using rule 18 (statement -> printList stringList .)
    LSQUARE         reduce using rule 18 (statement -> printList stringList .)
    TEXT            reduce using rule 18 (statement -> printList stringList .)
    TEXT2           reduce using rule 18 (statement -> printList stringList .)
    $end            reduce using rule 18 (statement -> printList stringList .)
    end             reduce using rule 18 (statement -> printList stringList .)
    else            reduce using rule 18 (statement -> printList stringList .)
    elsif           reduce using rule 18 (statement -> printList stringList .)
    when            reduce using rule 18 (statement -> printList stringList .)
    PLUS            shift and go to state 118

  ! PLUS            [ reduce using rule 18 (statement -> printList stringList .) ]


state 57

    (19) statement -> printList expression .
    (97) stringList -> expression . PLUS String
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 19 (statement -> printList expression .)
    if              reduce using rule 19 (statement -> printList expression .)
    case            reduce using rule 19 (statement -> printList expression .)
    unless          reduce using rule 19 (statement -> printList expression .)
    while           reduce using rule 19 (statement -> printList expression .)
    require         reduce using rule 19 (statement -> printList expression .)
    puts            reduce using rule 19 (statement -> printList expression .)
    print           reduce using rule 19 (statement -> printList expression .)
    NUMBER          reduce using rule 19 (statement -> printList expression .)
    LPARENT         reduce using rule 19 (statement -> printList expression .)
    FLOAT           reduce using rule 19 (statement -> printList expression .)
    LSQUARE         reduce using rule 19 (statement -> printList expression .)
    TEXT            reduce using rule 19 (statement -> printList expression .)
    TEXT2           reduce using rule 19 (statement -> printList expression .)
    $end            reduce using rule 19 (statement -> printList expression .)
    end             reduce using rule 19 (statement -> printList expression .)
    else            reduce using rule 19 (statement -> printList expression .)
    elsif           reduce using rule 19 (statement -> printList expression .)
    when            reduce using rule 19 (statement -> printList expression .)
    PLUS            shift and go to state 117
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 19 (statement -> printList expression .) ]
  ! MINUS           [ reduce using rule 19 (statement -> printList expression .) ]

    addingOperator                 shift and go to state 39

state 58

    (20) statement -> printList boolean .
    (96) stringList -> boolean . PLUS String

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 20 (statement -> printList boolean .)
    if              reduce using rule 20 (statement -> printList boolean .)
    case            reduce using rule 20 (statement -> printList boolean .)
    unless          reduce using rule 20 (statement -> printList boolean .)
    while           reduce using rule 20 (statement -> printList boolean .)
    require         reduce using rule 20 (statement -> printList boolean .)
    puts            reduce using rule 20 (statement -> printList boolean .)
    print           reduce using rule 20 (statement -> printList boolean .)
    MINUS           reduce using rule 20 (statement -> printList boolean .)
    NUMBER          reduce using rule 20 (statement -> printList boolean .)
    LPARENT         reduce using rule 20 (statement -> printList boolean .)
    FLOAT           reduce using rule 20 (statement -> printList boolean .)
    LSQUARE         reduce using rule 20 (statement -> printList boolean .)
    TEXT            reduce using rule 20 (statement -> printList boolean .)
    TEXT2           reduce using rule 20 (statement -> printList boolean .)
    $end            reduce using rule 20 (statement -> printList boolean .)
    end             reduce using rule 20 (statement -> printList boolean .)
    else            reduce using rule 20 (statement -> printList boolean .)
    elsif           reduce using rule 20 (statement -> printList boolean .)
    when            reduce using rule 20 (statement -> printList boolean .)
    PLUS            shift and go to state 119

  ! PLUS            [ reduce using rule 20 (statement -> printList boolean .) ]


state 59

    (29) statement -> printList array .
    (98) stringList -> array . PLUS String
    (89) optionList -> array .

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 29 (statement -> printList array .)
    if              reduce using rule 29 (statement -> printList array .)
    case            reduce using rule 29 (statement -> printList array .)
    unless          reduce using rule 29 (statement -> printList array .)
    while           reduce using rule 29 (statement -> printList array .)
    require         reduce using rule 29 (statement -> printList array .)
    puts            reduce using rule 29 (statement -> printList array .)
    print           reduce using rule 29 (statement -> printList array .)
    MINUS           reduce using rule 29 (statement -> printList array .)
    NUMBER          reduce using rule 29 (statement -> printList array .)
    LPARENT         reduce using rule 29 (statement -> printList array .)
    FLOAT           reduce using rule 29 (statement -> printList array .)
    LSQUARE         reduce using rule 29 (statement -> printList array .)
    TEXT            reduce using rule 29 (statement -> printList array .)
    TEXT2           reduce using rule 29 (statement -> printList array .)
    $end            reduce using rule 29 (statement -> printList array .)
    end             reduce using rule 29 (statement -> printList array .)
    else            reduce using rule 29 (statement -> printList array .)
    elsif           reduce using rule 29 (statement -> printList array .)
    when            reduce using rule 29 (statement -> printList array .)
    PLUS            shift and go to state 120
    TOINT           reduce using rule 89 (optionList -> array .)
    TOSTR           reduce using rule 89 (optionList -> array .)
    TOFLO           reduce using rule 89 (optionList -> array .)
    LENGTH          reduce using rule 89 (optionList -> array .)
    MEAN            reduce using rule 89 (optionList -> array .)
    STANDAR         reduce using rule 89 (optionList -> array .)
    MEDIAN          reduce using rule 89 (optionList -> array .)
    VARIANCE        reduce using rule 89 (optionList -> array .)
    SUM             reduce using rule 89 (optionList -> array .)

  ! PLUS            [ reduce using rule 29 (statement -> printList array .) ]


state 60

    (110) arrayList -> LSQUARE . arrayList RSQUARE
    (106) array -> LSQUARE . arrayList RSQUARE
    (107) arrayList -> . expression
    (108) arrayList -> . String
    (109) arrayList -> . boolean
    (110) arrayList -> . LSQUARE arrayList RSQUARE
    (111) arrayList -> . arrayList COMMA expression
    (112) arrayList -> . arrayList COMMA String
    (113) arrayList -> . arrayList COMMA boolean
    (114) arrayList -> . arrayList COMMA LSQUARE arrayList RSQUARE
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (104) boolean -> . true
    (105) boolean -> . false
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (106) array -> . LSQUARE arrayList RSQUARE

    LSQUARE         shift and go to state 60
    true            shift and go to state 50
    false           shift and go to state 51
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    arrayList                      shift and go to state 126
    expression                     shift and go to state 62
    String                         shift and go to state 63
    boolean                        shift and go to state 64
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    array                          shift and go to state 7

state 61

    (106) array -> LSQUARE arrayList . RSQUARE
    (111) arrayList -> arrayList . COMMA expression
    (112) arrayList -> arrayList . COMMA String
    (113) arrayList -> arrayList . COMMA boolean
    (114) arrayList -> arrayList . COMMA LSQUARE arrayList RSQUARE

    RSQUARE         shift and go to state 127
    COMMA           shift and go to state 128


state 62

    (107) arrayList -> expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    RSQUARE         reduce using rule 107 (arrayList -> expression .)
    COMMA           reduce using rule 107 (arrayList -> expression .)
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 39

state 63

    (108) arrayList -> String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID
    (87) factor -> String . funcList
    (90) optionList -> String .
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO

  ! shift/reduce conflict for TOINT resolved as shift
  ! shift/reduce conflict for TOSTR resolved as shift
  ! shift/reduce conflict for TOFLO resolved as shift
    RSQUARE         reduce using rule 108 (arrayList -> String .)
    COMMA           reduce using rule 108 (arrayList -> String .)
    PLUS            shift and go to state 87
    LENGTH          reduce using rule 90 (optionList -> String .)
    MEAN            reduce using rule 90 (optionList -> String .)
    STANDAR         reduce using rule 90 (optionList -> String .)
    MEDIAN          reduce using rule 90 (optionList -> String .)
    VARIANCE        reduce using rule 90 (optionList -> String .)
    SUM             reduce using rule 90 (optionList -> String .)
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79

  ! TOINT           [ reduce using rule 90 (optionList -> String .) ]
  ! TOSTR           [ reduce using rule 90 (optionList -> String .) ]
  ! TOFLO           [ reduce using rule 90 (optionList -> String .) ]

    funcList                       shift and go to state 86

state 64

    (109) arrayList -> boolean .

    RSQUARE         reduce using rule 109 (arrayList -> boolean .)
    COMMA           reduce using rule 109 (arrayList -> boolean .)


state 65

    (30) statement -> require TEXT2 .

    ID              reduce using rule 30 (statement -> require TEXT2 .)
    if              reduce using rule 30 (statement -> require TEXT2 .)
    case            reduce using rule 30 (statement -> require TEXT2 .)
    unless          reduce using rule 30 (statement -> require TEXT2 .)
    while           reduce using rule 30 (statement -> require TEXT2 .)
    require         reduce using rule 30 (statement -> require TEXT2 .)
    puts            reduce using rule 30 (statement -> require TEXT2 .)
    print           reduce using rule 30 (statement -> require TEXT2 .)
    PLUS            reduce using rule 30 (statement -> require TEXT2 .)
    MINUS           reduce using rule 30 (statement -> require TEXT2 .)
    NUMBER          reduce using rule 30 (statement -> require TEXT2 .)
    LPARENT         reduce using rule 30 (statement -> require TEXT2 .)
    FLOAT           reduce using rule 30 (statement -> require TEXT2 .)
    LSQUARE         reduce using rule 30 (statement -> require TEXT2 .)
    TEXT            reduce using rule 30 (statement -> require TEXT2 .)
    TEXT2           reduce using rule 30 (statement -> require TEXT2 .)
    $end            reduce using rule 30 (statement -> require TEXT2 .)
    end             reduce using rule 30 (statement -> require TEXT2 .)
    else            reduce using rule 30 (statement -> require TEXT2 .)
    elsif           reduce using rule 30 (statement -> require TEXT2 .)
    when            reduce using rule 30 (statement -> require TEXT2 .)


state 66

    (72) term -> term multiplyingOperator . factor
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    term                           shift and go to state 16
    factor                         shift and go to state 129
    optionList                     shift and go to state 25
    expression                     shift and go to state 72
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28
    addingOperator                 shift and go to state 17

state 67

    (76) multiplyingOperator -> TIMES .

    ID              reduce using rule 76 (multiplyingOperator -> TIMES .)
    NUMBER          reduce using rule 76 (multiplyingOperator -> TIMES .)
    LPARENT         reduce using rule 76 (multiplyingOperator -> TIMES .)
    FLOAT           reduce using rule 76 (multiplyingOperator -> TIMES .)
    LSQUARE         reduce using rule 76 (multiplyingOperator -> TIMES .)
    TEXT            reduce using rule 76 (multiplyingOperator -> TIMES .)
    TEXT2           reduce using rule 76 (multiplyingOperator -> TIMES .)
    PLUS            reduce using rule 76 (multiplyingOperator -> TIMES .)
    MINUS           reduce using rule 76 (multiplyingOperator -> TIMES .)


state 68

    (77) multiplyingOperator -> DIVIDE .

    ID              reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    NUMBER          reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    LPARENT         reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    FLOAT           reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    LSQUARE         reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    TEXT            reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    TEXT2           reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    PLUS            reduce using rule 77 (multiplyingOperator -> DIVIDE .)
    MINUS           reduce using rule 77 (multiplyingOperator -> DIVIDE .)


state 69

    (78) multiplyingOperator -> EXPO .

    ID              reduce using rule 78 (multiplyingOperator -> EXPO .)
    NUMBER          reduce using rule 78 (multiplyingOperator -> EXPO .)
    LPARENT         reduce using rule 78 (multiplyingOperator -> EXPO .)
    FLOAT           reduce using rule 78 (multiplyingOperator -> EXPO .)
    LSQUARE         reduce using rule 78 (multiplyingOperator -> EXPO .)
    TEXT            reduce using rule 78 (multiplyingOperator -> EXPO .)
    TEXT2           reduce using rule 78 (multiplyingOperator -> EXPO .)
    PLUS            reduce using rule 78 (multiplyingOperator -> EXPO .)
    MINUS           reduce using rule 78 (multiplyingOperator -> EXPO .)


state 70

    (79) multiplyingOperator -> MOD .

    ID              reduce using rule 79 (multiplyingOperator -> MOD .)
    NUMBER          reduce using rule 79 (multiplyingOperator -> MOD .)
    LPARENT         reduce using rule 79 (multiplyingOperator -> MOD .)
    FLOAT           reduce using rule 79 (multiplyingOperator -> MOD .)
    LSQUARE         reduce using rule 79 (multiplyingOperator -> MOD .)
    TEXT            reduce using rule 79 (multiplyingOperator -> MOD .)
    TEXT2           reduce using rule 79 (multiplyingOperator -> MOD .)
    PLUS            reduce using rule 79 (multiplyingOperator -> MOD .)
    MINUS           reduce using rule 79 (multiplyingOperator -> MOD .)


state 71

    (67) expression -> addingOperator term .
    (72) term -> term . multiplyingOperator factor
    (66) expression -> term .
    (76) multiplyingOperator -> . TIMES
    (77) multiplyingOperator -> . DIVIDE
    (78) multiplyingOperator -> . EXPO
    (79) multiplyingOperator -> . MOD

  ! reduce/reduce conflict for PLUS resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for MINUS resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for TOINT resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for TOSTR resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for TOFLO resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for LENGTH resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for MEAN resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for STANDAR resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for SUM resolved using rule 66 (expression -> term .)
    CICLE1          reduce using rule 67 (expression -> addingOperator term .)
    CICLE2          reduce using rule 67 (expression -> addingOperator term .)
    CICLE3          reduce using rule 67 (expression -> addingOperator term .)
    EQUAL           reduce using rule 67 (expression -> addingOperator term .)
    NE              reduce using rule 67 (expression -> addingOperator term .)
    LT              reduce using rule 67 (expression -> addingOperator term .)
    GT              reduce using rule 67 (expression -> addingOperator term .)
    LTE             reduce using rule 67 (expression -> addingOperator term .)
    GTE             reduce using rule 67 (expression -> addingOperator term .)
    AND             reduce using rule 67 (expression -> addingOperator term .)
    OR              reduce using rule 67 (expression -> addingOperator term .)
    and             reduce using rule 67 (expression -> addingOperator term .)
    or              reduce using rule 67 (expression -> addingOperator term .)
    ID              reduce using rule 67 (expression -> addingOperator term .)
    if              reduce using rule 67 (expression -> addingOperator term .)
    case            reduce using rule 67 (expression -> addingOperator term .)
    unless          reduce using rule 67 (expression -> addingOperator term .)
    while           reduce using rule 67 (expression -> addingOperator term .)
    require         reduce using rule 67 (expression -> addingOperator term .)
    puts            reduce using rule 67 (expression -> addingOperator term .)
    print           reduce using rule 67 (expression -> addingOperator term .)
    NUMBER          reduce using rule 67 (expression -> addingOperator term .)
    LPARENT         reduce using rule 67 (expression -> addingOperator term .)
    FLOAT           reduce using rule 67 (expression -> addingOperator term .)
    LSQUARE         reduce using rule 67 (expression -> addingOperator term .)
    TEXT            reduce using rule 67 (expression -> addingOperator term .)
    TEXT2           reduce using rule 67 (expression -> addingOperator term .)
    when            reduce using rule 67 (expression -> addingOperator term .)
    $end            reduce using rule 67 (expression -> addingOperator term .)
    end             reduce using rule 67 (expression -> addingOperator term .)
    else            reduce using rule 67 (expression -> addingOperator term .)
    elsif           reduce using rule 67 (expression -> addingOperator term .)
    RSQUARE         reduce using rule 67 (expression -> addingOperator term .)
    COMMA           reduce using rule 67 (expression -> addingOperator term .)
    RPARENT         reduce using rule 67 (expression -> addingOperator term .)
    PLUS            reduce using rule 66 (expression -> term .)
    MINUS           reduce using rule 66 (expression -> term .)
    TOINT           reduce using rule 66 (expression -> term .)
    TOSTR           reduce using rule 66 (expression -> term .)
    TOFLO           reduce using rule 66 (expression -> term .)
    LENGTH          reduce using rule 66 (expression -> term .)
    MEAN            reduce using rule 66 (expression -> term .)
    STANDAR         reduce using rule 66 (expression -> term .)
    MEDIAN          reduce using rule 66 (expression -> term .)
    VARIANCE        reduce using rule 66 (expression -> term .)
    SUM             reduce using rule 66 (expression -> term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    EXPO            shift and go to state 69
    MOD             shift and go to state 70

  ! PLUS            [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! MINUS           [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! TOINT           [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! TOSTR           [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! TOFLO           [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! LENGTH          [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! MEAN            [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! STANDAR         [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! MEDIAN          [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! VARIANCE        [ reduce using rule 67 (expression -> addingOperator term .) ]
  ! SUM             [ reduce using rule 67 (expression -> addingOperator term .) ]

    multiplyingOperator            shift and go to state 66

state 72

    (88) optionList -> expression .
    (68) expression -> expression . addingOperator term
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    RPARENT         reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 39

state 73

    (82) factor -> LPARENT optionList . RPARENT
    (85) factor -> optionList . funcList
    (86) factor -> optionList . funcVecList
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO
    (115) funcVecList -> . LENGTH
    (116) funcVecList -> . MEAN
    (117) funcVecList -> . STANDAR
    (118) funcVecList -> . MEDIAN
    (119) funcVecList -> . VARIANCE
    (120) funcVecList -> . SUM

    RPARENT         shift and go to state 130
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79
    LENGTH          shift and go to state 80
    MEAN            shift and go to state 81
    STANDAR         shift and go to state 82
    MEDIAN          shift and go to state 83
    VARIANCE        shift and go to state 84
    SUM             shift and go to state 85

    funcList                       shift and go to state 75
    funcVecList                    shift and go to state 76

state 74

    (90) optionList -> String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID
    (87) factor -> String . funcList
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO

  ! shift/reduce conflict for TOINT resolved as shift
  ! shift/reduce conflict for TOSTR resolved as shift
  ! shift/reduce conflict for TOFLO resolved as shift
    RPARENT         reduce using rule 90 (optionList -> String .)
    LENGTH          reduce using rule 90 (optionList -> String .)
    MEAN            reduce using rule 90 (optionList -> String .)
    STANDAR         reduce using rule 90 (optionList -> String .)
    MEDIAN          reduce using rule 90 (optionList -> String .)
    VARIANCE        reduce using rule 90 (optionList -> String .)
    SUM             reduce using rule 90 (optionList -> String .)
    PLUS            shift and go to state 87
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79

  ! TOINT           [ reduce using rule 90 (optionList -> String .) ]
  ! TOSTR           [ reduce using rule 90 (optionList -> String .) ]
  ! TOFLO           [ reduce using rule 90 (optionList -> String .) ]

    funcList                       shift and go to state 86

state 75

    (85) factor -> optionList funcList .

    TIMES           reduce using rule 85 (factor -> optionList funcList .)
    DIVIDE          reduce using rule 85 (factor -> optionList funcList .)
    EXPO            reduce using rule 85 (factor -> optionList funcList .)
    MOD             reduce using rule 85 (factor -> optionList funcList .)
    CICLE1          reduce using rule 85 (factor -> optionList funcList .)
    CICLE2          reduce using rule 85 (factor -> optionList funcList .)
    CICLE3          reduce using rule 85 (factor -> optionList funcList .)
    PLUS            reduce using rule 85 (factor -> optionList funcList .)
    MINUS           reduce using rule 85 (factor -> optionList funcList .)
    TOINT           reduce using rule 85 (factor -> optionList funcList .)
    TOSTR           reduce using rule 85 (factor -> optionList funcList .)
    TOFLO           reduce using rule 85 (factor -> optionList funcList .)
    LENGTH          reduce using rule 85 (factor -> optionList funcList .)
    MEAN            reduce using rule 85 (factor -> optionList funcList .)
    STANDAR         reduce using rule 85 (factor -> optionList funcList .)
    MEDIAN          reduce using rule 85 (factor -> optionList funcList .)
    VARIANCE        reduce using rule 85 (factor -> optionList funcList .)
    SUM             reduce using rule 85 (factor -> optionList funcList .)
    EQUAL           reduce using rule 85 (factor -> optionList funcList .)
    NE              reduce using rule 85 (factor -> optionList funcList .)
    LT              reduce using rule 85 (factor -> optionList funcList .)
    GT              reduce using rule 85 (factor -> optionList funcList .)
    LTE             reduce using rule 85 (factor -> optionList funcList .)
    GTE             reduce using rule 85 (factor -> optionList funcList .)
    AND             reduce using rule 85 (factor -> optionList funcList .)
    OR              reduce using rule 85 (factor -> optionList funcList .)
    and             reduce using rule 85 (factor -> optionList funcList .)
    or              reduce using rule 85 (factor -> optionList funcList .)
    ID              reduce using rule 85 (factor -> optionList funcList .)
    if              reduce using rule 85 (factor -> optionList funcList .)
    case            reduce using rule 85 (factor -> optionList funcList .)
    unless          reduce using rule 85 (factor -> optionList funcList .)
    while           reduce using rule 85 (factor -> optionList funcList .)
    require         reduce using rule 85 (factor -> optionList funcList .)
    puts            reduce using rule 85 (factor -> optionList funcList .)
    print           reduce using rule 85 (factor -> optionList funcList .)
    NUMBER          reduce using rule 85 (factor -> optionList funcList .)
    LPARENT         reduce using rule 85 (factor -> optionList funcList .)
    FLOAT           reduce using rule 85 (factor -> optionList funcList .)
    LSQUARE         reduce using rule 85 (factor -> optionList funcList .)
    TEXT            reduce using rule 85 (factor -> optionList funcList .)
    TEXT2           reduce using rule 85 (factor -> optionList funcList .)
    when            reduce using rule 85 (factor -> optionList funcList .)
    $end            reduce using rule 85 (factor -> optionList funcList .)
    end             reduce using rule 85 (factor -> optionList funcList .)
    else            reduce using rule 85 (factor -> optionList funcList .)
    elsif           reduce using rule 85 (factor -> optionList funcList .)
    RSQUARE         reduce using rule 85 (factor -> optionList funcList .)
    COMMA           reduce using rule 85 (factor -> optionList funcList .)
    RPARENT         reduce using rule 85 (factor -> optionList funcList .)


state 76

    (86) factor -> optionList funcVecList .

    TIMES           reduce using rule 86 (factor -> optionList funcVecList .)
    DIVIDE          reduce using rule 86 (factor -> optionList funcVecList .)
    EXPO            reduce using rule 86 (factor -> optionList funcVecList .)
    MOD             reduce using rule 86 (factor -> optionList funcVecList .)
    CICLE1          reduce using rule 86 (factor -> optionList funcVecList .)
    CICLE2          reduce using rule 86 (factor -> optionList funcVecList .)
    CICLE3          reduce using rule 86 (factor -> optionList funcVecList .)
    PLUS            reduce using rule 86 (factor -> optionList funcVecList .)
    MINUS           reduce using rule 86 (factor -> optionList funcVecList .)
    TOINT           reduce using rule 86 (factor -> optionList funcVecList .)
    TOSTR           reduce using rule 86 (factor -> optionList funcVecList .)
    TOFLO           reduce using rule 86 (factor -> optionList funcVecList .)
    LENGTH          reduce using rule 86 (factor -> optionList funcVecList .)
    MEAN            reduce using rule 86 (factor -> optionList funcVecList .)
    STANDAR         reduce using rule 86 (factor -> optionList funcVecList .)
    MEDIAN          reduce using rule 86 (factor -> optionList funcVecList .)
    VARIANCE        reduce using rule 86 (factor -> optionList funcVecList .)
    SUM             reduce using rule 86 (factor -> optionList funcVecList .)
    EQUAL           reduce using rule 86 (factor -> optionList funcVecList .)
    NE              reduce using rule 86 (factor -> optionList funcVecList .)
    LT              reduce using rule 86 (factor -> optionList funcVecList .)
    GT              reduce using rule 86 (factor -> optionList funcVecList .)
    LTE             reduce using rule 86 (factor -> optionList funcVecList .)
    GTE             reduce using rule 86 (factor -> optionList funcVecList .)
    AND             reduce using rule 86 (factor -> optionList funcVecList .)
    OR              reduce using rule 86 (factor -> optionList funcVecList .)
    and             reduce using rule 86 (factor -> optionList funcVecList .)
    or              reduce using rule 86 (factor -> optionList funcVecList .)
    ID              reduce using rule 86 (factor -> optionList funcVecList .)
    if              reduce using rule 86 (factor -> optionList funcVecList .)
    case            reduce using rule 86 (factor -> optionList funcVecList .)
    unless          reduce using rule 86 (factor -> optionList funcVecList .)
    while           reduce using rule 86 (factor -> optionList funcVecList .)
    require         reduce using rule 86 (factor -> optionList funcVecList .)
    puts            reduce using rule 86 (factor -> optionList funcVecList .)
    print           reduce using rule 86 (factor -> optionList funcVecList .)
    NUMBER          reduce using rule 86 (factor -> optionList funcVecList .)
    LPARENT         reduce using rule 86 (factor -> optionList funcVecList .)
    FLOAT           reduce using rule 86 (factor -> optionList funcVecList .)
    LSQUARE         reduce using rule 86 (factor -> optionList funcVecList .)
    TEXT            reduce using rule 86 (factor -> optionList funcVecList .)
    TEXT2           reduce using rule 86 (factor -> optionList funcVecList .)
    when            reduce using rule 86 (factor -> optionList funcVecList .)
    $end            reduce using rule 86 (factor -> optionList funcVecList .)
    end             reduce using rule 86 (factor -> optionList funcVecList .)
    else            reduce using rule 86 (factor -> optionList funcVecList .)
    elsif           reduce using rule 86 (factor -> optionList funcVecList .)
    RSQUARE         reduce using rule 86 (factor -> optionList funcVecList .)
    COMMA           reduce using rule 86 (factor -> optionList funcVecList .)
    RPARENT         reduce using rule 86 (factor -> optionList funcVecList .)


state 77

    (73) funcList -> TOINT .

    TIMES           reduce using rule 73 (funcList -> TOINT .)
    DIVIDE          reduce using rule 73 (funcList -> TOINT .)
    EXPO            reduce using rule 73 (funcList -> TOINT .)
    MOD             reduce using rule 73 (funcList -> TOINT .)
    CICLE1          reduce using rule 73 (funcList -> TOINT .)
    CICLE2          reduce using rule 73 (funcList -> TOINT .)
    CICLE3          reduce using rule 73 (funcList -> TOINT .)
    PLUS            reduce using rule 73 (funcList -> TOINT .)
    MINUS           reduce using rule 73 (funcList -> TOINT .)
    TOINT           reduce using rule 73 (funcList -> TOINT .)
    TOSTR           reduce using rule 73 (funcList -> TOINT .)
    TOFLO           reduce using rule 73 (funcList -> TOINT .)
    LENGTH          reduce using rule 73 (funcList -> TOINT .)
    MEAN            reduce using rule 73 (funcList -> TOINT .)
    STANDAR         reduce using rule 73 (funcList -> TOINT .)
    MEDIAN          reduce using rule 73 (funcList -> TOINT .)
    VARIANCE        reduce using rule 73 (funcList -> TOINT .)
    SUM             reduce using rule 73 (funcList -> TOINT .)
    EQUAL           reduce using rule 73 (funcList -> TOINT .)
    NE              reduce using rule 73 (funcList -> TOINT .)
    LT              reduce using rule 73 (funcList -> TOINT .)
    GT              reduce using rule 73 (funcList -> TOINT .)
    LTE             reduce using rule 73 (funcList -> TOINT .)
    GTE             reduce using rule 73 (funcList -> TOINT .)
    AND             reduce using rule 73 (funcList -> TOINT .)
    OR              reduce using rule 73 (funcList -> TOINT .)
    and             reduce using rule 73 (funcList -> TOINT .)
    or              reduce using rule 73 (funcList -> TOINT .)
    ID              reduce using rule 73 (funcList -> TOINT .)
    if              reduce using rule 73 (funcList -> TOINT .)
    case            reduce using rule 73 (funcList -> TOINT .)
    unless          reduce using rule 73 (funcList -> TOINT .)
    while           reduce using rule 73 (funcList -> TOINT .)
    require         reduce using rule 73 (funcList -> TOINT .)
    puts            reduce using rule 73 (funcList -> TOINT .)
    print           reduce using rule 73 (funcList -> TOINT .)
    NUMBER          reduce using rule 73 (funcList -> TOINT .)
    LPARENT         reduce using rule 73 (funcList -> TOINT .)
    FLOAT           reduce using rule 73 (funcList -> TOINT .)
    LSQUARE         reduce using rule 73 (funcList -> TOINT .)
    TEXT            reduce using rule 73 (funcList -> TOINT .)
    TEXT2           reduce using rule 73 (funcList -> TOINT .)
    when            reduce using rule 73 (funcList -> TOINT .)
    $end            reduce using rule 73 (funcList -> TOINT .)
    end             reduce using rule 73 (funcList -> TOINT .)
    else            reduce using rule 73 (funcList -> TOINT .)
    elsif           reduce using rule 73 (funcList -> TOINT .)
    RSQUARE         reduce using rule 73 (funcList -> TOINT .)
    COMMA           reduce using rule 73 (funcList -> TOINT .)
    RPARENT         reduce using rule 73 (funcList -> TOINT .)


state 78

    (74) funcList -> TOSTR .

    TIMES           reduce using rule 74 (funcList -> TOSTR .)
    DIVIDE          reduce using rule 74 (funcList -> TOSTR .)
    EXPO            reduce using rule 74 (funcList -> TOSTR .)
    MOD             reduce using rule 74 (funcList -> TOSTR .)
    CICLE1          reduce using rule 74 (funcList -> TOSTR .)
    CICLE2          reduce using rule 74 (funcList -> TOSTR .)
    CICLE3          reduce using rule 74 (funcList -> TOSTR .)
    PLUS            reduce using rule 74 (funcList -> TOSTR .)
    MINUS           reduce using rule 74 (funcList -> TOSTR .)
    TOINT           reduce using rule 74 (funcList -> TOSTR .)
    TOSTR           reduce using rule 74 (funcList -> TOSTR .)
    TOFLO           reduce using rule 74 (funcList -> TOSTR .)
    LENGTH          reduce using rule 74 (funcList -> TOSTR .)
    MEAN            reduce using rule 74 (funcList -> TOSTR .)
    STANDAR         reduce using rule 74 (funcList -> TOSTR .)
    MEDIAN          reduce using rule 74 (funcList -> TOSTR .)
    VARIANCE        reduce using rule 74 (funcList -> TOSTR .)
    SUM             reduce using rule 74 (funcList -> TOSTR .)
    EQUAL           reduce using rule 74 (funcList -> TOSTR .)
    NE              reduce using rule 74 (funcList -> TOSTR .)
    LT              reduce using rule 74 (funcList -> TOSTR .)
    GT              reduce using rule 74 (funcList -> TOSTR .)
    LTE             reduce using rule 74 (funcList -> TOSTR .)
    GTE             reduce using rule 74 (funcList -> TOSTR .)
    AND             reduce using rule 74 (funcList -> TOSTR .)
    OR              reduce using rule 74 (funcList -> TOSTR .)
    and             reduce using rule 74 (funcList -> TOSTR .)
    or              reduce using rule 74 (funcList -> TOSTR .)
    ID              reduce using rule 74 (funcList -> TOSTR .)
    if              reduce using rule 74 (funcList -> TOSTR .)
    case            reduce using rule 74 (funcList -> TOSTR .)
    unless          reduce using rule 74 (funcList -> TOSTR .)
    while           reduce using rule 74 (funcList -> TOSTR .)
    require         reduce using rule 74 (funcList -> TOSTR .)
    puts            reduce using rule 74 (funcList -> TOSTR .)
    print           reduce using rule 74 (funcList -> TOSTR .)
    NUMBER          reduce using rule 74 (funcList -> TOSTR .)
    LPARENT         reduce using rule 74 (funcList -> TOSTR .)
    FLOAT           reduce using rule 74 (funcList -> TOSTR .)
    LSQUARE         reduce using rule 74 (funcList -> TOSTR .)
    TEXT            reduce using rule 74 (funcList -> TOSTR .)
    TEXT2           reduce using rule 74 (funcList -> TOSTR .)
    when            reduce using rule 74 (funcList -> TOSTR .)
    $end            reduce using rule 74 (funcList -> TOSTR .)
    end             reduce using rule 74 (funcList -> TOSTR .)
    else            reduce using rule 74 (funcList -> TOSTR .)
    elsif           reduce using rule 74 (funcList -> TOSTR .)
    RSQUARE         reduce using rule 74 (funcList -> TOSTR .)
    COMMA           reduce using rule 74 (funcList -> TOSTR .)
    RPARENT         reduce using rule 74 (funcList -> TOSTR .)


state 79

    (75) funcList -> TOFLO .

    TIMES           reduce using rule 75 (funcList -> TOFLO .)
    DIVIDE          reduce using rule 75 (funcList -> TOFLO .)
    EXPO            reduce using rule 75 (funcList -> TOFLO .)
    MOD             reduce using rule 75 (funcList -> TOFLO .)
    CICLE1          reduce using rule 75 (funcList -> TOFLO .)
    CICLE2          reduce using rule 75 (funcList -> TOFLO .)
    CICLE3          reduce using rule 75 (funcList -> TOFLO .)
    PLUS            reduce using rule 75 (funcList -> TOFLO .)
    MINUS           reduce using rule 75 (funcList -> TOFLO .)
    TOINT           reduce using rule 75 (funcList -> TOFLO .)
    TOSTR           reduce using rule 75 (funcList -> TOFLO .)
    TOFLO           reduce using rule 75 (funcList -> TOFLO .)
    LENGTH          reduce using rule 75 (funcList -> TOFLO .)
    MEAN            reduce using rule 75 (funcList -> TOFLO .)
    STANDAR         reduce using rule 75 (funcList -> TOFLO .)
    MEDIAN          reduce using rule 75 (funcList -> TOFLO .)
    VARIANCE        reduce using rule 75 (funcList -> TOFLO .)
    SUM             reduce using rule 75 (funcList -> TOFLO .)
    EQUAL           reduce using rule 75 (funcList -> TOFLO .)
    NE              reduce using rule 75 (funcList -> TOFLO .)
    LT              reduce using rule 75 (funcList -> TOFLO .)
    GT              reduce using rule 75 (funcList -> TOFLO .)
    LTE             reduce using rule 75 (funcList -> TOFLO .)
    GTE             reduce using rule 75 (funcList -> TOFLO .)
    AND             reduce using rule 75 (funcList -> TOFLO .)
    OR              reduce using rule 75 (funcList -> TOFLO .)
    and             reduce using rule 75 (funcList -> TOFLO .)
    or              reduce using rule 75 (funcList -> TOFLO .)
    ID              reduce using rule 75 (funcList -> TOFLO .)
    if              reduce using rule 75 (funcList -> TOFLO .)
    case            reduce using rule 75 (funcList -> TOFLO .)
    unless          reduce using rule 75 (funcList -> TOFLO .)
    while           reduce using rule 75 (funcList -> TOFLO .)
    require         reduce using rule 75 (funcList -> TOFLO .)
    puts            reduce using rule 75 (funcList -> TOFLO .)
    print           reduce using rule 75 (funcList -> TOFLO .)
    NUMBER          reduce using rule 75 (funcList -> TOFLO .)
    LPARENT         reduce using rule 75 (funcList -> TOFLO .)
    FLOAT           reduce using rule 75 (funcList -> TOFLO .)
    LSQUARE         reduce using rule 75 (funcList -> TOFLO .)
    TEXT            reduce using rule 75 (funcList -> TOFLO .)
    TEXT2           reduce using rule 75 (funcList -> TOFLO .)
    when            reduce using rule 75 (funcList -> TOFLO .)
    $end            reduce using rule 75 (funcList -> TOFLO .)
    end             reduce using rule 75 (funcList -> TOFLO .)
    else            reduce using rule 75 (funcList -> TOFLO .)
    elsif           reduce using rule 75 (funcList -> TOFLO .)
    RSQUARE         reduce using rule 75 (funcList -> TOFLO .)
    COMMA           reduce using rule 75 (funcList -> TOFLO .)
    RPARENT         reduce using rule 75 (funcList -> TOFLO .)


state 80

    (115) funcVecList -> LENGTH .

    TIMES           reduce using rule 115 (funcVecList -> LENGTH .)
    DIVIDE          reduce using rule 115 (funcVecList -> LENGTH .)
    EXPO            reduce using rule 115 (funcVecList -> LENGTH .)
    MOD             reduce using rule 115 (funcVecList -> LENGTH .)
    CICLE1          reduce using rule 115 (funcVecList -> LENGTH .)
    CICLE2          reduce using rule 115 (funcVecList -> LENGTH .)
    CICLE3          reduce using rule 115 (funcVecList -> LENGTH .)
    PLUS            reduce using rule 115 (funcVecList -> LENGTH .)
    MINUS           reduce using rule 115 (funcVecList -> LENGTH .)
    TOINT           reduce using rule 115 (funcVecList -> LENGTH .)
    TOSTR           reduce using rule 115 (funcVecList -> LENGTH .)
    TOFLO           reduce using rule 115 (funcVecList -> LENGTH .)
    LENGTH          reduce using rule 115 (funcVecList -> LENGTH .)
    MEAN            reduce using rule 115 (funcVecList -> LENGTH .)
    STANDAR         reduce using rule 115 (funcVecList -> LENGTH .)
    MEDIAN          reduce using rule 115 (funcVecList -> LENGTH .)
    VARIANCE        reduce using rule 115 (funcVecList -> LENGTH .)
    SUM             reduce using rule 115 (funcVecList -> LENGTH .)
    EQUAL           reduce using rule 115 (funcVecList -> LENGTH .)
    NE              reduce using rule 115 (funcVecList -> LENGTH .)
    LT              reduce using rule 115 (funcVecList -> LENGTH .)
    GT              reduce using rule 115 (funcVecList -> LENGTH .)
    LTE             reduce using rule 115 (funcVecList -> LENGTH .)
    GTE             reduce using rule 115 (funcVecList -> LENGTH .)
    AND             reduce using rule 115 (funcVecList -> LENGTH .)
    OR              reduce using rule 115 (funcVecList -> LENGTH .)
    and             reduce using rule 115 (funcVecList -> LENGTH .)
    or              reduce using rule 115 (funcVecList -> LENGTH .)
    ID              reduce using rule 115 (funcVecList -> LENGTH .)
    if              reduce using rule 115 (funcVecList -> LENGTH .)
    case            reduce using rule 115 (funcVecList -> LENGTH .)
    unless          reduce using rule 115 (funcVecList -> LENGTH .)
    while           reduce using rule 115 (funcVecList -> LENGTH .)
    require         reduce using rule 115 (funcVecList -> LENGTH .)
    puts            reduce using rule 115 (funcVecList -> LENGTH .)
    print           reduce using rule 115 (funcVecList -> LENGTH .)
    NUMBER          reduce using rule 115 (funcVecList -> LENGTH .)
    LPARENT         reduce using rule 115 (funcVecList -> LENGTH .)
    FLOAT           reduce using rule 115 (funcVecList -> LENGTH .)
    LSQUARE         reduce using rule 115 (funcVecList -> LENGTH .)
    TEXT            reduce using rule 115 (funcVecList -> LENGTH .)
    TEXT2           reduce using rule 115 (funcVecList -> LENGTH .)
    when            reduce using rule 115 (funcVecList -> LENGTH .)
    $end            reduce using rule 115 (funcVecList -> LENGTH .)
    end             reduce using rule 115 (funcVecList -> LENGTH .)
    else            reduce using rule 115 (funcVecList -> LENGTH .)
    elsif           reduce using rule 115 (funcVecList -> LENGTH .)
    RSQUARE         reduce using rule 115 (funcVecList -> LENGTH .)
    COMMA           reduce using rule 115 (funcVecList -> LENGTH .)
    RPARENT         reduce using rule 115 (funcVecList -> LENGTH .)


state 81

    (116) funcVecList -> MEAN .

    TIMES           reduce using rule 116 (funcVecList -> MEAN .)
    DIVIDE          reduce using rule 116 (funcVecList -> MEAN .)
    EXPO            reduce using rule 116 (funcVecList -> MEAN .)
    MOD             reduce using rule 116 (funcVecList -> MEAN .)
    CICLE1          reduce using rule 116 (funcVecList -> MEAN .)
    CICLE2          reduce using rule 116 (funcVecList -> MEAN .)
    CICLE3          reduce using rule 116 (funcVecList -> MEAN .)
    PLUS            reduce using rule 116 (funcVecList -> MEAN .)
    MINUS           reduce using rule 116 (funcVecList -> MEAN .)
    TOINT           reduce using rule 116 (funcVecList -> MEAN .)
    TOSTR           reduce using rule 116 (funcVecList -> MEAN .)
    TOFLO           reduce using rule 116 (funcVecList -> MEAN .)
    LENGTH          reduce using rule 116 (funcVecList -> MEAN .)
    MEAN            reduce using rule 116 (funcVecList -> MEAN .)
    STANDAR         reduce using rule 116 (funcVecList -> MEAN .)
    MEDIAN          reduce using rule 116 (funcVecList -> MEAN .)
    VARIANCE        reduce using rule 116 (funcVecList -> MEAN .)
    SUM             reduce using rule 116 (funcVecList -> MEAN .)
    EQUAL           reduce using rule 116 (funcVecList -> MEAN .)
    NE              reduce using rule 116 (funcVecList -> MEAN .)
    LT              reduce using rule 116 (funcVecList -> MEAN .)
    GT              reduce using rule 116 (funcVecList -> MEAN .)
    LTE             reduce using rule 116 (funcVecList -> MEAN .)
    GTE             reduce using rule 116 (funcVecList -> MEAN .)
    AND             reduce using rule 116 (funcVecList -> MEAN .)
    OR              reduce using rule 116 (funcVecList -> MEAN .)
    and             reduce using rule 116 (funcVecList -> MEAN .)
    or              reduce using rule 116 (funcVecList -> MEAN .)
    ID              reduce using rule 116 (funcVecList -> MEAN .)
    if              reduce using rule 116 (funcVecList -> MEAN .)
    case            reduce using rule 116 (funcVecList -> MEAN .)
    unless          reduce using rule 116 (funcVecList -> MEAN .)
    while           reduce using rule 116 (funcVecList -> MEAN .)
    require         reduce using rule 116 (funcVecList -> MEAN .)
    puts            reduce using rule 116 (funcVecList -> MEAN .)
    print           reduce using rule 116 (funcVecList -> MEAN .)
    NUMBER          reduce using rule 116 (funcVecList -> MEAN .)
    LPARENT         reduce using rule 116 (funcVecList -> MEAN .)
    FLOAT           reduce using rule 116 (funcVecList -> MEAN .)
    LSQUARE         reduce using rule 116 (funcVecList -> MEAN .)
    TEXT            reduce using rule 116 (funcVecList -> MEAN .)
    TEXT2           reduce using rule 116 (funcVecList -> MEAN .)
    when            reduce using rule 116 (funcVecList -> MEAN .)
    $end            reduce using rule 116 (funcVecList -> MEAN .)
    end             reduce using rule 116 (funcVecList -> MEAN .)
    else            reduce using rule 116 (funcVecList -> MEAN .)
    elsif           reduce using rule 116 (funcVecList -> MEAN .)
    RSQUARE         reduce using rule 116 (funcVecList -> MEAN .)
    COMMA           reduce using rule 116 (funcVecList -> MEAN .)
    RPARENT         reduce using rule 116 (funcVecList -> MEAN .)


state 82

    (117) funcVecList -> STANDAR .

    TIMES           reduce using rule 117 (funcVecList -> STANDAR .)
    DIVIDE          reduce using rule 117 (funcVecList -> STANDAR .)
    EXPO            reduce using rule 117 (funcVecList -> STANDAR .)
    MOD             reduce using rule 117 (funcVecList -> STANDAR .)
    CICLE1          reduce using rule 117 (funcVecList -> STANDAR .)
    CICLE2          reduce using rule 117 (funcVecList -> STANDAR .)
    CICLE3          reduce using rule 117 (funcVecList -> STANDAR .)
    PLUS            reduce using rule 117 (funcVecList -> STANDAR .)
    MINUS           reduce using rule 117 (funcVecList -> STANDAR .)
    TOINT           reduce using rule 117 (funcVecList -> STANDAR .)
    TOSTR           reduce using rule 117 (funcVecList -> STANDAR .)
    TOFLO           reduce using rule 117 (funcVecList -> STANDAR .)
    LENGTH          reduce using rule 117 (funcVecList -> STANDAR .)
    MEAN            reduce using rule 117 (funcVecList -> STANDAR .)
    STANDAR         reduce using rule 117 (funcVecList -> STANDAR .)
    MEDIAN          reduce using rule 117 (funcVecList -> STANDAR .)
    VARIANCE        reduce using rule 117 (funcVecList -> STANDAR .)
    SUM             reduce using rule 117 (funcVecList -> STANDAR .)
    EQUAL           reduce using rule 117 (funcVecList -> STANDAR .)
    NE              reduce using rule 117 (funcVecList -> STANDAR .)
    LT              reduce using rule 117 (funcVecList -> STANDAR .)
    GT              reduce using rule 117 (funcVecList -> STANDAR .)
    LTE             reduce using rule 117 (funcVecList -> STANDAR .)
    GTE             reduce using rule 117 (funcVecList -> STANDAR .)
    AND             reduce using rule 117 (funcVecList -> STANDAR .)
    OR              reduce using rule 117 (funcVecList -> STANDAR .)
    and             reduce using rule 117 (funcVecList -> STANDAR .)
    or              reduce using rule 117 (funcVecList -> STANDAR .)
    ID              reduce using rule 117 (funcVecList -> STANDAR .)
    if              reduce using rule 117 (funcVecList -> STANDAR .)
    case            reduce using rule 117 (funcVecList -> STANDAR .)
    unless          reduce using rule 117 (funcVecList -> STANDAR .)
    while           reduce using rule 117 (funcVecList -> STANDAR .)
    require         reduce using rule 117 (funcVecList -> STANDAR .)
    puts            reduce using rule 117 (funcVecList -> STANDAR .)
    print           reduce using rule 117 (funcVecList -> STANDAR .)
    NUMBER          reduce using rule 117 (funcVecList -> STANDAR .)
    LPARENT         reduce using rule 117 (funcVecList -> STANDAR .)
    FLOAT           reduce using rule 117 (funcVecList -> STANDAR .)
    LSQUARE         reduce using rule 117 (funcVecList -> STANDAR .)
    TEXT            reduce using rule 117 (funcVecList -> STANDAR .)
    TEXT2           reduce using rule 117 (funcVecList -> STANDAR .)
    when            reduce using rule 117 (funcVecList -> STANDAR .)
    $end            reduce using rule 117 (funcVecList -> STANDAR .)
    end             reduce using rule 117 (funcVecList -> STANDAR .)
    else            reduce using rule 117 (funcVecList -> STANDAR .)
    elsif           reduce using rule 117 (funcVecList -> STANDAR .)
    RSQUARE         reduce using rule 117 (funcVecList -> STANDAR .)
    COMMA           reduce using rule 117 (funcVecList -> STANDAR .)
    RPARENT         reduce using rule 117 (funcVecList -> STANDAR .)


state 83

    (118) funcVecList -> MEDIAN .

    TIMES           reduce using rule 118 (funcVecList -> MEDIAN .)
    DIVIDE          reduce using rule 118 (funcVecList -> MEDIAN .)
    EXPO            reduce using rule 118 (funcVecList -> MEDIAN .)
    MOD             reduce using rule 118 (funcVecList -> MEDIAN .)
    CICLE1          reduce using rule 118 (funcVecList -> MEDIAN .)
    CICLE2          reduce using rule 118 (funcVecList -> MEDIAN .)
    CICLE3          reduce using rule 118 (funcVecList -> MEDIAN .)
    PLUS            reduce using rule 118 (funcVecList -> MEDIAN .)
    MINUS           reduce using rule 118 (funcVecList -> MEDIAN .)
    TOINT           reduce using rule 118 (funcVecList -> MEDIAN .)
    TOSTR           reduce using rule 118 (funcVecList -> MEDIAN .)
    TOFLO           reduce using rule 118 (funcVecList -> MEDIAN .)
    LENGTH          reduce using rule 118 (funcVecList -> MEDIAN .)
    MEAN            reduce using rule 118 (funcVecList -> MEDIAN .)
    STANDAR         reduce using rule 118 (funcVecList -> MEDIAN .)
    MEDIAN          reduce using rule 118 (funcVecList -> MEDIAN .)
    VARIANCE        reduce using rule 118 (funcVecList -> MEDIAN .)
    SUM             reduce using rule 118 (funcVecList -> MEDIAN .)
    EQUAL           reduce using rule 118 (funcVecList -> MEDIAN .)
    NE              reduce using rule 118 (funcVecList -> MEDIAN .)
    LT              reduce using rule 118 (funcVecList -> MEDIAN .)
    GT              reduce using rule 118 (funcVecList -> MEDIAN .)
    LTE             reduce using rule 118 (funcVecList -> MEDIAN .)
    GTE             reduce using rule 118 (funcVecList -> MEDIAN .)
    AND             reduce using rule 118 (funcVecList -> MEDIAN .)
    OR              reduce using rule 118 (funcVecList -> MEDIAN .)
    and             reduce using rule 118 (funcVecList -> MEDIAN .)
    or              reduce using rule 118 (funcVecList -> MEDIAN .)
    ID              reduce using rule 118 (funcVecList -> MEDIAN .)
    if              reduce using rule 118 (funcVecList -> MEDIAN .)
    case            reduce using rule 118 (funcVecList -> MEDIAN .)
    unless          reduce using rule 118 (funcVecList -> MEDIAN .)
    while           reduce using rule 118 (funcVecList -> MEDIAN .)
    require         reduce using rule 118 (funcVecList -> MEDIAN .)
    puts            reduce using rule 118 (funcVecList -> MEDIAN .)
    print           reduce using rule 118 (funcVecList -> MEDIAN .)
    NUMBER          reduce using rule 118 (funcVecList -> MEDIAN .)
    LPARENT         reduce using rule 118 (funcVecList -> MEDIAN .)
    FLOAT           reduce using rule 118 (funcVecList -> MEDIAN .)
    LSQUARE         reduce using rule 118 (funcVecList -> MEDIAN .)
    TEXT            reduce using rule 118 (funcVecList -> MEDIAN .)
    TEXT2           reduce using rule 118 (funcVecList -> MEDIAN .)
    when            reduce using rule 118 (funcVecList -> MEDIAN .)
    $end            reduce using rule 118 (funcVecList -> MEDIAN .)
    end             reduce using rule 118 (funcVecList -> MEDIAN .)
    else            reduce using rule 118 (funcVecList -> MEDIAN .)
    elsif           reduce using rule 118 (funcVecList -> MEDIAN .)
    RSQUARE         reduce using rule 118 (funcVecList -> MEDIAN .)
    COMMA           reduce using rule 118 (funcVecList -> MEDIAN .)
    RPARENT         reduce using rule 118 (funcVecList -> MEDIAN .)


state 84

    (119) funcVecList -> VARIANCE .

    TIMES           reduce using rule 119 (funcVecList -> VARIANCE .)
    DIVIDE          reduce using rule 119 (funcVecList -> VARIANCE .)
    EXPO            reduce using rule 119 (funcVecList -> VARIANCE .)
    MOD             reduce using rule 119 (funcVecList -> VARIANCE .)
    CICLE1          reduce using rule 119 (funcVecList -> VARIANCE .)
    CICLE2          reduce using rule 119 (funcVecList -> VARIANCE .)
    CICLE3          reduce using rule 119 (funcVecList -> VARIANCE .)
    PLUS            reduce using rule 119 (funcVecList -> VARIANCE .)
    MINUS           reduce using rule 119 (funcVecList -> VARIANCE .)
    TOINT           reduce using rule 119 (funcVecList -> VARIANCE .)
    TOSTR           reduce using rule 119 (funcVecList -> VARIANCE .)
    TOFLO           reduce using rule 119 (funcVecList -> VARIANCE .)
    LENGTH          reduce using rule 119 (funcVecList -> VARIANCE .)
    MEAN            reduce using rule 119 (funcVecList -> VARIANCE .)
    STANDAR         reduce using rule 119 (funcVecList -> VARIANCE .)
    MEDIAN          reduce using rule 119 (funcVecList -> VARIANCE .)
    VARIANCE        reduce using rule 119 (funcVecList -> VARIANCE .)
    SUM             reduce using rule 119 (funcVecList -> VARIANCE .)
    EQUAL           reduce using rule 119 (funcVecList -> VARIANCE .)
    NE              reduce using rule 119 (funcVecList -> VARIANCE .)
    LT              reduce using rule 119 (funcVecList -> VARIANCE .)
    GT              reduce using rule 119 (funcVecList -> VARIANCE .)
    LTE             reduce using rule 119 (funcVecList -> VARIANCE .)
    GTE             reduce using rule 119 (funcVecList -> VARIANCE .)
    AND             reduce using rule 119 (funcVecList -> VARIANCE .)
    OR              reduce using rule 119 (funcVecList -> VARIANCE .)
    and             reduce using rule 119 (funcVecList -> VARIANCE .)
    or              reduce using rule 119 (funcVecList -> VARIANCE .)
    ID              reduce using rule 119 (funcVecList -> VARIANCE .)
    if              reduce using rule 119 (funcVecList -> VARIANCE .)
    case            reduce using rule 119 (funcVecList -> VARIANCE .)
    unless          reduce using rule 119 (funcVecList -> VARIANCE .)
    while           reduce using rule 119 (funcVecList -> VARIANCE .)
    require         reduce using rule 119 (funcVecList -> VARIANCE .)
    puts            reduce using rule 119 (funcVecList -> VARIANCE .)
    print           reduce using rule 119 (funcVecList -> VARIANCE .)
    NUMBER          reduce using rule 119 (funcVecList -> VARIANCE .)
    LPARENT         reduce using rule 119 (funcVecList -> VARIANCE .)
    FLOAT           reduce using rule 119 (funcVecList -> VARIANCE .)
    LSQUARE         reduce using rule 119 (funcVecList -> VARIANCE .)
    TEXT            reduce using rule 119 (funcVecList -> VARIANCE .)
    TEXT2           reduce using rule 119 (funcVecList -> VARIANCE .)
    when            reduce using rule 119 (funcVecList -> VARIANCE .)
    $end            reduce using rule 119 (funcVecList -> VARIANCE .)
    end             reduce using rule 119 (funcVecList -> VARIANCE .)
    else            reduce using rule 119 (funcVecList -> VARIANCE .)
    elsif           reduce using rule 119 (funcVecList -> VARIANCE .)
    RSQUARE         reduce using rule 119 (funcVecList -> VARIANCE .)
    COMMA           reduce using rule 119 (funcVecList -> VARIANCE .)
    RPARENT         reduce using rule 119 (funcVecList -> VARIANCE .)


state 85

    (120) funcVecList -> SUM .

    TIMES           reduce using rule 120 (funcVecList -> SUM .)
    DIVIDE          reduce using rule 120 (funcVecList -> SUM .)
    EXPO            reduce using rule 120 (funcVecList -> SUM .)
    MOD             reduce using rule 120 (funcVecList -> SUM .)
    CICLE1          reduce using rule 120 (funcVecList -> SUM .)
    CICLE2          reduce using rule 120 (funcVecList -> SUM .)
    CICLE3          reduce using rule 120 (funcVecList -> SUM .)
    PLUS            reduce using rule 120 (funcVecList -> SUM .)
    MINUS           reduce using rule 120 (funcVecList -> SUM .)
    TOINT           reduce using rule 120 (funcVecList -> SUM .)
    TOSTR           reduce using rule 120 (funcVecList -> SUM .)
    TOFLO           reduce using rule 120 (funcVecList -> SUM .)
    LENGTH          reduce using rule 120 (funcVecList -> SUM .)
    MEAN            reduce using rule 120 (funcVecList -> SUM .)
    STANDAR         reduce using rule 120 (funcVecList -> SUM .)
    MEDIAN          reduce using rule 120 (funcVecList -> SUM .)
    VARIANCE        reduce using rule 120 (funcVecList -> SUM .)
    SUM             reduce using rule 120 (funcVecList -> SUM .)
    EQUAL           reduce using rule 120 (funcVecList -> SUM .)
    NE              reduce using rule 120 (funcVecList -> SUM .)
    LT              reduce using rule 120 (funcVecList -> SUM .)
    GT              reduce using rule 120 (funcVecList -> SUM .)
    LTE             reduce using rule 120 (funcVecList -> SUM .)
    GTE             reduce using rule 120 (funcVecList -> SUM .)
    AND             reduce using rule 120 (funcVecList -> SUM .)
    OR              reduce using rule 120 (funcVecList -> SUM .)
    and             reduce using rule 120 (funcVecList -> SUM .)
    or              reduce using rule 120 (funcVecList -> SUM .)
    ID              reduce using rule 120 (funcVecList -> SUM .)
    if              reduce using rule 120 (funcVecList -> SUM .)
    case            reduce using rule 120 (funcVecList -> SUM .)
    unless          reduce using rule 120 (funcVecList -> SUM .)
    while           reduce using rule 120 (funcVecList -> SUM .)
    require         reduce using rule 120 (funcVecList -> SUM .)
    puts            reduce using rule 120 (funcVecList -> SUM .)
    print           reduce using rule 120 (funcVecList -> SUM .)
    NUMBER          reduce using rule 120 (funcVecList -> SUM .)
    LPARENT         reduce using rule 120 (funcVecList -> SUM .)
    FLOAT           reduce using rule 120 (funcVecList -> SUM .)
    LSQUARE         reduce using rule 120 (funcVecList -> SUM .)
    TEXT            reduce using rule 120 (funcVecList -> SUM .)
    TEXT2           reduce using rule 120 (funcVecList -> SUM .)
    when            reduce using rule 120 (funcVecList -> SUM .)
    $end            reduce using rule 120 (funcVecList -> SUM .)
    end             reduce using rule 120 (funcVecList -> SUM .)
    else            reduce using rule 120 (funcVecList -> SUM .)
    elsif           reduce using rule 120 (funcVecList -> SUM .)
    RSQUARE         reduce using rule 120 (funcVecList -> SUM .)
    COMMA           reduce using rule 120 (funcVecList -> SUM .)
    RPARENT         reduce using rule 120 (funcVecList -> SUM .)


state 86

    (87) factor -> String funcList .

    TIMES           reduce using rule 87 (factor -> String funcList .)
    DIVIDE          reduce using rule 87 (factor -> String funcList .)
    EXPO            reduce using rule 87 (factor -> String funcList .)
    MOD             reduce using rule 87 (factor -> String funcList .)
    CICLE1          reduce using rule 87 (factor -> String funcList .)
    CICLE2          reduce using rule 87 (factor -> String funcList .)
    CICLE3          reduce using rule 87 (factor -> String funcList .)
    PLUS            reduce using rule 87 (factor -> String funcList .)
    MINUS           reduce using rule 87 (factor -> String funcList .)
    TOINT           reduce using rule 87 (factor -> String funcList .)
    TOSTR           reduce using rule 87 (factor -> String funcList .)
    TOFLO           reduce using rule 87 (factor -> String funcList .)
    LENGTH          reduce using rule 87 (factor -> String funcList .)
    MEAN            reduce using rule 87 (factor -> String funcList .)
    STANDAR         reduce using rule 87 (factor -> String funcList .)
    MEDIAN          reduce using rule 87 (factor -> String funcList .)
    VARIANCE        reduce using rule 87 (factor -> String funcList .)
    SUM             reduce using rule 87 (factor -> String funcList .)
    EQUAL           reduce using rule 87 (factor -> String funcList .)
    NE              reduce using rule 87 (factor -> String funcList .)
    LT              reduce using rule 87 (factor -> String funcList .)
    GT              reduce using rule 87 (factor -> String funcList .)
    LTE             reduce using rule 87 (factor -> String funcList .)
    GTE             reduce using rule 87 (factor -> String funcList .)
    AND             reduce using rule 87 (factor -> String funcList .)
    OR              reduce using rule 87 (factor -> String funcList .)
    and             reduce using rule 87 (factor -> String funcList .)
    or              reduce using rule 87 (factor -> String funcList .)
    ID              reduce using rule 87 (factor -> String funcList .)
    if              reduce using rule 87 (factor -> String funcList .)
    case            reduce using rule 87 (factor -> String funcList .)
    unless          reduce using rule 87 (factor -> String funcList .)
    while           reduce using rule 87 (factor -> String funcList .)
    require         reduce using rule 87 (factor -> String funcList .)
    puts            reduce using rule 87 (factor -> String funcList .)
    print           reduce using rule 87 (factor -> String funcList .)
    NUMBER          reduce using rule 87 (factor -> String funcList .)
    LPARENT         reduce using rule 87 (factor -> String funcList .)
    FLOAT           reduce using rule 87 (factor -> String funcList .)
    LSQUARE         reduce using rule 87 (factor -> String funcList .)
    TEXT            reduce using rule 87 (factor -> String funcList .)
    TEXT2           reduce using rule 87 (factor -> String funcList .)
    when            reduce using rule 87 (factor -> String funcList .)
    $end            reduce using rule 87 (factor -> String funcList .)
    end             reduce using rule 87 (factor -> String funcList .)
    else            reduce using rule 87 (factor -> String funcList .)
    elsif           reduce using rule 87 (factor -> String funcList .)
    RSQUARE         reduce using rule 87 (factor -> String funcList .)
    COMMA           reduce using rule 87 (factor -> String funcList .)
    RPARENT         reduce using rule 87 (factor -> String funcList .)


state 87

    (100) String -> String PLUS . textList
    (101) String -> String PLUS . ID
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 132
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    textList                       shift and go to state 131

state 88

    (5) statement -> ID ASSIGN expression .
    (68) expression -> expression . addingOperator term
    (97) stringList -> expression . PLUS String
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 5 (statement -> ID ASSIGN expression .)
    if              reduce using rule 5 (statement -> ID ASSIGN expression .)
    case            reduce using rule 5 (statement -> ID ASSIGN expression .)
    unless          reduce using rule 5 (statement -> ID ASSIGN expression .)
    while           reduce using rule 5 (statement -> ID ASSIGN expression .)
    require         reduce using rule 5 (statement -> ID ASSIGN expression .)
    puts            reduce using rule 5 (statement -> ID ASSIGN expression .)
    print           reduce using rule 5 (statement -> ID ASSIGN expression .)
    NUMBER          reduce using rule 5 (statement -> ID ASSIGN expression .)
    LPARENT         reduce using rule 5 (statement -> ID ASSIGN expression .)
    FLOAT           reduce using rule 5 (statement -> ID ASSIGN expression .)
    LSQUARE         reduce using rule 5 (statement -> ID ASSIGN expression .)
    TEXT            reduce using rule 5 (statement -> ID ASSIGN expression .)
    TEXT2           reduce using rule 5 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 5 (statement -> ID ASSIGN expression .)
    end             reduce using rule 5 (statement -> ID ASSIGN expression .)
    else            reduce using rule 5 (statement -> ID ASSIGN expression .)
    elsif           reduce using rule 5 (statement -> ID ASSIGN expression .)
    when            reduce using rule 5 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 117
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 5 (statement -> ID ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 5 (statement -> ID ASSIGN expression .) ]

    addingOperator                 shift and go to state 39

state 89

    (6) statement -> ID ASSIGN stringList .
    (92) stringList -> stringList . PLUS expression
    (93) stringList -> stringList . PLUS String
    (94) stringList -> stringList . PLUS boolean
    (95) stringList -> stringList . PLUS array

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 6 (statement -> ID ASSIGN stringList .)
    if              reduce using rule 6 (statement -> ID ASSIGN stringList .)
    case            reduce using rule 6 (statement -> ID ASSIGN stringList .)
    unless          reduce using rule 6 (statement -> ID ASSIGN stringList .)
    while           reduce using rule 6 (statement -> ID ASSIGN stringList .)
    require         reduce using rule 6 (statement -> ID ASSIGN stringList .)
    puts            reduce using rule 6 (statement -> ID ASSIGN stringList .)
    print           reduce using rule 6 (statement -> ID ASSIGN stringList .)
    MINUS           reduce using rule 6 (statement -> ID ASSIGN stringList .)
    NUMBER          reduce using rule 6 (statement -> ID ASSIGN stringList .)
    LPARENT         reduce using rule 6 (statement -> ID ASSIGN stringList .)
    FLOAT           reduce using rule 6 (statement -> ID ASSIGN stringList .)
    LSQUARE         reduce using rule 6 (statement -> ID ASSIGN stringList .)
    TEXT            reduce using rule 6 (statement -> ID ASSIGN stringList .)
    TEXT2           reduce using rule 6 (statement -> ID ASSIGN stringList .)
    $end            reduce using rule 6 (statement -> ID ASSIGN stringList .)
    end             reduce using rule 6 (statement -> ID ASSIGN stringList .)
    else            reduce using rule 6 (statement -> ID ASSIGN stringList .)
    elsif           reduce using rule 6 (statement -> ID ASSIGN stringList .)
    when            reduce using rule 6 (statement -> ID ASSIGN stringList .)
    PLUS            shift and go to state 118

  ! PLUS            [ reduce using rule 6 (statement -> ID ASSIGN stringList .) ]


state 90

    (7) statement -> ID ASSIGN boolean .
    (96) stringList -> boolean . PLUS String

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 7 (statement -> ID ASSIGN boolean .)
    if              reduce using rule 7 (statement -> ID ASSIGN boolean .)
    case            reduce using rule 7 (statement -> ID ASSIGN boolean .)
    unless          reduce using rule 7 (statement -> ID ASSIGN boolean .)
    while           reduce using rule 7 (statement -> ID ASSIGN boolean .)
    require         reduce using rule 7 (statement -> ID ASSIGN boolean .)
    puts            reduce using rule 7 (statement -> ID ASSIGN boolean .)
    print           reduce using rule 7 (statement -> ID ASSIGN boolean .)
    MINUS           reduce using rule 7 (statement -> ID ASSIGN boolean .)
    NUMBER          reduce using rule 7 (statement -> ID ASSIGN boolean .)
    LPARENT         reduce using rule 7 (statement -> ID ASSIGN boolean .)
    FLOAT           reduce using rule 7 (statement -> ID ASSIGN boolean .)
    LSQUARE         reduce using rule 7 (statement -> ID ASSIGN boolean .)
    TEXT            reduce using rule 7 (statement -> ID ASSIGN boolean .)
    TEXT2           reduce using rule 7 (statement -> ID ASSIGN boolean .)
    $end            reduce using rule 7 (statement -> ID ASSIGN boolean .)
    end             reduce using rule 7 (statement -> ID ASSIGN boolean .)
    else            reduce using rule 7 (statement -> ID ASSIGN boolean .)
    elsif           reduce using rule 7 (statement -> ID ASSIGN boolean .)
    when            reduce using rule 7 (statement -> ID ASSIGN boolean .)
    PLUS            shift and go to state 119

  ! PLUS            [ reduce using rule 7 (statement -> ID ASSIGN boolean .) ]


state 91

    (8) statement -> ID ASSIGN array .
    (98) stringList -> array . PLUS String
    (89) optionList -> array .

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 8 (statement -> ID ASSIGN array .)
    if              reduce using rule 8 (statement -> ID ASSIGN array .)
    case            reduce using rule 8 (statement -> ID ASSIGN array .)
    unless          reduce using rule 8 (statement -> ID ASSIGN array .)
    while           reduce using rule 8 (statement -> ID ASSIGN array .)
    require         reduce using rule 8 (statement -> ID ASSIGN array .)
    puts            reduce using rule 8 (statement -> ID ASSIGN array .)
    print           reduce using rule 8 (statement -> ID ASSIGN array .)
    MINUS           reduce using rule 8 (statement -> ID ASSIGN array .)
    NUMBER          reduce using rule 8 (statement -> ID ASSIGN array .)
    LPARENT         reduce using rule 8 (statement -> ID ASSIGN array .)
    FLOAT           reduce using rule 8 (statement -> ID ASSIGN array .)
    LSQUARE         reduce using rule 8 (statement -> ID ASSIGN array .)
    TEXT            reduce using rule 8 (statement -> ID ASSIGN array .)
    TEXT2           reduce using rule 8 (statement -> ID ASSIGN array .)
    $end            reduce using rule 8 (statement -> ID ASSIGN array .)
    end             reduce using rule 8 (statement -> ID ASSIGN array .)
    else            reduce using rule 8 (statement -> ID ASSIGN array .)
    elsif           reduce using rule 8 (statement -> ID ASSIGN array .)
    when            reduce using rule 8 (statement -> ID ASSIGN array .)
    PLUS            shift and go to state 120
    TOINT           reduce using rule 89 (optionList -> array .)
    TOSTR           reduce using rule 89 (optionList -> array .)
    TOFLO           reduce using rule 89 (optionList -> array .)
    LENGTH          reduce using rule 89 (optionList -> array .)
    MEAN            reduce using rule 89 (optionList -> array .)
    STANDAR         reduce using rule 89 (optionList -> array .)
    MEDIAN          reduce using rule 89 (optionList -> array .)
    VARIANCE        reduce using rule 89 (optionList -> array .)
    SUM             reduce using rule 89 (optionList -> array .)

  ! PLUS            [ reduce using rule 8 (statement -> ID ASSIGN array .) ]


state 92

    (21) statement -> ID ASSIGN KeyEntry .

    ID              reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    if              reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    case            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    unless          reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    while           reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    require         reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    puts            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    print           reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    PLUS            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    MINUS           reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    NUMBER          reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    LPARENT         reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    FLOAT           reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    LSQUARE         reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    TEXT            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    TEXT2           reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    $end            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    end             reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    else            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    elsif           reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)
    when            reduce using rule 21 (statement -> ID ASSIGN KeyEntry .)


state 93

    (31) KeyEntry -> KEYB1 .
    (32) KeyEntry -> KEYB1 . TOINT
    (33) KeyEntry -> KEYB1 . TOFLO

    ID              reduce using rule 31 (KeyEntry -> KEYB1 .)
    if              reduce using rule 31 (KeyEntry -> KEYB1 .)
    case            reduce using rule 31 (KeyEntry -> KEYB1 .)
    unless          reduce using rule 31 (KeyEntry -> KEYB1 .)
    while           reduce using rule 31 (KeyEntry -> KEYB1 .)
    require         reduce using rule 31 (KeyEntry -> KEYB1 .)
    puts            reduce using rule 31 (KeyEntry -> KEYB1 .)
    print           reduce using rule 31 (KeyEntry -> KEYB1 .)
    PLUS            reduce using rule 31 (KeyEntry -> KEYB1 .)
    MINUS           reduce using rule 31 (KeyEntry -> KEYB1 .)
    NUMBER          reduce using rule 31 (KeyEntry -> KEYB1 .)
    LPARENT         reduce using rule 31 (KeyEntry -> KEYB1 .)
    FLOAT           reduce using rule 31 (KeyEntry -> KEYB1 .)
    LSQUARE         reduce using rule 31 (KeyEntry -> KEYB1 .)
    TEXT            reduce using rule 31 (KeyEntry -> KEYB1 .)
    TEXT2           reduce using rule 31 (KeyEntry -> KEYB1 .)
    $end            reduce using rule 31 (KeyEntry -> KEYB1 .)
    end             reduce using rule 31 (KeyEntry -> KEYB1 .)
    else            reduce using rule 31 (KeyEntry -> KEYB1 .)
    elsif           reduce using rule 31 (KeyEntry -> KEYB1 .)
    when            reduce using rule 31 (KeyEntry -> KEYB1 .)
    TOINT           shift and go to state 133
    TOFLO           shift and go to state 134


state 94

    (22) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN expression
    (23) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN stringList
    (24) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN boolean
    (25) statement -> ID LSQUARE arrayIdList . RSQUARE ASSIGN array
    (28) statement -> ID LSQUARE arrayIdList . RSQUARE assigList expression

    RSQUARE         shift and go to state 135


state 95

    (84) factor -> ID LSQUARE expression . RSQUARE
    (34) arrayIdList -> expression . COMMA expression
    (35) arrayIdList -> expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for RSQUARE resolved as shift
    RSQUARE         shift and go to state 136
    COMMA           shift and go to state 137
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! RSQUARE         [ reduce using rule 35 (arrayIdList -> expression .) ]

    addingOperator                 shift and go to state 39

state 96

    (27) statement -> ID assigList expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 27 (statement -> ID assigList expression .)
    if              reduce using rule 27 (statement -> ID assigList expression .)
    case            reduce using rule 27 (statement -> ID assigList expression .)
    unless          reduce using rule 27 (statement -> ID assigList expression .)
    while           reduce using rule 27 (statement -> ID assigList expression .)
    require         reduce using rule 27 (statement -> ID assigList expression .)
    puts            reduce using rule 27 (statement -> ID assigList expression .)
    print           reduce using rule 27 (statement -> ID assigList expression .)
    NUMBER          reduce using rule 27 (statement -> ID assigList expression .)
    LPARENT         reduce using rule 27 (statement -> ID assigList expression .)
    FLOAT           reduce using rule 27 (statement -> ID assigList expression .)
    LSQUARE         reduce using rule 27 (statement -> ID assigList expression .)
    TEXT            reduce using rule 27 (statement -> ID assigList expression .)
    TEXT2           reduce using rule 27 (statement -> ID assigList expression .)
    $end            reduce using rule 27 (statement -> ID assigList expression .)
    end             reduce using rule 27 (statement -> ID assigList expression .)
    else            reduce using rule 27 (statement -> ID assigList expression .)
    elsif           reduce using rule 27 (statement -> ID assigList expression .)
    when            reduce using rule 27 (statement -> ID assigList expression .)
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 27 (statement -> ID assigList expression .) ]
  ! MINUS           [ reduce using rule 27 (statement -> ID assigList expression .) ]

    addingOperator                 shift and go to state 39

state 97

    (14) statement -> expression CICLE1 iterable . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 6
    statementList                  shift and go to state 138
    statement                      shift and go to state 4
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 98

    (36) iterable -> do .
    (37) iterable -> do . BARR ID BARR

    ID              reduce using rule 36 (iterable -> do .)
    if              reduce using rule 36 (iterable -> do .)
    case            reduce using rule 36 (iterable -> do .)
    unless          reduce using rule 36 (iterable -> do .)
    while           reduce using rule 36 (iterable -> do .)
    require         reduce using rule 36 (iterable -> do .)
    puts            reduce using rule 36 (iterable -> do .)
    print           reduce using rule 36 (iterable -> do .)
    PLUS            reduce using rule 36 (iterable -> do .)
    MINUS           reduce using rule 36 (iterable -> do .)
    NUMBER          reduce using rule 36 (iterable -> do .)
    LPARENT         reduce using rule 36 (iterable -> do .)
    FLOAT           reduce using rule 36 (iterable -> do .)
    LSQUARE         reduce using rule 36 (iterable -> do .)
    TEXT            reduce using rule 36 (iterable -> do .)
    TEXT2           reduce using rule 36 (iterable -> do .)
    BARR            shift and go to state 139


state 99

    (15) statement -> expression CICLE2 iterable . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 6
    statementList                  shift and go to state 140
    statement                      shift and go to state 4
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 100

    (16) statement -> expression CICLE3 do . BARR ID COMMA ID BARR statementList end

    BARR            shift and go to state 141


state 101

    (68) expression -> expression addingOperator term .
    (72) term -> term . multiplyingOperator factor
    (66) expression -> term .
    (76) multiplyingOperator -> . TIMES
    (77) multiplyingOperator -> . DIVIDE
    (78) multiplyingOperator -> . EXPO
    (79) multiplyingOperator -> . MOD

  ! reduce/reduce conflict for PLUS resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for MINUS resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for TOINT resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for TOSTR resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for TOFLO resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for LENGTH resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for MEAN resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for STANDAR resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 66 (expression -> term .)
  ! reduce/reduce conflict for SUM resolved using rule 66 (expression -> term .)
    CICLE1          reduce using rule 68 (expression -> expression addingOperator term .)
    CICLE2          reduce using rule 68 (expression -> expression addingOperator term .)
    CICLE3          reduce using rule 68 (expression -> expression addingOperator term .)
    EQUAL           reduce using rule 68 (expression -> expression addingOperator term .)
    NE              reduce using rule 68 (expression -> expression addingOperator term .)
    LT              reduce using rule 68 (expression -> expression addingOperator term .)
    GT              reduce using rule 68 (expression -> expression addingOperator term .)
    LTE             reduce using rule 68 (expression -> expression addingOperator term .)
    GTE             reduce using rule 68 (expression -> expression addingOperator term .)
    AND             reduce using rule 68 (expression -> expression addingOperator term .)
    OR              reduce using rule 68 (expression -> expression addingOperator term .)
    and             reduce using rule 68 (expression -> expression addingOperator term .)
    or              reduce using rule 68 (expression -> expression addingOperator term .)
    ID              reduce using rule 68 (expression -> expression addingOperator term .)
    if              reduce using rule 68 (expression -> expression addingOperator term .)
    case            reduce using rule 68 (expression -> expression addingOperator term .)
    unless          reduce using rule 68 (expression -> expression addingOperator term .)
    while           reduce using rule 68 (expression -> expression addingOperator term .)
    require         reduce using rule 68 (expression -> expression addingOperator term .)
    puts            reduce using rule 68 (expression -> expression addingOperator term .)
    print           reduce using rule 68 (expression -> expression addingOperator term .)
    NUMBER          reduce using rule 68 (expression -> expression addingOperator term .)
    LPARENT         reduce using rule 68 (expression -> expression addingOperator term .)
    FLOAT           reduce using rule 68 (expression -> expression addingOperator term .)
    LSQUARE         reduce using rule 68 (expression -> expression addingOperator term .)
    TEXT            reduce using rule 68 (expression -> expression addingOperator term .)
    TEXT2           reduce using rule 68 (expression -> expression addingOperator term .)
    when            reduce using rule 68 (expression -> expression addingOperator term .)
    $end            reduce using rule 68 (expression -> expression addingOperator term .)
    end             reduce using rule 68 (expression -> expression addingOperator term .)
    else            reduce using rule 68 (expression -> expression addingOperator term .)
    elsif           reduce using rule 68 (expression -> expression addingOperator term .)
    RSQUARE         reduce using rule 68 (expression -> expression addingOperator term .)
    COMMA           reduce using rule 68 (expression -> expression addingOperator term .)
    RPARENT         reduce using rule 68 (expression -> expression addingOperator term .)
    PLUS            reduce using rule 66 (expression -> term .)
    MINUS           reduce using rule 66 (expression -> term .)
    TOINT           reduce using rule 66 (expression -> term .)
    TOSTR           reduce using rule 66 (expression -> term .)
    TOFLO           reduce using rule 66 (expression -> term .)
    LENGTH          reduce using rule 66 (expression -> term .)
    MEAN            reduce using rule 66 (expression -> term .)
    STANDAR         reduce using rule 66 (expression -> term .)
    MEDIAN          reduce using rule 66 (expression -> term .)
    VARIANCE        reduce using rule 66 (expression -> term .)
    SUM             reduce using rule 66 (expression -> term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    EXPO            shift and go to state 69
    MOD             shift and go to state 70

  ! PLUS            [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! TOINT           [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! TOSTR           [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! TOFLO           [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! LENGTH          [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! MEAN            [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! STANDAR         [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! MEDIAN          [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! VARIANCE        [ reduce using rule 68 (expression -> expression addingOperator term .) ]
  ! SUM             [ reduce using rule 68 (expression -> expression addingOperator term .) ]

    multiplyingOperator            shift and go to state 66

state 102

    (9) statement -> if conditionList statementList . end
    (10) statement -> if conditionList statementList . else statementList end
    (11) statement -> if conditionList statementList . elseifList else statementList end
    (4) statementList -> statementList . statement
    (38) elseifList -> . elsif conditionList statementList
    (39) elseifList -> . elseifList elsif conditionList statementList
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 142
    else            shift and go to state 143
    elsif           shift and go to state 145
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    elseifList                     shift and go to state 144
    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 103

    (43) conditionList -> conditionList logicRelation . condition
    (44) condition -> . comparables relation comparables
    (45) condition -> . NOT comparables
    (46) condition -> . not comparables
    (47) condition -> . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    NOT             shift and go to state 43
    not             shift and go to state 44
    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    condition                      shift and go to state 146
    comparables                    shift and go to state 42
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 104

    (58) logicRelation -> AND .

    NOT             reduce using rule 58 (logicRelation -> AND .)
    not             reduce using rule 58 (logicRelation -> AND .)
    true            reduce using rule 58 (logicRelation -> AND .)
    false           reduce using rule 58 (logicRelation -> AND .)
    LSQUARE         reduce using rule 58 (logicRelation -> AND .)
    PLUS            reduce using rule 58 (logicRelation -> AND .)
    MINUS           reduce using rule 58 (logicRelation -> AND .)
    ID              reduce using rule 58 (logicRelation -> AND .)
    NUMBER          reduce using rule 58 (logicRelation -> AND .)
    LPARENT         reduce using rule 58 (logicRelation -> AND .)
    FLOAT           reduce using rule 58 (logicRelation -> AND .)
    TEXT            reduce using rule 58 (logicRelation -> AND .)
    TEXT2           reduce using rule 58 (logicRelation -> AND .)


state 105

    (59) logicRelation -> OR .

    NOT             reduce using rule 59 (logicRelation -> OR .)
    not             reduce using rule 59 (logicRelation -> OR .)
    true            reduce using rule 59 (logicRelation -> OR .)
    false           reduce using rule 59 (logicRelation -> OR .)
    LSQUARE         reduce using rule 59 (logicRelation -> OR .)
    PLUS            reduce using rule 59 (logicRelation -> OR .)
    MINUS           reduce using rule 59 (logicRelation -> OR .)
    ID              reduce using rule 59 (logicRelation -> OR .)
    NUMBER          reduce using rule 59 (logicRelation -> OR .)
    LPARENT         reduce using rule 59 (logicRelation -> OR .)
    FLOAT           reduce using rule 59 (logicRelation -> OR .)
    TEXT            reduce using rule 59 (logicRelation -> OR .)
    TEXT2           reduce using rule 59 (logicRelation -> OR .)


state 106

    (60) logicRelation -> and .

    NOT             reduce using rule 60 (logicRelation -> and .)
    not             reduce using rule 60 (logicRelation -> and .)
    true            reduce using rule 60 (logicRelation -> and .)
    false           reduce using rule 60 (logicRelation -> and .)
    LSQUARE         reduce using rule 60 (logicRelation -> and .)
    PLUS            reduce using rule 60 (logicRelation -> and .)
    MINUS           reduce using rule 60 (logicRelation -> and .)
    ID              reduce using rule 60 (logicRelation -> and .)
    NUMBER          reduce using rule 60 (logicRelation -> and .)
    LPARENT         reduce using rule 60 (logicRelation -> and .)
    FLOAT           reduce using rule 60 (logicRelation -> and .)
    TEXT            reduce using rule 60 (logicRelation -> and .)
    TEXT2           reduce using rule 60 (logicRelation -> and .)


state 107

    (61) logicRelation -> or .

    NOT             reduce using rule 61 (logicRelation -> or .)
    not             reduce using rule 61 (logicRelation -> or .)
    true            reduce using rule 61 (logicRelation -> or .)
    false           reduce using rule 61 (logicRelation -> or .)
    LSQUARE         reduce using rule 61 (logicRelation -> or .)
    PLUS            reduce using rule 61 (logicRelation -> or .)
    MINUS           reduce using rule 61 (logicRelation -> or .)
    ID              reduce using rule 61 (logicRelation -> or .)
    NUMBER          reduce using rule 61 (logicRelation -> or .)
    LPARENT         reduce using rule 61 (logicRelation -> or .)
    FLOAT           reduce using rule 61 (logicRelation -> or .)
    TEXT            reduce using rule 61 (logicRelation -> or .)
    TEXT2           reduce using rule 61 (logicRelation -> or .)


state 108

    (44) condition -> comparables relation . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    comparables                    shift and go to state 147
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 109

    (52) relation -> EQUAL .

    true            reduce using rule 52 (relation -> EQUAL .)
    false           reduce using rule 52 (relation -> EQUAL .)
    LSQUARE         reduce using rule 52 (relation -> EQUAL .)
    PLUS            reduce using rule 52 (relation -> EQUAL .)
    MINUS           reduce using rule 52 (relation -> EQUAL .)
    ID              reduce using rule 52 (relation -> EQUAL .)
    NUMBER          reduce using rule 52 (relation -> EQUAL .)
    LPARENT         reduce using rule 52 (relation -> EQUAL .)
    FLOAT           reduce using rule 52 (relation -> EQUAL .)
    TEXT            reduce using rule 52 (relation -> EQUAL .)
    TEXT2           reduce using rule 52 (relation -> EQUAL .)


state 110

    (53) relation -> NE .

    true            reduce using rule 53 (relation -> NE .)
    false           reduce using rule 53 (relation -> NE .)
    LSQUARE         reduce using rule 53 (relation -> NE .)
    PLUS            reduce using rule 53 (relation -> NE .)
    MINUS           reduce using rule 53 (relation -> NE .)
    ID              reduce using rule 53 (relation -> NE .)
    NUMBER          reduce using rule 53 (relation -> NE .)
    LPARENT         reduce using rule 53 (relation -> NE .)
    FLOAT           reduce using rule 53 (relation -> NE .)
    TEXT            reduce using rule 53 (relation -> NE .)
    TEXT2           reduce using rule 53 (relation -> NE .)


state 111

    (54) relation -> LT .

    true            reduce using rule 54 (relation -> LT .)
    false           reduce using rule 54 (relation -> LT .)
    LSQUARE         reduce using rule 54 (relation -> LT .)
    PLUS            reduce using rule 54 (relation -> LT .)
    MINUS           reduce using rule 54 (relation -> LT .)
    ID              reduce using rule 54 (relation -> LT .)
    NUMBER          reduce using rule 54 (relation -> LT .)
    LPARENT         reduce using rule 54 (relation -> LT .)
    FLOAT           reduce using rule 54 (relation -> LT .)
    TEXT            reduce using rule 54 (relation -> LT .)
    TEXT2           reduce using rule 54 (relation -> LT .)


state 112

    (55) relation -> GT .

    true            reduce using rule 55 (relation -> GT .)
    false           reduce using rule 55 (relation -> GT .)
    LSQUARE         reduce using rule 55 (relation -> GT .)
    PLUS            reduce using rule 55 (relation -> GT .)
    MINUS           reduce using rule 55 (relation -> GT .)
    ID              reduce using rule 55 (relation -> GT .)
    NUMBER          reduce using rule 55 (relation -> GT .)
    LPARENT         reduce using rule 55 (relation -> GT .)
    FLOAT           reduce using rule 55 (relation -> GT .)
    TEXT            reduce using rule 55 (relation -> GT .)
    TEXT2           reduce using rule 55 (relation -> GT .)


state 113

    (56) relation -> LTE .

    true            reduce using rule 56 (relation -> LTE .)
    false           reduce using rule 56 (relation -> LTE .)
    LSQUARE         reduce using rule 56 (relation -> LTE .)
    PLUS            reduce using rule 56 (relation -> LTE .)
    MINUS           reduce using rule 56 (relation -> LTE .)
    ID              reduce using rule 56 (relation -> LTE .)
    NUMBER          reduce using rule 56 (relation -> LTE .)
    LPARENT         reduce using rule 56 (relation -> LTE .)
    FLOAT           reduce using rule 56 (relation -> LTE .)
    TEXT            reduce using rule 56 (relation -> LTE .)
    TEXT2           reduce using rule 56 (relation -> LTE .)


state 114

    (57) relation -> GTE .

    true            reduce using rule 57 (relation -> GTE .)
    false           reduce using rule 57 (relation -> GTE .)
    LSQUARE         reduce using rule 57 (relation -> GTE .)
    PLUS            reduce using rule 57 (relation -> GTE .)
    MINUS           reduce using rule 57 (relation -> GTE .)
    ID              reduce using rule 57 (relation -> GTE .)
    NUMBER          reduce using rule 57 (relation -> GTE .)
    LPARENT         reduce using rule 57 (relation -> GTE .)
    FLOAT           reduce using rule 57 (relation -> GTE .)
    TEXT            reduce using rule 57 (relation -> GTE .)
    TEXT2           reduce using rule 57 (relation -> GTE .)


state 115

    (45) condition -> NOT comparables .

    AND             reduce using rule 45 (condition -> NOT comparables .)
    OR              reduce using rule 45 (condition -> NOT comparables .)
    and             reduce using rule 45 (condition -> NOT comparables .)
    or              reduce using rule 45 (condition -> NOT comparables .)
    ID              reduce using rule 45 (condition -> NOT comparables .)
    if              reduce using rule 45 (condition -> NOT comparables .)
    case            reduce using rule 45 (condition -> NOT comparables .)
    unless          reduce using rule 45 (condition -> NOT comparables .)
    while           reduce using rule 45 (condition -> NOT comparables .)
    require         reduce using rule 45 (condition -> NOT comparables .)
    puts            reduce using rule 45 (condition -> NOT comparables .)
    print           reduce using rule 45 (condition -> NOT comparables .)
    PLUS            reduce using rule 45 (condition -> NOT comparables .)
    MINUS           reduce using rule 45 (condition -> NOT comparables .)
    NUMBER          reduce using rule 45 (condition -> NOT comparables .)
    LPARENT         reduce using rule 45 (condition -> NOT comparables .)
    FLOAT           reduce using rule 45 (condition -> NOT comparables .)
    LSQUARE         reduce using rule 45 (condition -> NOT comparables .)
    TEXT            reduce using rule 45 (condition -> NOT comparables .)
    TEXT2           reduce using rule 45 (condition -> NOT comparables .)


state 116

    (46) condition -> not comparables .

    AND             reduce using rule 46 (condition -> not comparables .)
    OR              reduce using rule 46 (condition -> not comparables .)
    and             reduce using rule 46 (condition -> not comparables .)
    or              reduce using rule 46 (condition -> not comparables .)
    ID              reduce using rule 46 (condition -> not comparables .)
    if              reduce using rule 46 (condition -> not comparables .)
    case            reduce using rule 46 (condition -> not comparables .)
    unless          reduce using rule 46 (condition -> not comparables .)
    while           reduce using rule 46 (condition -> not comparables .)
    require         reduce using rule 46 (condition -> not comparables .)
    puts            reduce using rule 46 (condition -> not comparables .)
    print           reduce using rule 46 (condition -> not comparables .)
    PLUS            reduce using rule 46 (condition -> not comparables .)
    MINUS           reduce using rule 46 (condition -> not comparables .)
    NUMBER          reduce using rule 46 (condition -> not comparables .)
    LPARENT         reduce using rule 46 (condition -> not comparables .)
    FLOAT           reduce using rule 46 (condition -> not comparables .)
    LSQUARE         reduce using rule 46 (condition -> not comparables .)
    TEXT            reduce using rule 46 (condition -> not comparables .)
    TEXT2           reduce using rule 46 (condition -> not comparables .)


state 117

    (97) stringList -> expression PLUS . String
    (69) addingOperator -> PLUS .
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for TEXT2 resolved as shift
    ID              reduce using rule 69 (addingOperator -> PLUS .)
    NUMBER          reduce using rule 69 (addingOperator -> PLUS .)
    LPARENT         reduce using rule 69 (addingOperator -> PLUS .)
    FLOAT           reduce using rule 69 (addingOperator -> PLUS .)
    LSQUARE         reduce using rule 69 (addingOperator -> PLUS .)
    PLUS            reduce using rule 69 (addingOperator -> PLUS .)
    MINUS           reduce using rule 69 (addingOperator -> PLUS .)
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

  ! TEXT            [ reduce using rule 69 (addingOperator -> PLUS .) ]
  ! TEXT2           [ reduce using rule 69 (addingOperator -> PLUS .) ]

    String                         shift and go to state 148
    textList                       shift and go to state 28

state 118

    (92) stringList -> stringList PLUS . expression
    (93) stringList -> stringList PLUS . String
    (94) stringList -> stringList PLUS . boolean
    (95) stringList -> stringList PLUS . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    expression                     shift and go to state 149
    String                         shift and go to state 150
    boolean                        shift and go to state 151
    array                          shift and go to state 152
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20
    optionList                     shift and go to state 25

state 119

    (96) stringList -> boolean PLUS . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    String                         shift and go to state 153
    textList                       shift and go to state 28

state 120

    (98) stringList -> array PLUS . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    String                         shift and go to state 154
    textList                       shift and go to state 28

state 121

    (84) factor -> ID LSQUARE . expression RSQUARE
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 155
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28

state 122

    (12) statement -> case comparables whenList . else statementList end
    (41) whenList -> whenList . when comparables statementList

    else            shift and go to state 156
    when            shift and go to state 157


state 123

    (40) whenList -> when . comparables statementList
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    comparables                    shift and go to state 158
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 124

    (13) statement -> unless conditionList statementList . else statementList end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    else            shift and go to state 159
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 125

    (17) statement -> while conditionList statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 160
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 126

    (110) arrayList -> LSQUARE arrayList . RSQUARE
    (106) array -> LSQUARE arrayList . RSQUARE
    (111) arrayList -> arrayList . COMMA expression
    (112) arrayList -> arrayList . COMMA String
    (113) arrayList -> arrayList . COMMA boolean
    (114) arrayList -> arrayList . COMMA LSQUARE arrayList RSQUARE

    RSQUARE         shift and go to state 161
    COMMA           shift and go to state 128


state 127

    (106) array -> LSQUARE arrayList RSQUARE .

    TOINT           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TOSTR           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TOFLO           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LENGTH          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MEAN            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    STANDAR         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MEDIAN          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    VARIANCE        reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    SUM             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    PLUS            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    EQUAL           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    NE              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LT              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    GT              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LTE             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    GTE             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    AND             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    OR              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    and             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    or              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    ID              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    if              reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    case            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    unless          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    while           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    require         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    puts            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    print           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MINUS           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    NUMBER          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LPARENT         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    FLOAT           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LSQUARE         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TEXT            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TEXT2           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    when            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    $end            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    end             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    else            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    elsif           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    RPARENT         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)


state 128

    (111) arrayList -> arrayList COMMA . expression
    (112) arrayList -> arrayList COMMA . String
    (113) arrayList -> arrayList COMMA . boolean
    (114) arrayList -> arrayList COMMA . LSQUARE arrayList RSQUARE
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (104) boolean -> . true
    (105) boolean -> . false
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (106) array -> . LSQUARE arrayList RSQUARE

    LSQUARE         shift and go to state 165
    true            shift and go to state 50
    false           shift and go to state 51
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    expression                     shift and go to state 162
    String                         shift and go to state 163
    boolean                        shift and go to state 164
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    array                          shift and go to state 7

state 129

    (72) term -> term multiplyingOperator factor .
    (71) term -> factor .

  ! reduce/reduce conflict for TIMES resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for EXPO resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for MOD resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for PLUS resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for TOINT resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for TOSTR resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for TOFLO resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for LENGTH resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for MEAN resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for STANDAR resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 71 (term -> factor .)
  ! reduce/reduce conflict for SUM resolved using rule 71 (term -> factor .)
    CICLE1          reduce using rule 72 (term -> term multiplyingOperator factor .)
    CICLE2          reduce using rule 72 (term -> term multiplyingOperator factor .)
    CICLE3          reduce using rule 72 (term -> term multiplyingOperator factor .)
    EQUAL           reduce using rule 72 (term -> term multiplyingOperator factor .)
    NE              reduce using rule 72 (term -> term multiplyingOperator factor .)
    LT              reduce using rule 72 (term -> term multiplyingOperator factor .)
    GT              reduce using rule 72 (term -> term multiplyingOperator factor .)
    LTE             reduce using rule 72 (term -> term multiplyingOperator factor .)
    GTE             reduce using rule 72 (term -> term multiplyingOperator factor .)
    AND             reduce using rule 72 (term -> term multiplyingOperator factor .)
    OR              reduce using rule 72 (term -> term multiplyingOperator factor .)
    and             reduce using rule 72 (term -> term multiplyingOperator factor .)
    or              reduce using rule 72 (term -> term multiplyingOperator factor .)
    ID              reduce using rule 72 (term -> term multiplyingOperator factor .)
    if              reduce using rule 72 (term -> term multiplyingOperator factor .)
    case            reduce using rule 72 (term -> term multiplyingOperator factor .)
    unless          reduce using rule 72 (term -> term multiplyingOperator factor .)
    while           reduce using rule 72 (term -> term multiplyingOperator factor .)
    require         reduce using rule 72 (term -> term multiplyingOperator factor .)
    puts            reduce using rule 72 (term -> term multiplyingOperator factor .)
    print           reduce using rule 72 (term -> term multiplyingOperator factor .)
    NUMBER          reduce using rule 72 (term -> term multiplyingOperator factor .)
    LPARENT         reduce using rule 72 (term -> term multiplyingOperator factor .)
    FLOAT           reduce using rule 72 (term -> term multiplyingOperator factor .)
    LSQUARE         reduce using rule 72 (term -> term multiplyingOperator factor .)
    TEXT            reduce using rule 72 (term -> term multiplyingOperator factor .)
    TEXT2           reduce using rule 72 (term -> term multiplyingOperator factor .)
    when            reduce using rule 72 (term -> term multiplyingOperator factor .)
    $end            reduce using rule 72 (term -> term multiplyingOperator factor .)
    end             reduce using rule 72 (term -> term multiplyingOperator factor .)
    else            reduce using rule 72 (term -> term multiplyingOperator factor .)
    elsif           reduce using rule 72 (term -> term multiplyingOperator factor .)
    RSQUARE         reduce using rule 72 (term -> term multiplyingOperator factor .)
    COMMA           reduce using rule 72 (term -> term multiplyingOperator factor .)
    RPARENT         reduce using rule 72 (term -> term multiplyingOperator factor .)
    TIMES           reduce using rule 71 (term -> factor .)
    DIVIDE          reduce using rule 71 (term -> factor .)
    EXPO            reduce using rule 71 (term -> factor .)
    MOD             reduce using rule 71 (term -> factor .)
    PLUS            reduce using rule 71 (term -> factor .)
    MINUS           reduce using rule 71 (term -> factor .)
    TOINT           reduce using rule 71 (term -> factor .)
    TOSTR           reduce using rule 71 (term -> factor .)
    TOFLO           reduce using rule 71 (term -> factor .)
    LENGTH          reduce using rule 71 (term -> factor .)
    MEAN            reduce using rule 71 (term -> factor .)
    STANDAR         reduce using rule 71 (term -> factor .)
    MEDIAN          reduce using rule 71 (term -> factor .)
    VARIANCE        reduce using rule 71 (term -> factor .)
    SUM             reduce using rule 71 (term -> factor .)

  ! TIMES           [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! DIVIDE          [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! EXPO            [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! MOD             [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! PLUS            [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! MINUS           [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! TOINT           [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! TOSTR           [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! TOFLO           [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! LENGTH          [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! MEAN            [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! STANDAR         [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! MEDIAN          [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! VARIANCE        [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]
  ! SUM             [ reduce using rule 72 (term -> term multiplyingOperator factor .) ]


state 130

    (82) factor -> LPARENT optionList RPARENT .

    TIMES           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    DIVIDE          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    EXPO            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    MOD             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    CICLE1          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    CICLE2          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    CICLE3          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    PLUS            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    MINUS           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    TOINT           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    TOSTR           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    TOFLO           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    LENGTH          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    MEAN            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    STANDAR         reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    MEDIAN          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    VARIANCE        reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    SUM             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    EQUAL           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    NE              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    LT              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    GT              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    LTE             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    GTE             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    AND             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    OR              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    and             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    or              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    ID              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    if              reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    case            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    unless          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    while           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    require         reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    puts            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    print           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    NUMBER          reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    LPARENT         reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    FLOAT           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    LSQUARE         reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    TEXT            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    TEXT2           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    when            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    $end            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    end             reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    else            reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    elsif           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    RSQUARE         reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    COMMA           reduce using rule 82 (factor -> LPARENT optionList RPARENT .)
    RPARENT         reduce using rule 82 (factor -> LPARENT optionList RPARENT .)


state 131

    (100) String -> String PLUS textList .

    PLUS            reduce using rule 100 (String -> String PLUS textList .)
    TOINT           reduce using rule 100 (String -> String PLUS textList .)
    TOSTR           reduce using rule 100 (String -> String PLUS textList .)
    TOFLO           reduce using rule 100 (String -> String PLUS textList .)
    LENGTH          reduce using rule 100 (String -> String PLUS textList .)
    MEAN            reduce using rule 100 (String -> String PLUS textList .)
    STANDAR         reduce using rule 100 (String -> String PLUS textList .)
    MEDIAN          reduce using rule 100 (String -> String PLUS textList .)
    VARIANCE        reduce using rule 100 (String -> String PLUS textList .)
    SUM             reduce using rule 100 (String -> String PLUS textList .)
    EQUAL           reduce using rule 100 (String -> String PLUS textList .)
    NE              reduce using rule 100 (String -> String PLUS textList .)
    LT              reduce using rule 100 (String -> String PLUS textList .)
    GT              reduce using rule 100 (String -> String PLUS textList .)
    LTE             reduce using rule 100 (String -> String PLUS textList .)
    GTE             reduce using rule 100 (String -> String PLUS textList .)
    AND             reduce using rule 100 (String -> String PLUS textList .)
    OR              reduce using rule 100 (String -> String PLUS textList .)
    and             reduce using rule 100 (String -> String PLUS textList .)
    or              reduce using rule 100 (String -> String PLUS textList .)
    ID              reduce using rule 100 (String -> String PLUS textList .)
    if              reduce using rule 100 (String -> String PLUS textList .)
    case            reduce using rule 100 (String -> String PLUS textList .)
    unless          reduce using rule 100 (String -> String PLUS textList .)
    while           reduce using rule 100 (String -> String PLUS textList .)
    require         reduce using rule 100 (String -> String PLUS textList .)
    puts            reduce using rule 100 (String -> String PLUS textList .)
    print           reduce using rule 100 (String -> String PLUS textList .)
    MINUS           reduce using rule 100 (String -> String PLUS textList .)
    NUMBER          reduce using rule 100 (String -> String PLUS textList .)
    LPARENT         reduce using rule 100 (String -> String PLUS textList .)
    FLOAT           reduce using rule 100 (String -> String PLUS textList .)
    LSQUARE         reduce using rule 100 (String -> String PLUS textList .)
    TEXT            reduce using rule 100 (String -> String PLUS textList .)
    TEXT2           reduce using rule 100 (String -> String PLUS textList .)
    when            reduce using rule 100 (String -> String PLUS textList .)
    $end            reduce using rule 100 (String -> String PLUS textList .)
    end             reduce using rule 100 (String -> String PLUS textList .)
    else            reduce using rule 100 (String -> String PLUS textList .)
    elsif           reduce using rule 100 (String -> String PLUS textList .)
    RSQUARE         reduce using rule 100 (String -> String PLUS textList .)
    COMMA           reduce using rule 100 (String -> String PLUS textList .)
    RPARENT         reduce using rule 100 (String -> String PLUS textList .)


state 132

    (101) String -> String PLUS ID .

    PLUS            reduce using rule 101 (String -> String PLUS ID .)
    TOINT           reduce using rule 101 (String -> String PLUS ID .)
    TOSTR           reduce using rule 101 (String -> String PLUS ID .)
    TOFLO           reduce using rule 101 (String -> String PLUS ID .)
    LENGTH          reduce using rule 101 (String -> String PLUS ID .)
    MEAN            reduce using rule 101 (String -> String PLUS ID .)
    STANDAR         reduce using rule 101 (String -> String PLUS ID .)
    MEDIAN          reduce using rule 101 (String -> String PLUS ID .)
    VARIANCE        reduce using rule 101 (String -> String PLUS ID .)
    SUM             reduce using rule 101 (String -> String PLUS ID .)
    EQUAL           reduce using rule 101 (String -> String PLUS ID .)
    NE              reduce using rule 101 (String -> String PLUS ID .)
    LT              reduce using rule 101 (String -> String PLUS ID .)
    GT              reduce using rule 101 (String -> String PLUS ID .)
    LTE             reduce using rule 101 (String -> String PLUS ID .)
    GTE             reduce using rule 101 (String -> String PLUS ID .)
    AND             reduce using rule 101 (String -> String PLUS ID .)
    OR              reduce using rule 101 (String -> String PLUS ID .)
    and             reduce using rule 101 (String -> String PLUS ID .)
    or              reduce using rule 101 (String -> String PLUS ID .)
    ID              reduce using rule 101 (String -> String PLUS ID .)
    if              reduce using rule 101 (String -> String PLUS ID .)
    case            reduce using rule 101 (String -> String PLUS ID .)
    unless          reduce using rule 101 (String -> String PLUS ID .)
    while           reduce using rule 101 (String -> String PLUS ID .)
    require         reduce using rule 101 (String -> String PLUS ID .)
    puts            reduce using rule 101 (String -> String PLUS ID .)
    print           reduce using rule 101 (String -> String PLUS ID .)
    MINUS           reduce using rule 101 (String -> String PLUS ID .)
    NUMBER          reduce using rule 101 (String -> String PLUS ID .)
    LPARENT         reduce using rule 101 (String -> String PLUS ID .)
    FLOAT           reduce using rule 101 (String -> String PLUS ID .)
    LSQUARE         reduce using rule 101 (String -> String PLUS ID .)
    TEXT            reduce using rule 101 (String -> String PLUS ID .)
    TEXT2           reduce using rule 101 (String -> String PLUS ID .)
    when            reduce using rule 101 (String -> String PLUS ID .)
    $end            reduce using rule 101 (String -> String PLUS ID .)
    end             reduce using rule 101 (String -> String PLUS ID .)
    else            reduce using rule 101 (String -> String PLUS ID .)
    elsif           reduce using rule 101 (String -> String PLUS ID .)
    RSQUARE         reduce using rule 101 (String -> String PLUS ID .)
    COMMA           reduce using rule 101 (String -> String PLUS ID .)
    RPARENT         reduce using rule 101 (String -> String PLUS ID .)


state 133

    (32) KeyEntry -> KEYB1 TOINT .

    ID              reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    if              reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    case            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    unless          reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    while           reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    require         reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    puts            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    print           reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    PLUS            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    MINUS           reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    NUMBER          reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    LPARENT         reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    FLOAT           reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    LSQUARE         reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    TEXT            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    TEXT2           reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    $end            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    end             reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    else            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    elsif           reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)
    when            reduce using rule 32 (KeyEntry -> KEYB1 TOINT .)


state 134

    (33) KeyEntry -> KEYB1 TOFLO .

    ID              reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    if              reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    case            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    unless          reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    while           reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    require         reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    puts            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    print           reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    PLUS            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    MINUS           reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    NUMBER          reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    LPARENT         reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    FLOAT           reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    LSQUARE         reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    TEXT            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    TEXT2           reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    $end            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    end             reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    else            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    elsif           reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)
    when            reduce using rule 33 (KeyEntry -> KEYB1 TOFLO .)


state 135

    (22) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN expression
    (23) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN stringList
    (24) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN boolean
    (25) statement -> ID LSQUARE arrayIdList RSQUARE . ASSIGN array
    (28) statement -> ID LSQUARE arrayIdList RSQUARE . assigList expression
    (62) assigList -> . ASSIGPLUS
    (63) assigList -> . ASSIGMINUS

    ASSIGN          shift and go to state 166
    ASSIGPLUS       shift and go to state 34
    ASSIGMINUS      shift and go to state 35

    assigList                      shift and go to state 167

state 136

    (84) factor -> ID LSQUARE expression RSQUARE .

    TIMES           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    DIVIDE          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    EXPO            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    MOD             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    CICLE1          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    CICLE2          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    CICLE3          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    PLUS            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    MINUS           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    TOINT           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    TOSTR           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    TOFLO           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    LENGTH          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    MEAN            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    STANDAR         reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    MEDIAN          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    VARIANCE        reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    SUM             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    EQUAL           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    NE              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    LT              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    GT              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    LTE             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    GTE             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    AND             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    OR              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    and             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    or              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    ID              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    if              reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    case            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    unless          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    while           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    require         reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    puts            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    print           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    NUMBER          reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    LPARENT         reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    FLOAT           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    LSQUARE         reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    TEXT            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    TEXT2           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    when            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    $end            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    end             reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    else            reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    elsif           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    RSQUARE         reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    COMMA           reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)
    RPARENT         reduce using rule 84 (factor -> ID LSQUARE expression RSQUARE .)


state 137

    (34) arrayIdList -> expression COMMA . expression
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 168
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28

state 138

    (14) statement -> expression CICLE1 iterable statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 169
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 6
    statement                      shift and go to state 30
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 139

    (37) iterable -> do BARR . ID BARR

    ID              shift and go to state 170


state 140

    (15) statement -> expression CICLE2 iterable statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 171
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 6
    statement                      shift and go to state 30
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 141

    (16) statement -> expression CICLE3 do BARR . ID COMMA ID BARR statementList end

    ID              shift and go to state 172


state 142

    (9) statement -> if conditionList statementList end .

    ID              reduce using rule 9 (statement -> if conditionList statementList end .)
    if              reduce using rule 9 (statement -> if conditionList statementList end .)
    case            reduce using rule 9 (statement -> if conditionList statementList end .)
    unless          reduce using rule 9 (statement -> if conditionList statementList end .)
    while           reduce using rule 9 (statement -> if conditionList statementList end .)
    require         reduce using rule 9 (statement -> if conditionList statementList end .)
    puts            reduce using rule 9 (statement -> if conditionList statementList end .)
    print           reduce using rule 9 (statement -> if conditionList statementList end .)
    PLUS            reduce using rule 9 (statement -> if conditionList statementList end .)
    MINUS           reduce using rule 9 (statement -> if conditionList statementList end .)
    NUMBER          reduce using rule 9 (statement -> if conditionList statementList end .)
    LPARENT         reduce using rule 9 (statement -> if conditionList statementList end .)
    FLOAT           reduce using rule 9 (statement -> if conditionList statementList end .)
    LSQUARE         reduce using rule 9 (statement -> if conditionList statementList end .)
    TEXT            reduce using rule 9 (statement -> if conditionList statementList end .)
    TEXT2           reduce using rule 9 (statement -> if conditionList statementList end .)
    $end            reduce using rule 9 (statement -> if conditionList statementList end .)
    end             reduce using rule 9 (statement -> if conditionList statementList end .)
    else            reduce using rule 9 (statement -> if conditionList statementList end .)
    elsif           reduce using rule 9 (statement -> if conditionList statementList end .)
    when            reduce using rule 9 (statement -> if conditionList statementList end .)


state 143

    (10) statement -> if conditionList statementList else . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 173
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 144

    (11) statement -> if conditionList statementList elseifList . else statementList end
    (39) elseifList -> elseifList . elsif conditionList statementList

    else            shift and go to state 174
    elsif           shift and go to state 175


state 145

    (38) elseifList -> elsif . conditionList statementList
    (42) conditionList -> . condition
    (43) conditionList -> . conditionList logicRelation condition
    (44) condition -> . comparables relation comparables
    (45) condition -> . NOT comparables
    (46) condition -> . not comparables
    (47) condition -> . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    NOT             shift and go to state 43
    not             shift and go to state 44
    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    conditionList                  shift and go to state 176
    condition                      shift and go to state 41
    comparables                    shift and go to state 42
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 146

    (43) conditionList -> conditionList logicRelation condition .

    AND             reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    OR              reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    and             reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    or              reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    ID              reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    if              reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    case            reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    unless          reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    while           reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    require         reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    puts            reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    print           reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    PLUS            reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    MINUS           reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    NUMBER          reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    LPARENT         reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    FLOAT           reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    LSQUARE         reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    TEXT            reduce using rule 43 (conditionList -> conditionList logicRelation condition .)
    TEXT2           reduce using rule 43 (conditionList -> conditionList logicRelation condition .)


state 147

    (44) condition -> comparables relation comparables .

    AND             reduce using rule 44 (condition -> comparables relation comparables .)
    OR              reduce using rule 44 (condition -> comparables relation comparables .)
    and             reduce using rule 44 (condition -> comparables relation comparables .)
    or              reduce using rule 44 (condition -> comparables relation comparables .)
    ID              reduce using rule 44 (condition -> comparables relation comparables .)
    if              reduce using rule 44 (condition -> comparables relation comparables .)
    case            reduce using rule 44 (condition -> comparables relation comparables .)
    unless          reduce using rule 44 (condition -> comparables relation comparables .)
    while           reduce using rule 44 (condition -> comparables relation comparables .)
    require         reduce using rule 44 (condition -> comparables relation comparables .)
    puts            reduce using rule 44 (condition -> comparables relation comparables .)
    print           reduce using rule 44 (condition -> comparables relation comparables .)
    PLUS            reduce using rule 44 (condition -> comparables relation comparables .)
    MINUS           reduce using rule 44 (condition -> comparables relation comparables .)
    NUMBER          reduce using rule 44 (condition -> comparables relation comparables .)
    LPARENT         reduce using rule 44 (condition -> comparables relation comparables .)
    FLOAT           reduce using rule 44 (condition -> comparables relation comparables .)
    LSQUARE         reduce using rule 44 (condition -> comparables relation comparables .)
    TEXT            reduce using rule 44 (condition -> comparables relation comparables .)
    TEXT2           reduce using rule 44 (condition -> comparables relation comparables .)


state 148

    (97) stringList -> expression PLUS String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID

  ! shift/reduce conflict for PLUS resolved as shift
    EQUAL           reduce using rule 97 (stringList -> expression PLUS String .)
    NE              reduce using rule 97 (stringList -> expression PLUS String .)
    LT              reduce using rule 97 (stringList -> expression PLUS String .)
    GT              reduce using rule 97 (stringList -> expression PLUS String .)
    LTE             reduce using rule 97 (stringList -> expression PLUS String .)
    GTE             reduce using rule 97 (stringList -> expression PLUS String .)
    AND             reduce using rule 97 (stringList -> expression PLUS String .)
    OR              reduce using rule 97 (stringList -> expression PLUS String .)
    and             reduce using rule 97 (stringList -> expression PLUS String .)
    or              reduce using rule 97 (stringList -> expression PLUS String .)
    ID              reduce using rule 97 (stringList -> expression PLUS String .)
    if              reduce using rule 97 (stringList -> expression PLUS String .)
    case            reduce using rule 97 (stringList -> expression PLUS String .)
    unless          reduce using rule 97 (stringList -> expression PLUS String .)
    while           reduce using rule 97 (stringList -> expression PLUS String .)
    require         reduce using rule 97 (stringList -> expression PLUS String .)
    puts            reduce using rule 97 (stringList -> expression PLUS String .)
    print           reduce using rule 97 (stringList -> expression PLUS String .)
    MINUS           reduce using rule 97 (stringList -> expression PLUS String .)
    NUMBER          reduce using rule 97 (stringList -> expression PLUS String .)
    LPARENT         reduce using rule 97 (stringList -> expression PLUS String .)
    FLOAT           reduce using rule 97 (stringList -> expression PLUS String .)
    LSQUARE         reduce using rule 97 (stringList -> expression PLUS String .)
    TEXT            reduce using rule 97 (stringList -> expression PLUS String .)
    TEXT2           reduce using rule 97 (stringList -> expression PLUS String .)
    when            reduce using rule 97 (stringList -> expression PLUS String .)
    $end            reduce using rule 97 (stringList -> expression PLUS String .)
    end             reduce using rule 97 (stringList -> expression PLUS String .)
    else            reduce using rule 97 (stringList -> expression PLUS String .)
    elsif           reduce using rule 97 (stringList -> expression PLUS String .)
    PLUS            shift and go to state 87

  ! PLUS            [ reduce using rule 97 (stringList -> expression PLUS String .) ]


state 149

    (92) stringList -> stringList PLUS expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    EQUAL           reduce using rule 92 (stringList -> stringList PLUS expression .)
    NE              reduce using rule 92 (stringList -> stringList PLUS expression .)
    LT              reduce using rule 92 (stringList -> stringList PLUS expression .)
    GT              reduce using rule 92 (stringList -> stringList PLUS expression .)
    LTE             reduce using rule 92 (stringList -> stringList PLUS expression .)
    GTE             reduce using rule 92 (stringList -> stringList PLUS expression .)
    AND             reduce using rule 92 (stringList -> stringList PLUS expression .)
    OR              reduce using rule 92 (stringList -> stringList PLUS expression .)
    and             reduce using rule 92 (stringList -> stringList PLUS expression .)
    or              reduce using rule 92 (stringList -> stringList PLUS expression .)
    ID              reduce using rule 92 (stringList -> stringList PLUS expression .)
    if              reduce using rule 92 (stringList -> stringList PLUS expression .)
    case            reduce using rule 92 (stringList -> stringList PLUS expression .)
    unless          reduce using rule 92 (stringList -> stringList PLUS expression .)
    while           reduce using rule 92 (stringList -> stringList PLUS expression .)
    require         reduce using rule 92 (stringList -> stringList PLUS expression .)
    puts            reduce using rule 92 (stringList -> stringList PLUS expression .)
    print           reduce using rule 92 (stringList -> stringList PLUS expression .)
    NUMBER          reduce using rule 92 (stringList -> stringList PLUS expression .)
    LPARENT         reduce using rule 92 (stringList -> stringList PLUS expression .)
    FLOAT           reduce using rule 92 (stringList -> stringList PLUS expression .)
    LSQUARE         reduce using rule 92 (stringList -> stringList PLUS expression .)
    TEXT            reduce using rule 92 (stringList -> stringList PLUS expression .)
    TEXT2           reduce using rule 92 (stringList -> stringList PLUS expression .)
    when            reduce using rule 92 (stringList -> stringList PLUS expression .)
    $end            reduce using rule 92 (stringList -> stringList PLUS expression .)
    end             reduce using rule 92 (stringList -> stringList PLUS expression .)
    else            reduce using rule 92 (stringList -> stringList PLUS expression .)
    elsif           reduce using rule 92 (stringList -> stringList PLUS expression .)
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 92 (stringList -> stringList PLUS expression .) ]
  ! MINUS           [ reduce using rule 92 (stringList -> stringList PLUS expression .) ]

    addingOperator                 shift and go to state 39

state 150

    (93) stringList -> stringList PLUS String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID
    (87) factor -> String . funcList
    (90) optionList -> String .
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TOINT resolved as shift
  ! shift/reduce conflict for TOSTR resolved as shift
  ! shift/reduce conflict for TOFLO resolved as shift
    EQUAL           reduce using rule 93 (stringList -> stringList PLUS String .)
    NE              reduce using rule 93 (stringList -> stringList PLUS String .)
    LT              reduce using rule 93 (stringList -> stringList PLUS String .)
    GT              reduce using rule 93 (stringList -> stringList PLUS String .)
    LTE             reduce using rule 93 (stringList -> stringList PLUS String .)
    GTE             reduce using rule 93 (stringList -> stringList PLUS String .)
    AND             reduce using rule 93 (stringList -> stringList PLUS String .)
    OR              reduce using rule 93 (stringList -> stringList PLUS String .)
    and             reduce using rule 93 (stringList -> stringList PLUS String .)
    or              reduce using rule 93 (stringList -> stringList PLUS String .)
    ID              reduce using rule 93 (stringList -> stringList PLUS String .)
    if              reduce using rule 93 (stringList -> stringList PLUS String .)
    case            reduce using rule 93 (stringList -> stringList PLUS String .)
    unless          reduce using rule 93 (stringList -> stringList PLUS String .)
    while           reduce using rule 93 (stringList -> stringList PLUS String .)
    require         reduce using rule 93 (stringList -> stringList PLUS String .)
    puts            reduce using rule 93 (stringList -> stringList PLUS String .)
    print           reduce using rule 93 (stringList -> stringList PLUS String .)
    MINUS           reduce using rule 93 (stringList -> stringList PLUS String .)
    NUMBER          reduce using rule 93 (stringList -> stringList PLUS String .)
    LPARENT         reduce using rule 93 (stringList -> stringList PLUS String .)
    FLOAT           reduce using rule 93 (stringList -> stringList PLUS String .)
    LSQUARE         reduce using rule 93 (stringList -> stringList PLUS String .)
    TEXT            reduce using rule 93 (stringList -> stringList PLUS String .)
    TEXT2           reduce using rule 93 (stringList -> stringList PLUS String .)
    when            reduce using rule 93 (stringList -> stringList PLUS String .)
    $end            reduce using rule 93 (stringList -> stringList PLUS String .)
    end             reduce using rule 93 (stringList -> stringList PLUS String .)
    else            reduce using rule 93 (stringList -> stringList PLUS String .)
    elsif           reduce using rule 93 (stringList -> stringList PLUS String .)
    PLUS            shift and go to state 87
    LENGTH          reduce using rule 90 (optionList -> String .)
    MEAN            reduce using rule 90 (optionList -> String .)
    STANDAR         reduce using rule 90 (optionList -> String .)
    MEDIAN          reduce using rule 90 (optionList -> String .)
    VARIANCE        reduce using rule 90 (optionList -> String .)
    SUM             reduce using rule 90 (optionList -> String .)
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79

  ! PLUS            [ reduce using rule 93 (stringList -> stringList PLUS String .) ]
  ! TOINT           [ reduce using rule 90 (optionList -> String .) ]
  ! TOSTR           [ reduce using rule 90 (optionList -> String .) ]
  ! TOFLO           [ reduce using rule 90 (optionList -> String .) ]

    funcList                       shift and go to state 86

state 151

    (94) stringList -> stringList PLUS boolean .

    PLUS            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    EQUAL           reduce using rule 94 (stringList -> stringList PLUS boolean .)
    NE              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    LT              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    GT              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    LTE             reduce using rule 94 (stringList -> stringList PLUS boolean .)
    GTE             reduce using rule 94 (stringList -> stringList PLUS boolean .)
    AND             reduce using rule 94 (stringList -> stringList PLUS boolean .)
    OR              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    and             reduce using rule 94 (stringList -> stringList PLUS boolean .)
    or              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    ID              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    if              reduce using rule 94 (stringList -> stringList PLUS boolean .)
    case            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    unless          reduce using rule 94 (stringList -> stringList PLUS boolean .)
    while           reduce using rule 94 (stringList -> stringList PLUS boolean .)
    require         reduce using rule 94 (stringList -> stringList PLUS boolean .)
    puts            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    print           reduce using rule 94 (stringList -> stringList PLUS boolean .)
    MINUS           reduce using rule 94 (stringList -> stringList PLUS boolean .)
    NUMBER          reduce using rule 94 (stringList -> stringList PLUS boolean .)
    LPARENT         reduce using rule 94 (stringList -> stringList PLUS boolean .)
    FLOAT           reduce using rule 94 (stringList -> stringList PLUS boolean .)
    LSQUARE         reduce using rule 94 (stringList -> stringList PLUS boolean .)
    TEXT            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    TEXT2           reduce using rule 94 (stringList -> stringList PLUS boolean .)
    when            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    $end            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    end             reduce using rule 94 (stringList -> stringList PLUS boolean .)
    else            reduce using rule 94 (stringList -> stringList PLUS boolean .)
    elsif           reduce using rule 94 (stringList -> stringList PLUS boolean .)


state 152

    (95) stringList -> stringList PLUS array .
    (89) optionList -> array .

    PLUS            reduce using rule 95 (stringList -> stringList PLUS array .)
    EQUAL           reduce using rule 95 (stringList -> stringList PLUS array .)
    NE              reduce using rule 95 (stringList -> stringList PLUS array .)
    LT              reduce using rule 95 (stringList -> stringList PLUS array .)
    GT              reduce using rule 95 (stringList -> stringList PLUS array .)
    LTE             reduce using rule 95 (stringList -> stringList PLUS array .)
    GTE             reduce using rule 95 (stringList -> stringList PLUS array .)
    AND             reduce using rule 95 (stringList -> stringList PLUS array .)
    OR              reduce using rule 95 (stringList -> stringList PLUS array .)
    and             reduce using rule 95 (stringList -> stringList PLUS array .)
    or              reduce using rule 95 (stringList -> stringList PLUS array .)
    ID              reduce using rule 95 (stringList -> stringList PLUS array .)
    if              reduce using rule 95 (stringList -> stringList PLUS array .)
    case            reduce using rule 95 (stringList -> stringList PLUS array .)
    unless          reduce using rule 95 (stringList -> stringList PLUS array .)
    while           reduce using rule 95 (stringList -> stringList PLUS array .)
    require         reduce using rule 95 (stringList -> stringList PLUS array .)
    puts            reduce using rule 95 (stringList -> stringList PLUS array .)
    print           reduce using rule 95 (stringList -> stringList PLUS array .)
    MINUS           reduce using rule 95 (stringList -> stringList PLUS array .)
    NUMBER          reduce using rule 95 (stringList -> stringList PLUS array .)
    LPARENT         reduce using rule 95 (stringList -> stringList PLUS array .)
    FLOAT           reduce using rule 95 (stringList -> stringList PLUS array .)
    LSQUARE         reduce using rule 95 (stringList -> stringList PLUS array .)
    TEXT            reduce using rule 95 (stringList -> stringList PLUS array .)
    TEXT2           reduce using rule 95 (stringList -> stringList PLUS array .)
    when            reduce using rule 95 (stringList -> stringList PLUS array .)
    $end            reduce using rule 95 (stringList -> stringList PLUS array .)
    end             reduce using rule 95 (stringList -> stringList PLUS array .)
    else            reduce using rule 95 (stringList -> stringList PLUS array .)
    elsif           reduce using rule 95 (stringList -> stringList PLUS array .)
    TOINT           reduce using rule 89 (optionList -> array .)
    TOSTR           reduce using rule 89 (optionList -> array .)
    TOFLO           reduce using rule 89 (optionList -> array .)
    LENGTH          reduce using rule 89 (optionList -> array .)
    MEAN            reduce using rule 89 (optionList -> array .)
    STANDAR         reduce using rule 89 (optionList -> array .)
    MEDIAN          reduce using rule 89 (optionList -> array .)
    VARIANCE        reduce using rule 89 (optionList -> array .)
    SUM             reduce using rule 89 (optionList -> array .)


state 153

    (96) stringList -> boolean PLUS String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID

  ! shift/reduce conflict for PLUS resolved as shift
    EQUAL           reduce using rule 96 (stringList -> boolean PLUS String .)
    NE              reduce using rule 96 (stringList -> boolean PLUS String .)
    LT              reduce using rule 96 (stringList -> boolean PLUS String .)
    GT              reduce using rule 96 (stringList -> boolean PLUS String .)
    LTE             reduce using rule 96 (stringList -> boolean PLUS String .)
    GTE             reduce using rule 96 (stringList -> boolean PLUS String .)
    AND             reduce using rule 96 (stringList -> boolean PLUS String .)
    OR              reduce using rule 96 (stringList -> boolean PLUS String .)
    and             reduce using rule 96 (stringList -> boolean PLUS String .)
    or              reduce using rule 96 (stringList -> boolean PLUS String .)
    ID              reduce using rule 96 (stringList -> boolean PLUS String .)
    if              reduce using rule 96 (stringList -> boolean PLUS String .)
    case            reduce using rule 96 (stringList -> boolean PLUS String .)
    unless          reduce using rule 96 (stringList -> boolean PLUS String .)
    while           reduce using rule 96 (stringList -> boolean PLUS String .)
    require         reduce using rule 96 (stringList -> boolean PLUS String .)
    puts            reduce using rule 96 (stringList -> boolean PLUS String .)
    print           reduce using rule 96 (stringList -> boolean PLUS String .)
    MINUS           reduce using rule 96 (stringList -> boolean PLUS String .)
    NUMBER          reduce using rule 96 (stringList -> boolean PLUS String .)
    LPARENT         reduce using rule 96 (stringList -> boolean PLUS String .)
    FLOAT           reduce using rule 96 (stringList -> boolean PLUS String .)
    LSQUARE         reduce using rule 96 (stringList -> boolean PLUS String .)
    TEXT            reduce using rule 96 (stringList -> boolean PLUS String .)
    TEXT2           reduce using rule 96 (stringList -> boolean PLUS String .)
    when            reduce using rule 96 (stringList -> boolean PLUS String .)
    $end            reduce using rule 96 (stringList -> boolean PLUS String .)
    end             reduce using rule 96 (stringList -> boolean PLUS String .)
    else            reduce using rule 96 (stringList -> boolean PLUS String .)
    elsif           reduce using rule 96 (stringList -> boolean PLUS String .)
    PLUS            shift and go to state 87

  ! PLUS            [ reduce using rule 96 (stringList -> boolean PLUS String .) ]


state 154

    (98) stringList -> array PLUS String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID

  ! shift/reduce conflict for PLUS resolved as shift
    EQUAL           reduce using rule 98 (stringList -> array PLUS String .)
    NE              reduce using rule 98 (stringList -> array PLUS String .)
    LT              reduce using rule 98 (stringList -> array PLUS String .)
    GT              reduce using rule 98 (stringList -> array PLUS String .)
    LTE             reduce using rule 98 (stringList -> array PLUS String .)
    GTE             reduce using rule 98 (stringList -> array PLUS String .)
    AND             reduce using rule 98 (stringList -> array PLUS String .)
    OR              reduce using rule 98 (stringList -> array PLUS String .)
    and             reduce using rule 98 (stringList -> array PLUS String .)
    or              reduce using rule 98 (stringList -> array PLUS String .)
    ID              reduce using rule 98 (stringList -> array PLUS String .)
    if              reduce using rule 98 (stringList -> array PLUS String .)
    case            reduce using rule 98 (stringList -> array PLUS String .)
    unless          reduce using rule 98 (stringList -> array PLUS String .)
    while           reduce using rule 98 (stringList -> array PLUS String .)
    require         reduce using rule 98 (stringList -> array PLUS String .)
    puts            reduce using rule 98 (stringList -> array PLUS String .)
    print           reduce using rule 98 (stringList -> array PLUS String .)
    MINUS           reduce using rule 98 (stringList -> array PLUS String .)
    NUMBER          reduce using rule 98 (stringList -> array PLUS String .)
    LPARENT         reduce using rule 98 (stringList -> array PLUS String .)
    FLOAT           reduce using rule 98 (stringList -> array PLUS String .)
    LSQUARE         reduce using rule 98 (stringList -> array PLUS String .)
    TEXT            reduce using rule 98 (stringList -> array PLUS String .)
    TEXT2           reduce using rule 98 (stringList -> array PLUS String .)
    when            reduce using rule 98 (stringList -> array PLUS String .)
    $end            reduce using rule 98 (stringList -> array PLUS String .)
    end             reduce using rule 98 (stringList -> array PLUS String .)
    else            reduce using rule 98 (stringList -> array PLUS String .)
    elsif           reduce using rule 98 (stringList -> array PLUS String .)
    PLUS            shift and go to state 87

  ! PLUS            [ reduce using rule 98 (stringList -> array PLUS String .) ]


state 155

    (84) factor -> ID LSQUARE expression . RSQUARE
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    RSQUARE         shift and go to state 136
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 39

state 156

    (12) statement -> case comparables whenList else . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 177
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 157

    (41) whenList -> whenList when . comparables statementList
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    comparables                    shift and go to state 178
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 158

    (40) whenList -> when comparables . statementList
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 179
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 159

    (13) statement -> unless conditionList statementList else . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 180
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 160

    (17) statement -> while conditionList statementList end .

    ID              reduce using rule 17 (statement -> while conditionList statementList end .)
    if              reduce using rule 17 (statement -> while conditionList statementList end .)
    case            reduce using rule 17 (statement -> while conditionList statementList end .)
    unless          reduce using rule 17 (statement -> while conditionList statementList end .)
    while           reduce using rule 17 (statement -> while conditionList statementList end .)
    require         reduce using rule 17 (statement -> while conditionList statementList end .)
    puts            reduce using rule 17 (statement -> while conditionList statementList end .)
    print           reduce using rule 17 (statement -> while conditionList statementList end .)
    PLUS            reduce using rule 17 (statement -> while conditionList statementList end .)
    MINUS           reduce using rule 17 (statement -> while conditionList statementList end .)
    NUMBER          reduce using rule 17 (statement -> while conditionList statementList end .)
    LPARENT         reduce using rule 17 (statement -> while conditionList statementList end .)
    FLOAT           reduce using rule 17 (statement -> while conditionList statementList end .)
    LSQUARE         reduce using rule 17 (statement -> while conditionList statementList end .)
    TEXT            reduce using rule 17 (statement -> while conditionList statementList end .)
    TEXT2           reduce using rule 17 (statement -> while conditionList statementList end .)
    $end            reduce using rule 17 (statement -> while conditionList statementList end .)
    end             reduce using rule 17 (statement -> while conditionList statementList end .)
    else            reduce using rule 17 (statement -> while conditionList statementList end .)
    elsif           reduce using rule 17 (statement -> while conditionList statementList end .)
    when            reduce using rule 17 (statement -> while conditionList statementList end .)


state 161

    (110) arrayList -> LSQUARE arrayList RSQUARE .
    (106) array -> LSQUARE arrayList RSQUARE .

    RSQUARE         reduce using rule 110 (arrayList -> LSQUARE arrayList RSQUARE .)
    COMMA           reduce using rule 110 (arrayList -> LSQUARE arrayList RSQUARE .)
    TOINT           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TOSTR           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TOFLO           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LENGTH          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MEAN            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    STANDAR         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MEDIAN          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    VARIANCE        reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    SUM             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)


state 162

    (111) arrayList -> arrayList COMMA expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    RSQUARE         reduce using rule 111 (arrayList -> arrayList COMMA expression .)
    COMMA           reduce using rule 111 (arrayList -> arrayList COMMA expression .)
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 39

state 163

    (112) arrayList -> arrayList COMMA String .
    (100) String -> String . PLUS textList
    (101) String -> String . PLUS ID
    (87) factor -> String . funcList
    (90) optionList -> String .
    (73) funcList -> . TOINT
    (74) funcList -> . TOSTR
    (75) funcList -> . TOFLO

  ! shift/reduce conflict for TOINT resolved as shift
  ! shift/reduce conflict for TOSTR resolved as shift
  ! shift/reduce conflict for TOFLO resolved as shift
    RSQUARE         reduce using rule 112 (arrayList -> arrayList COMMA String .)
    COMMA           reduce using rule 112 (arrayList -> arrayList COMMA String .)
    PLUS            shift and go to state 87
    LENGTH          reduce using rule 90 (optionList -> String .)
    MEAN            reduce using rule 90 (optionList -> String .)
    STANDAR         reduce using rule 90 (optionList -> String .)
    MEDIAN          reduce using rule 90 (optionList -> String .)
    VARIANCE        reduce using rule 90 (optionList -> String .)
    SUM             reduce using rule 90 (optionList -> String .)
    TOINT           shift and go to state 77
    TOSTR           shift and go to state 78
    TOFLO           shift and go to state 79

  ! TOINT           [ reduce using rule 90 (optionList -> String .) ]
  ! TOSTR           [ reduce using rule 90 (optionList -> String .) ]
  ! TOFLO           [ reduce using rule 90 (optionList -> String .) ]

    funcList                       shift and go to state 86

state 164

    (113) arrayList -> arrayList COMMA boolean .

    RSQUARE         reduce using rule 113 (arrayList -> arrayList COMMA boolean .)
    COMMA           reduce using rule 113 (arrayList -> arrayList COMMA boolean .)


state 165

    (114) arrayList -> arrayList COMMA LSQUARE . arrayList RSQUARE
    (106) array -> LSQUARE . arrayList RSQUARE
    (107) arrayList -> . expression
    (108) arrayList -> . String
    (109) arrayList -> . boolean
    (110) arrayList -> . LSQUARE arrayList RSQUARE
    (111) arrayList -> . arrayList COMMA expression
    (112) arrayList -> . arrayList COMMA String
    (113) arrayList -> . arrayList COMMA boolean
    (114) arrayList -> . arrayList COMMA LSQUARE arrayList RSQUARE
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (104) boolean -> . true
    (105) boolean -> . false
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (106) array -> . LSQUARE arrayList RSQUARE

    LSQUARE         shift and go to state 60
    true            shift and go to state 50
    false           shift and go to state 51
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26

    arrayList                      shift and go to state 181
    expression                     shift and go to state 62
    String                         shift and go to state 63
    boolean                        shift and go to state 64
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    textList                       shift and go to state 28
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    array                          shift and go to state 7

state 166

    (22) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . expression
    (23) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . stringList
    (24) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . boolean
    (25) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 182
    stringList                     shift and go to state 183
    boolean                        shift and go to state 184
    array                          shift and go to state 185
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 167

    (28) statement -> ID LSQUARE arrayIdList RSQUARE assigList . expression
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 186
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    array                          shift and go to state 7
    textList                       shift and go to state 28

state 168

    (34) arrayIdList -> expression COMMA expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

    RSQUARE         reduce using rule 34 (arrayIdList -> expression COMMA expression .)
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

    addingOperator                 shift and go to state 39

state 169

    (14) statement -> expression CICLE1 iterable statementList end .

    ID              reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    if              reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    case            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    unless          reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    while           reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    require         reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    puts            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    print           reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    PLUS            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    MINUS           reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    NUMBER          reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    LPARENT         reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    FLOAT           reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    LSQUARE         reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    TEXT            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    TEXT2           reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    $end            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    end             reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    else            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    elsif           reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)
    when            reduce using rule 14 (statement -> expression CICLE1 iterable statementList end .)


state 170

    (37) iterable -> do BARR ID . BARR

    BARR            shift and go to state 187


state 171

    (15) statement -> expression CICLE2 iterable statementList end .

    ID              reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    if              reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    case            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    unless          reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    while           reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    require         reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    puts            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    print           reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    PLUS            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    MINUS           reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    NUMBER          reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    LPARENT         reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    FLOAT           reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    LSQUARE         reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    TEXT            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    TEXT2           reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    $end            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    end             reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    else            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    elsif           reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)
    when            reduce using rule 15 (statement -> expression CICLE2 iterable statementList end .)


state 172

    (16) statement -> expression CICLE3 do BARR ID . COMMA ID BARR statementList end

    COMMA           shift and go to state 188


state 173

    (10) statement -> if conditionList statementList else statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 189
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 174

    (11) statement -> if conditionList statementList elseifList else . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 190
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 175

    (39) elseifList -> elseifList elsif . conditionList statementList
    (42) conditionList -> . condition
    (43) conditionList -> . conditionList logicRelation condition
    (44) condition -> . comparables relation comparables
    (45) condition -> . NOT comparables
    (46) condition -> . not comparables
    (47) condition -> . comparables
    (48) comparables -> . expression
    (49) comparables -> . stringList
    (50) comparables -> . boolean
    (51) comparables -> . array
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (91) stringList -> . String
    (92) stringList -> . stringList PLUS expression
    (93) stringList -> . stringList PLUS String
    (94) stringList -> . stringList PLUS boolean
    (95) stringList -> . stringList PLUS array
    (96) stringList -> . boolean PLUS String
    (97) stringList -> . expression PLUS String
    (98) stringList -> . array PLUS String
    (104) boolean -> . true
    (105) boolean -> . false
    (106) array -> . LSQUARE arrayList RSQUARE
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (102) textList -> . TEXT
    (103) textList -> . TEXT2
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String

    NOT             shift and go to state 43
    not             shift and go to state 44
    true            shift and go to state 50
    false           shift and go to state 51
    LSQUARE         shift and go to state 13
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    ID              shift and go to state 52
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    conditionList                  shift and go to state 191
    condition                      shift and go to state 41
    comparables                    shift and go to state 42
    expression                     shift and go to state 45
    stringList                     shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    String                         shift and go to state 49
    factor                         shift and go to state 20
    textList                       shift and go to state 28
    optionList                     shift and go to state 25

state 176

    (38) elseifList -> elsif conditionList . statementList
    (43) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (58) logicRelation -> . AND
    (59) logicRelation -> . OR
    (60) logicRelation -> . and
    (61) logicRelation -> . or
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    AND             shift and go to state 104
    OR              shift and go to state 105
    and             shift and go to state 106
    or              shift and go to state 107
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 192
    logicRelation                  shift and go to state 103
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 177

    (12) statement -> case comparables whenList else statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 193
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 178

    (41) whenList -> whenList when comparables . statementList
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 194
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 179

    (40) whenList -> when comparables statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    else            reduce using rule 40 (whenList -> when comparables statementList .)
    when            reduce using rule 40 (whenList -> when comparables statementList .)
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 180

    (13) statement -> unless conditionList statementList else statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 195
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 181

    (114) arrayList -> arrayList COMMA LSQUARE arrayList . RSQUARE
    (106) array -> LSQUARE arrayList . RSQUARE
    (111) arrayList -> arrayList . COMMA expression
    (112) arrayList -> arrayList . COMMA String
    (113) arrayList -> arrayList . COMMA boolean
    (114) arrayList -> arrayList . COMMA LSQUARE arrayList RSQUARE

    RSQUARE         shift and go to state 196
    COMMA           shift and go to state 128


state 182

    (22) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .
    (68) expression -> expression . addingOperator term
    (97) stringList -> expression . PLUS String
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    if              reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    case            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    unless          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    while           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    require         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    puts            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    print           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    NUMBER          reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    LPARENT         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    FLOAT           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    LSQUARE         reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    TEXT            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    TEXT2           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    $end            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    end             reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    else            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    elsif           reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    when            reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .)
    PLUS            shift and go to state 117
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 22 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN expression .) ]

    addingOperator                 shift and go to state 39

state 183

    (23) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .
    (92) stringList -> stringList . PLUS expression
    (93) stringList -> stringList . PLUS String
    (94) stringList -> stringList . PLUS boolean
    (95) stringList -> stringList . PLUS array

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    if              reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    case            reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    unless          reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    while           reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    require         reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    puts            reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    print           reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    MINUS           reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    NUMBER          reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    LPARENT         reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    FLOAT           reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    LSQUARE         reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    TEXT            reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    TEXT2           reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    $end            reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    end             reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    else            reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    elsif           reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    when            reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .)
    PLUS            shift and go to state 118

  ! PLUS            [ reduce using rule 23 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN stringList .) ]


state 184

    (24) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .
    (96) stringList -> boolean . PLUS String

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    if              reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    case            reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    unless          reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    while           reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    require         reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    puts            reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    print           reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    MINUS           reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    NUMBER          reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    LPARENT         reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    FLOAT           reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    LSQUARE         reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    TEXT            reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    TEXT2           reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    $end            reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    end             reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    else            reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    elsif           reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    when            reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .)
    PLUS            shift and go to state 119

  ! PLUS            [ reduce using rule 24 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN boolean .) ]


state 185

    (25) statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .
    (98) stringList -> array . PLUS String
    (89) optionList -> array .

  ! shift/reduce conflict for PLUS resolved as shift
    ID              reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    if              reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    case            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    unless          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    while           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    require         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    puts            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    print           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    MINUS           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    NUMBER          reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    LPARENT         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    FLOAT           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    LSQUARE         reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    TEXT            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    TEXT2           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    $end            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    end             reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    else            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    elsif           reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    when            reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .)
    PLUS            shift and go to state 120
    TOINT           reduce using rule 89 (optionList -> array .)
    TOSTR           reduce using rule 89 (optionList -> array .)
    TOFLO           reduce using rule 89 (optionList -> array .)
    LENGTH          reduce using rule 89 (optionList -> array .)
    MEAN            reduce using rule 89 (optionList -> array .)
    STANDAR         reduce using rule 89 (optionList -> array .)
    MEDIAN          reduce using rule 89 (optionList -> array .)
    VARIANCE        reduce using rule 89 (optionList -> array .)
    SUM             reduce using rule 89 (optionList -> array .)

  ! PLUS            [ reduce using rule 25 (statement -> ID LSQUARE arrayIdList RSQUARE ASSIGN array .) ]


state 186

    (28) statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .
    (68) expression -> expression . addingOperator term
    (88) optionList -> expression .
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    if              reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    case            reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    unless          reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    while           reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    require         reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    puts            reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    print           reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    NUMBER          reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    LPARENT         reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    FLOAT           reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    LSQUARE         reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    TEXT            reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    TEXT2           reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    $end            reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    end             reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    else            reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    elsif           reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    when            reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .)
    TOINT           reduce using rule 88 (optionList -> expression .)
    TOSTR           reduce using rule 88 (optionList -> expression .)
    TOFLO           reduce using rule 88 (optionList -> expression .)
    LENGTH          reduce using rule 88 (optionList -> expression .)
    MEAN            reduce using rule 88 (optionList -> expression .)
    STANDAR         reduce using rule 88 (optionList -> expression .)
    MEDIAN          reduce using rule 88 (optionList -> expression .)
    VARIANCE        reduce using rule 88 (optionList -> expression .)
    SUM             reduce using rule 88 (optionList -> expression .)
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! PLUS            [ reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .) ]
  ! MINUS           [ reduce using rule 28 (statement -> ID LSQUARE arrayIdList RSQUARE assigList expression .) ]

    addingOperator                 shift and go to state 39

state 187

    (37) iterable -> do BARR ID BARR .

    ID              reduce using rule 37 (iterable -> do BARR ID BARR .)
    if              reduce using rule 37 (iterable -> do BARR ID BARR .)
    case            reduce using rule 37 (iterable -> do BARR ID BARR .)
    unless          reduce using rule 37 (iterable -> do BARR ID BARR .)
    while           reduce using rule 37 (iterable -> do BARR ID BARR .)
    require         reduce using rule 37 (iterable -> do BARR ID BARR .)
    puts            reduce using rule 37 (iterable -> do BARR ID BARR .)
    print           reduce using rule 37 (iterable -> do BARR ID BARR .)
    PLUS            reduce using rule 37 (iterable -> do BARR ID BARR .)
    MINUS           reduce using rule 37 (iterable -> do BARR ID BARR .)
    NUMBER          reduce using rule 37 (iterable -> do BARR ID BARR .)
    LPARENT         reduce using rule 37 (iterable -> do BARR ID BARR .)
    FLOAT           reduce using rule 37 (iterable -> do BARR ID BARR .)
    LSQUARE         reduce using rule 37 (iterable -> do BARR ID BARR .)
    TEXT            reduce using rule 37 (iterable -> do BARR ID BARR .)
    TEXT2           reduce using rule 37 (iterable -> do BARR ID BARR .)


state 188

    (16) statement -> expression CICLE3 do BARR ID COMMA . ID BARR statementList end

    ID              shift and go to state 197


state 189

    (10) statement -> if conditionList statementList else statementList end .

    ID              reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    if              reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    case            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    unless          reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    while           reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    require         reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    puts            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    print           reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    PLUS            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    MINUS           reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    NUMBER          reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    LPARENT         reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    FLOAT           reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    LSQUARE         reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    TEXT            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    TEXT2           reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    $end            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    end             reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    else            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    elsif           reduce using rule 10 (statement -> if conditionList statementList else statementList end .)
    when            reduce using rule 10 (statement -> if conditionList statementList else statementList end .)


state 190

    (11) statement -> if conditionList statementList elseifList else statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 198
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 191

    (39) elseifList -> elseifList elsif conditionList . statementList
    (43) conditionList -> conditionList . logicRelation condition
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (58) logicRelation -> . AND
    (59) logicRelation -> . OR
    (60) logicRelation -> . and
    (61) logicRelation -> . or
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    AND             shift and go to state 104
    OR              shift and go to state 105
    and             shift and go to state 106
    or              shift and go to state 107
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statementList                  shift and go to state 199
    logicRelation                  shift and go to state 103
    statement                      shift and go to state 4
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 192

    (38) elseifList -> elsif conditionList statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    else            reduce using rule 38 (elseifList -> elsif conditionList statementList .)
    elsif           reduce using rule 38 (elseifList -> elsif conditionList statementList .)
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 193

    (12) statement -> case comparables whenList else statementList end .

    ID              reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    if              reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    case            reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    unless          reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    while           reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    require         reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    puts            reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    print           reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    PLUS            reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    MINUS           reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    NUMBER          reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    LPARENT         reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    FLOAT           reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    LSQUARE         reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    TEXT            reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    TEXT2           reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    $end            reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    end             reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    else            reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    elsif           reduce using rule 12 (statement -> case comparables whenList else statementList end .)
    when            reduce using rule 12 (statement -> case comparables whenList else statementList end .)


state 194

    (41) whenList -> whenList when comparables statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    else            reduce using rule 41 (whenList -> whenList when comparables statementList .)
    when            reduce using rule 41 (whenList -> whenList when comparables statementList .)
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 195

    (13) statement -> unless conditionList statementList else statementList end .

    ID              reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    if              reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    case            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    unless          reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    while           reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    require         reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    puts            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    print           reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    PLUS            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    MINUS           reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    NUMBER          reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    LPARENT         reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    FLOAT           reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    LSQUARE         reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    TEXT            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    TEXT2           reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    $end            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    end             reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    else            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    elsif           reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)
    when            reduce using rule 13 (statement -> unless conditionList statementList else statementList end .)


state 196

    (114) arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE .
    (106) array -> LSQUARE arrayList RSQUARE .

    RSQUARE         reduce using rule 114 (arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE .)
    COMMA           reduce using rule 114 (arrayList -> arrayList COMMA LSQUARE arrayList RSQUARE .)
    TOINT           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TOSTR           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    TOFLO           reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    LENGTH          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MEAN            reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    STANDAR         reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    MEDIAN          reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    VARIANCE        reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)
    SUM             reduce using rule 106 (array -> LSQUARE arrayList RSQUARE .)


state 197

    (16) statement -> expression CICLE3 do BARR ID COMMA ID . BARR statementList end

    BARR            shift and go to state 200


state 198

    (11) statement -> if conditionList statementList elseifList else statementList end .

    ID              reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    if              reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    case            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    unless          reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    while           reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    require         reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    puts            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    print           reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    PLUS            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    MINUS           reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    NUMBER          reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    LPARENT         reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    FLOAT           reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    LSQUARE         reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    TEXT            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    TEXT2           reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    $end            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    end             reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    else            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    elsif           reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)
    when            reduce using rule 11 (statement -> if conditionList statementList elseifList else statementList end .)


state 199

    (39) elseifList -> elseifList elsif conditionList statementList .
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    else            reduce using rule 39 (elseifList -> elseifList elsif conditionList statementList .)
    elsif           reduce using rule 39 (elseifList -> elseifList elsif conditionList statementList .)
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    statement                      shift and go to state 30
    expression                     shift and go to state 6
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 200

    (16) statement -> expression CICLE3 do BARR ID COMMA ID BARR . statementList end
    (3) statementList -> . statement
    (4) statementList -> . statementList statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 6
    statementList                  shift and go to state 201
    statement                      shift and go to state 4
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 201

    (16) statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList . end
    (4) statementList -> statementList . statement
    (5) statement -> . ID ASSIGN expression
    (6) statement -> . ID ASSIGN stringList
    (7) statement -> . ID ASSIGN boolean
    (8) statement -> . ID ASSIGN array
    (9) statement -> . if conditionList statementList end
    (10) statement -> . if conditionList statementList else statementList end
    (11) statement -> . if conditionList statementList elseifList else statementList end
    (12) statement -> . case comparables whenList else statementList end
    (13) statement -> . unless conditionList statementList else statementList end
    (14) statement -> . expression CICLE1 iterable statementList end
    (15) statement -> . expression CICLE2 iterable statementList end
    (16) statement -> . expression CICLE3 do BARR ID COMMA ID BARR statementList end
    (17) statement -> . while conditionList statementList end
    (18) statement -> . printList stringList
    (19) statement -> . printList expression
    (20) statement -> . printList boolean
    (21) statement -> . ID ASSIGN KeyEntry
    (22) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN expression
    (23) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN stringList
    (24) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN boolean
    (25) statement -> . ID LSQUARE arrayIdList RSQUARE ASSIGN array
    (26) statement -> . ID
    (27) statement -> . ID assigList expression
    (28) statement -> . ID LSQUARE arrayIdList RSQUARE assigList expression
    (29) statement -> . printList array
    (30) statement -> . require TEXT2
    (66) expression -> . term
    (67) expression -> . addingOperator term
    (68) expression -> . expression addingOperator term
    (64) printList -> . puts
    (65) printList -> . print
    (71) term -> . factor
    (72) term -> . term multiplyingOperator factor
    (69) addingOperator -> . PLUS
    (70) addingOperator -> . MINUS
    (80) factor -> . ID
    (81) factor -> . NUMBER
    (82) factor -> . LPARENT optionList RPARENT
    (83) factor -> . FLOAT
    (84) factor -> . ID LSQUARE expression RSQUARE
    (85) factor -> . optionList funcList
    (86) factor -> . optionList funcVecList
    (87) factor -> . String funcList
    (88) optionList -> . expression
    (89) optionList -> . array
    (90) optionList -> . String
    (99) String -> . textList
    (100) String -> . String PLUS textList
    (101) String -> . String PLUS ID
    (106) array -> . LSQUARE arrayList RSQUARE
    (102) textList -> . TEXT
    (103) textList -> . TEXT2

    end             shift and go to state 202
    ID              shift and go to state 5
    if              shift and go to state 8
    case            shift and go to state 9
    unless          shift and go to state 10
    while           shift and go to state 11
    require         shift and go to state 14
    puts            shift and go to state 18
    print           shift and go to state 19
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22
    NUMBER          shift and go to state 23
    LPARENT         shift and go to state 24
    FLOAT           shift and go to state 26
    LSQUARE         shift and go to state 13
    TEXT            shift and go to state 29
    TEXT2           shift and go to state 15

    expression                     shift and go to state 6
    statement                      shift and go to state 30
    array                          shift and go to state 7
    printList                      shift and go to state 12
    term                           shift and go to state 16
    addingOperator                 shift and go to state 17
    factor                         shift and go to state 20
    optionList                     shift and go to state 25
    String                         shift and go to state 27
    textList                       shift and go to state 28

state 202

    (16) statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .

    ID              reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    if              reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    case            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    unless          reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    while           reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    require         reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    puts            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    print           reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    PLUS            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    MINUS           reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    NUMBER          reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    LPARENT         reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    FLOAT           reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    LSQUARE         reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    TEXT            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    TEXT2           reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    $end            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    end             reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    else            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    elsif           reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)
    when            reduce using rule 16 (statement -> expression CICLE3 do BARR ID COMMA ID BARR statementList end .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LSQUARE in state 5 resolved as shift
WARNING: shift/reduce conflict for TOINT in state 27 resolved as shift
WARNING: shift/reduce conflict for TOSTR in state 27 resolved as shift
WARNING: shift/reduce conflict for TOFLO in state 27 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 49 resolved as shift
WARNING: shift/reduce conflict for TOINT in state 49 resolved as shift
WARNING: shift/reduce conflict for TOSTR in state 49 resolved as shift
WARNING: shift/reduce conflict for TOFLO in state 49 resolved as shift
WARNING: shift/reduce conflict for LSQUARE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TOINT in state 63 resolved as shift
WARNING: shift/reduce conflict for TOSTR in state 63 resolved as shift
WARNING: shift/reduce conflict for TOFLO in state 63 resolved as shift
WARNING: shift/reduce conflict for TOINT in state 74 resolved as shift
WARNING: shift/reduce conflict for TOSTR in state 74 resolved as shift
WARNING: shift/reduce conflict for TOFLO in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 91 resolved as shift
WARNING: shift/reduce conflict for RSQUARE in state 95 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 117 resolved as shift
WARNING: shift/reduce conflict for TEXT2 in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 148 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for TOINT in state 150 resolved as shift
WARNING: shift/reduce conflict for TOSTR in state 150 resolved as shift
WARNING: shift/reduce conflict for TOFLO in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 153 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for TOINT in state 163 resolved as shift
WARNING: shift/reduce conflict for TOSTR in state 163 resolved as shift
WARNING: shift/reduce conflict for TOFLO in state 163 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 182 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 182 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 183 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 184 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 185 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (statement -> ID)
WARNING: rejected rule (factor -> ID) in state 5
WARNING: reduce/reduce conflict in state 71 resolved using rule (expression -> term)
WARNING: rejected rule (expression -> addingOperator term) in state 71
WARNING: reduce/reduce conflict in state 101 resolved using rule (expression -> term)
WARNING: rejected rule (expression -> expression addingOperator term) in state 101
WARNING: reduce/reduce conflict in state 129 resolved using rule (term -> factor)
WARNING: rejected rule (term -> term multiplyingOperator factor) in state 129
